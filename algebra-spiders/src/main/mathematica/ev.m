{HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,10), (4,11), (6,10), \
(5,14)), List((5,10), (7,14), (9,12), (8,13)), List((6,14), (8,10), (9,13), \
(7,12))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,10), (4,11), (6,10), \
(5,14)), List((8,13), (5,10), (7,14), (9,12)), List((7,12), (6,14), (8,10), \
(9,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,10), (4,12), (7,10), \
(8,11)), List((6,10), (6,13), (9,10), (7,11)), List((9,11), (5,10), (5,14), \
(8,10))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,10), (4,12), (7,10), \
(8,11)), List((7,11), (6,10), (6,13), (9,10)), List((5,10), (5,14), (8,10), \
(9,11))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,10), (6,11), (5,14), \
(4,11)), List((5,11), (7,14), (9,12), (8,13)), List((7,12), (6,14), (8,11), \
(9,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^34*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,11), (4,10), (6,11), \
(5,14)), List((5,11), (7,14), (9,12), (8,13)), List((6,14), (8,11), (9,13), \
(7,12))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,11), (4,10), (6,11), \
(5,14)), List((8,13), (5,11), (7,14), (9,12)), List((7,12), (6,14), (8,11), \
(9,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,11), (5,12), (6,10), \
(4,12)), List((8,14), (5,10), (7,12), (9,13)), List((6,12), (8,10), (9,14), \
(7,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^34*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,11), (5,12), (6,10), \
(4,12)), List((8,14), (5,10), (7,12), (9,13)), List((7,13), (6,12), (8,10), \
(9,14))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2/v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,11), (5,14), (8,12), \
(7,10)), List((8,10), (5,12), (6,14), (9,13)), List((4,14), (7,11), (9,10), \
(6,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,11), (5,14), (8,12), \
(7,10)), List((8,10), (5,12), (6,14), (9,13)), List((6,13), (4,14), (7,11), \
(9,10))),ArrayBuffer((2,0), (2,0), (2,0)),1)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,11), (6,12), (5,14), \
(4,12)), List((5,12), (7,14), (8,10), (9,13)), List((7,10), (6,14), (9,12), \
(8,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^34*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,11), (6,12), (5,14), \
(4,12)), List((5,12), (7,14), (8,13), (9,10)), List((7,13), (6,14), (9,12), \
(8,10))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^34*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,11), (6,12), (5,14), \
(4,12)), List((9,10), (5,12), (7,14), (8,13)), List((7,13), (6,14), (9,12), \
(8,10))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2/v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,12), (4,11), (5,12), \
(6,10)), List((5,10), (7,12), (9,13), (8,14)), List((6,12), (8,10), (9,14), \
(7,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,12), (4,11), (5,12), \
(6,10)), List((5,10), (7,12), (9,13), (8,14)), List((7,13), (6,12), (8,10), \
(9,14))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,12), (4,11), (5,12), \
(6,10)), List((8,14), (5,10), (7,12), (9,13)), List((7,13), (6,12), (8,10), \
(9,14))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,12), (4,11), (6,12), \
(5,14)), List((5,12), (7,14), (8,13), (9,10)), List((6,14), (9,12), (8,10), \
(7,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,12), (4,11), (6,12), \
(5,14)), List((9,10), (5,12), (7,14), (8,13)), List((6,14), (9,12), (8,10), \
(7,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,12), (4,11), (6,12), \
(5,14)), List((9,10), (5,12), (7,14), (8,13)), List((7,13), (6,14), (9,12), \
(8,10))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,12), (4,11), (6,12), \
(5,14)), List((9,13), (5,12), (7,14), (8,10)), List((7,10), (6,14), (9,12), \
(8,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((4,14), (4,10), (7,14), \
(8,11)), List((5,13), (9,14), (7,11), (5,14)), List((6,14), (6,12), (8,14), \
(9,11))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((5,14), (4,10), (4,11), \
(6,10)), List((5,10), (7,14), (9,12), (8,13)), List((7,12), (6,14), (8,10), \
(9,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^34*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((6,12), (9,10), (7,11), \
(8,10)), List((4,10), (4,14), (6,10), (8,12)), List((5,10), (5,13), (7,10), \
(9,11))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((6,12), (9,13), (7,11), \
(8,14)), List((5,14), (4,10), (6,13), (8,12)), List((4,13), (5,10), (7,14), \
(9,11))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((6,12), (9,13), (7,11), \
(8,14)), List((5,14), (4,10), (6,13), (8,12)), List((9,11), (4,13), (5,10), \
(7,14))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((6,14), (8,10), (9,11), \
(7,10)), List((5,10), (5,12), (9,10), (8,11)), List((4,13), (7,14), (6,10), \
(4,14))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((7,10), (4,11), (5,14), \
(8,12)), List((5,12), (6,14), (9,13), (8,10)), List((4,14), (7,11), (9,10), \
(6,13))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((7,10), (4,11), (5,14), \
(8,12)), List((5,12), (6,14), (9,13), (8,10)), List((6,13), (4,14), (7,11), \
(9,10))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((7,10), (4,11), (5,14), \
(8,12)), List((8,10), (5,12), (6,14), (9,13)), List((4,14), (7,11), (9,10), \
(6,13))),ArrayBuffer((2,0), (2,0), (2,0)),1)"]] :> 
  -((d^2*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 
      2*v^16 - 3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 
      4*v^26 + 2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - 
      d^2*v^30 + v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 
      2*d^2*v^36 + 3*v^38 - 6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 
      2*d^2*v^40 + v^42 + 2*d*v^42 - v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 
      6*v^48 + 3*d*v^48 - d^2*v^48 + 4*d*v^50 - d^2*v^50 - 4*v^52 + 
      3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 4*v^58 - 2*d*v^58 + 4*v^60 - 
      d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - d*v^72 - 2*v^74))/
    (v^32*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((7,10), (4,11), (5,14), \
(8,12)), List((8,10), (5,12), (6,14), (9,13)), List((6,13), (4,14), (7,11), \
(9,10))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((7,10), (6,14), (8,10), \
(9,11)), List((5,10), (5,12), (9,10), (8,11)), List((4,14), (4,13), (7,14), \
(6,10))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^36, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((8,10), (6,12), (9,10), \
(7,11)), List((4,10), (4,14), (6,10), (8,12)), List((5,10), (5,13), (7,10), \
(9,11))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^36, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((8,10), (6,12), (9,10), \
(7,11)), List((4,10), (4,14), (6,10), (8,12)), List((9,11), (5,10), (5,13), \
(7,10))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((8,10), (6,12), (9,10), \
(7,11)), List((8,12), (4,10), (4,14), (6,10)), List((5,10), (5,13), (7,10), \
(9,11))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((8,11), (4,10), (4,12), \
(7,10)), List((6,10), (6,13), (9,10), (7,11)), List((5,10), (5,14), (8,10), \
(9,11))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((8,14), (6,12), (9,13), \
(7,11)), List((4,10), (6,13), (8,12), (5,14)), List((4,13), (5,10), (7,14), \
(9,11))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((8,14), (6,12), (9,13), \
(7,11)), List((4,10), (6,13), (8,12), (5,14)), List((9,11), (4,13), (5,10), \
(7,14))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((8,14), (6,12), (9,13), \
(7,11)), List((5,14), (4,10), (6,13), (8,12)), List((9,11), (4,13), (5,10), \
(7,14))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(10,Vector(List(), List((9,13), (6,11), (7,10), \
(8,12)), List((6,10), (9,11), (8,13), (7,12)), List((4,10), (4,14), (5,10), \
(5,15))),ArrayBuffer((2,0), (2,0), (2,0)),0)"]] :> 
  (d^2*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,11), (5,12), (6,11)), \
List((6,11), (8,11), (7,14)), List((7,11), (9,14), (10,13)), List((8,14), \
(10,11), (9,13))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,11), (6,12), (5,12)), \
List((6,12), (8,12), (7,14)), List((7,12), (9,14), (10,13)), List((8,14), \
(10,12), (9,13))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,11), (6,15), (9,12)), \
List((5,15), (9,11), (6,12)), List((7,13), (8,15), (10,14)), List((7,15), \
(10,13), (8,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,11), (8,12), (6,14)), \
List((5,12), (7,11), (10,13)), List((6,11), (9,14), (7,13)), List((8,14), \
(10,12), (9,13))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,11), (8,12), (6,14)), \
List((5,12), (7,11), (10,13)), List((6,11), (9,14), (7,13)), List((8,14), \
(10,12), (9,13))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),1)"]] :> 
  (d^2*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,11), (9,12), (6,13)), \
List((5,12), (6,11), (9,13)), List((7,14), (8,11), (10,15)), List((7,11), \
(10,14), (8,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,12), (8,13), (5,13)), \
List((8,13), (10,13), (9,11)), List((6,14), (9,13), (7,11)), List((6,13), \
(7,14), (10,11))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,12), (9,13), (5,13)), \
List((6,14), (9,13), (7,13)), List((6,13), (8,14), (10,11)), List((7,14), \
(10,13), (8,11))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,14), (9,11), (7,13)), \
List((6,14), (10,11), (8,12)), List((6,11), (7,14), (9,13)), List((5,11), \
(8,14), (10,12))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((5,14), (9,11), (7,13)), \
List((6,14), (10,11), (8,12)), List((6,11), (7,14), (9,13)), List((5,11), \
(8,14), (10,12))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),1)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((7,11), (8,12), (10,11)), \
List((7,12), (9,11), (8,11)), List((5,11), (5,14), (9,11)), List((6,11), \
(6,13), (10,11))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((7,11), (9,14), (8,14)), \
List((7,14), (10,11), (8,11)), List((6,11), (6,12), (10,11)), List((5,13), \
(9,14), (5,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((7,13), (8,12), (10,14)), \
List((7,12), (9,13), (8,14)), List((5,11), (10,13), (6,14)), List((5,13), \
(6,11), (9,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((7,13), (8,12), (10,14)), \
List((7,12), (9,13), (8,14)), List((5,11), (10,13), (6,14)), List((5,13), \
(6,11), (9,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),1)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((7,14), (8,11), (10,14)), \
List((7,11), (9,14), (8,14)), List((5,13), (9,14), (5,14)), List((6,12), \
(10,14), (6,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((7,14), (8,12), (10,14)), \
List((7,12), (9,14), (8,14)), List((6,13), (10,14), (6,14)), List((5,11), \
(9,14), (5,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((7,14), (8,13), (10,14)), \
List((7,13), (8,14), (9,13)), List((6,12), (9,13), (6,13)), List((5,11), \
(10,14), (5,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((8,11), (9,11), (10,11)), \
List((5,11), (5,12), (8,11)), List((6,11), (6,14), (10,11)), List((7,11), \
(7,13), (9,11))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(11,Vector(List(), List((8,14), (9,14), (10,14)), \
List((5,11), (8,14), (5,14)), List((6,13), (10,14), (6,14)), List((7,12), \
(9,14), (7,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((11,13), (7,12), (9,16), \
(8,16)), List((7,16), (10,12), (8,13)), List((6,12), (6,14), (11,12), \
(10,13)), List((5,15), (9,16), (5,16))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), \
(5,13), (6,12)), List((6,12), (7,12), (9,16), (8,15)), List((9,15), (10,16), \
(11,14)), List((10,14), (7,16), (8,12), (11,15))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (6,12)), \
List((6,12), (8,12), (7,16), (9,15)), List((9,12), (11,15), (10,14)), \
List((7,15), (8,16), (10,12), (11,14))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), \
(5,13), (6,12)), List((6,12), (8,12), (7,16)), List((7,12), (9,16), (11,14), \
(10,15)), List((8,16), (10,12), (11,15), (9,14))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (6,12)), \
List((6,12), (8,12), (7,16)), List((7,12), (9,16), (11,14), (10,15)), \
List((9,14), (8,16), (10,12), (11,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), \
(5,13), (6,12)), List((6,12), (9,12), (8,15), (7,16)), List((9,15), (10,12), \
(11,14)), List((7,12), (8,16), (11,15), (10,14))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (6,12)), \
List((7,16), (6,12), (9,12), (8,15)), List((9,15), (10,12), (11,14)), \
List((7,12), (8,16), (11,15), (10,14))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), \
(5,13), (6,12)), List((9,15), (6,12), (8,12), (7,16)), List((9,12), (11,15), \
(10,14)), List((7,15), (8,16), (10,12), (11,14))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((11,12), (8,14), (9,16), (10,15)), List((6,12), (8,16), \
(11,14)), List((7,16), (10,12), (9,15))),ArrayBuffer((2,0), (2,0), (1,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((8,14), (9,16), (10,15), (11,12)), List((6,12), (8,16), \
(11,14)), List((7,16), (10,12), (9,15))),ArrayBuffer((2,0), (2,0), (1,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((8,15), (9,16), (10,14)), List((6,12), (8,16), (11,15)), \
List((7,16), (11,12), (10,15), (9,14))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((8,15), (9,16), (10,14)), List((6,12), (8,16), (11,15)), \
List((9,14), (7,16), (11,12), (10,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((8,16), (10,15), (9,14)), List((11,15), (6,12), (9,16), \
(10,14)), List((7,16), (11,12), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((8,16), (10,15), (9,14)), List((6,12), (9,16), (10,14), \
(11,15)), List((7,16), (11,12), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((9,12), (10,15), (11,14)), List((6,12), (8,16), (10,14), \
(9,15)), List((7,16), (11,12), (8,14))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((9,12), (10,15), (11,14)), List((9,15), (6,12), (8,16), \
(10,14)), List((7,16), (11,12), (8,14))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((9,15), (10,12), (11,14)), List((10,14), (8,12), (9,12), \
(11,15)), List((6,12), (7,16), (8,12))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), \
(5,13), (7,12), (6,16)), List((9,15), (10,12), (11,14)), List((8,12), (9,12), \
(11,15), (10,14)), List((6,12), (7,16), (8,12))),ArrayBuffer((2,0), (1,0), \
(2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((9,15), (11,12), (10,14)), List((6,12), (8,16), (11,14)), \
List((7,16), (9,12), (10,15), (8,14))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((9,15), (11,12), (10,14)), List((6,12), (8,16), (11,14)), \
List((8,14), (7,16), (9,12), (10,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (5,13), (7,12), \
(6,16)), List((9,15), (11,12), (10,14)), List((8,12), (10,15), (11,14)), \
List((6,12), (7,16), (9,12), (8,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> d*v^24, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((5,12), (5,13), (7,12), (6,16)), List((9,15), (11,12), (10,14)), \
List((8,12), (10,15), (11,14)), List((8,15), (6,12), (7,16), \
(9,12))),ArrayBuffer((2,0), (1,0), (1,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (6,13), (5,13)), \
List((6,13), (7,13), (9,16), (8,15)), List((9,15), (10,16), (11,14)), \
List((10,14), (7,16), (8,13), (11,15))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), \
(6,13), (5,13)), List((6,13), (8,13), (7,16)), List((7,13), (9,16), (11,14), \
(10,15)), List((8,16), (10,13), (11,15), (9,14))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (6,13), (5,13)), \
List((6,13), (8,13), (7,16)), List((7,13), (9,16), (11,14), (10,15)), \
List((9,14), (8,16), (10,13), (11,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), \
(6,13), (5,13)), List((6,13), (9,13), (8,15), (7,16)), List((9,15), (10,13), \
(11,14)), List((7,13), (8,16), (11,15), (10,14))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (6,13), (5,13)), \
List((9,15), (6,13), (8,13), (7,16)), List((9,13), (11,15), (10,14)), \
List((7,15), (8,16), (10,13), (11,14))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), \
(6,16), (9,13)), List((7,15), (8,16), (10,14)), List((6,13), (7,16), (11,15), \
(9,12)), List((5,16), (11,12), (10,15), (8,14))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (6,16), (9,13)), \
List((7,15), (8,16), (10,14)), List((6,13), (7,16), (11,15), (9,12)), \
List((8,14), (5,16), (11,12), (10,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d/v^12, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((5,12), (6,16), (9,13)), List((7,15), (8,16), (10,14)), List((9,12), \
(6,13), (7,16), (11,15)), List((5,16), (11,12), (10,15), \
(8,14))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (6,16), (9,13)), \
List((7,15), (8,16), (10,14)), List((9,12), (6,13), (7,16), (11,15)), \
List((8,14), (5,16), (11,12), (10,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), \
(7,13), (6,16), (5,13)), List((8,15), (9,16), (10,14)), List((6,13), (8,16), \
(11,15)), List((9,14), (7,16), (11,13), (10,15))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (7,13), (6,16), \
(5,13)), List((8,16), (10,15), (9,14)), List((6,13), (9,16), (10,14), \
(11,15)), List((7,16), (11,13), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (7,13), (6,16), \
(5,13)), List((9,13), (10,15), (11,14)), List((6,13), (8,16), (10,14), \
(9,15)), List((7,16), (11,13), (8,14))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (7,13), (6,16), \
(5,13)), List((9,14), (10,15), (11,13)), List((6,13), (8,16), (11,14)), \
List((8,14), (7,16), (10,13), (9,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (7,15), (6,16)), \
List((5,15), (6,12), (8,16)), List((10,13), (7,16), (9,15), (11,14)), \
List((8,15), (10,16), (11,13), (9,14))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
     d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + 
     d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,12), (7,15), (6,16)), \
List((5,15), (6,12), (8,16)), List((7,16), (9,15), (11,14), (10,13)), \
List((8,15), (10,16), (11,13), (9,14))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d^2, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((5,13), (5,12), (7,13), (6,16)), List((10,13), (8,14), (9,16), (11,15)), \
List((6,13), (8,16), (10,14)), List((7,16), (11,13), \
(9,15))),ArrayBuffer((2,0), (2,0), (1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,12), (7,13), \
(6,16)), List((8,16), (10,15), (9,14)), List((11,15), (6,13), (9,16), \
(10,14)), List((7,16), (11,13), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,12), (7,13), \
(6,16)), List((8,16), (10,15), (9,14)), List((6,13), (9,16), (10,14), \
(11,15)), List((7,16), (11,13), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,12), (7,13), \
(6,16)), List((9,13), (10,15), (11,14)), List((6,13), (8,16), (10,14), \
(9,15)), List((7,16), (11,13), (8,14))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,12), (7,13), \
(6,16)), List((9,13), (10,15), (11,14)), List((9,15), (6,13), (8,16), \
(10,14)), List((7,16), (11,13), (8,14))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((10,16), (6,13), (11,13), (7,12)), List((8,15), (11,12), (9,13)), \
List((10,13), (7,16), (8,12), (9,15))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((11,12), (6,13), (10,13), (8,15)), List((7,12), (9,16), \
(11,13)), List((9,13), (7,16), (8,12), (10,15))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (10,13), (11,15), (9,16)), List((7,12), (11,16), (8,15)), \
List((9,13), (7,16), (8,12), (10,15))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (10,13), (7,12), (9,16)), List((7,16), (11,12), \
(8,15)), List((8,16), (11,15), (10,12), (9,13))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (10,13), (7,12), (9,16)), List((7,16), (11,12), (8,15)), \
List((9,13), (8,16), (11,15), (10,12))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (10,13), (8,15), (11,12)), List((7,12), (9,16), \
(11,13)), List((9,13), (7,16), (8,12), (10,15))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (11,13), (7,12), (10,16)), List((8,15), (11,12), (9,13)), \
List((10,13), (7,16), (8,12), (9,15))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (7,13), (8,12)), List((11,16), (7,12), (9,13), \
(10,15)), List((8,13), (11,12), (10,16), (9,15))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (7,13), (8,12)), List((11,16), (7,12), (9,13), (10,15)), \
List((9,15), (8,13), (11,12), (10,16))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (7,13), (8,12)), List((7,12), (9,13), (10,15), \
(11,16)), List((8,13), (11,12), (10,16), (9,15))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (7,13), (8,12)), List((7,12), (9,13), (10,15), (11,16)), \
List((9,15), (8,13), (11,12), (10,16))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (7,13), (8,16), (10,12)), List((7,16), (11,13), \
(9,15)), List((10,13), (8,12), (9,16), (11,15))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (7,13), (8,16), (10,12)), List((7,16), (11,13), (9,15)), \
List((8,12), (9,16), (11,15), (10,13))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (7,13), (8,16), (10,12)), List((8,12), (9,16), \
(11,15)), List((7,16), (10,13), (11,12), (9,15))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (7,13), (8,16), (10,12)), List((8,12), (9,16), (11,15)), \
List((9,15), (7,16), (10,13), (11,12))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (7,13), (8,16), (10,15)), List((7,16), (11,13), \
(9,12)), List((10,13), (8,15), (9,16), (11,12))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (7,13), (8,16), (10,15)), List((7,16), (11,13), (9,12)), \
List((8,15), (9,16), (11,12), (10,13))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (7,13), (8,16)), List((7,16), (10,13), (11,12), \
(9,15)), List((10,12), (8,13), (9,16), (11,15))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (7,13), (8,16)), List((7,16), (10,13), (11,12), (9,15)), \
List((8,13), (9,16), (11,15), (10,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (7,13), (8,16)), List((7,16), (11,13), (10,15), \
(9,12)), List((8,13), (9,16), (10,12), (11,15))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (7,13), (8,16)), List((9,12), (7,16), (11,13), (10,15)), \
List((8,13), (9,16), (10,12), (11,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((6,13), (7,13), (8,16)), List((9,15), (7,16), (10,13), \
(11,12)), List((10,12), (8,13), (9,16), (11,15))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((6,13), (7,13), (8,16)), List((9,15), (7,16), (10,13), (11,12)), \
List((8,13), (9,16), (11,15), (10,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((8,16), (6,13), (10,13), (7,12)), List((8,13), (9,16), \
(11,15)), List((7,16), (10,12), (11,13), (9,15))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((8,16), (6,13), (10,13), (7,12)), List((8,13), (9,16), (11,15)), \
List((9,15), (7,16), (10,12), (11,13))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(5,14), (6,13)), List((9,16), (6,13), (10,13), (8,15)), List((7,16), (11,12), \
(9,13)), List((11,13), (7,12), (8,16), (10,15))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (5,14), (6,13)), \
List((9,16), (6,13), (10,13), (8,15)), List((7,16), (11,12), (9,13)), \
List((7,12), (8,16), (10,15), (11,13))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), \
(6,14), (7,12), (5,14)), List((8,14), (10,16), (9,15)), List((11,16), (6,12), \
(9,14), (10,15)), List((7,14), (11,12), (8,16))),ArrayBuffer((2,0), (1,0), \
(2,0), (1,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (6,14), (7,12), \
(5,14)), List((8,14), (10,16), (9,15)), List((6,12), (9,14), (10,15), \
(11,16)), List((7,14), (11,12), (8,16))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (6,14), (7,12), \
(5,14)), List((8,16), (9,14), (10,15)), List((6,12), (8,14), (11,16)), \
List((7,14), (11,12), (10,16), (9,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (6,14), (7,12), \
(5,14)), List((9,12), (10,16), (11,15)), List((6,12), (8,14), (10,15), \
(9,16)), List((7,14), (11,12), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (6,14), (7,12), \
(5,14)), List((9,12), (10,16), (11,15)), List((9,16), (6,12), (8,14), \
(10,15)), List((7,14), (11,12), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (6,14), (7,12), \
(5,14)), List((9,16), (11,12), (10,15)), List((6,12), (8,14), (11,15)), \
List((7,14), (9,12), (10,16), (8,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (7,14), (6,16), \
(5,14)), List((8,12), (9,16), (10,15)), List((6,14), (8,16), (10,12), \
(11,15)), List((7,16), (11,14), (9,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (7,14), (6,16), \
(5,14)), List((8,12), (9,16), (10,15)), List((6,14), (8,16), (11,12)), \
List((7,16), (11,14), (10,12), (9,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (7,14), (6,16), \
(5,14)), List((8,12), (9,16), (10,15)), List((6,14), (8,16), (11,12)), \
List((9,15), (7,16), (11,14), (10,12))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (7,14), (6,16), \
(5,14)), List((8,12), (9,16), (11,15), (10,14)), List((6,14), (8,16), \
(10,12)), List((7,16), (11,14), (9,15))),ArrayBuffer((2,0), (2,0), (1,0), \
(1,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (7,14), (6,16), \
(5,14)), List((8,16), (10,12), (9,15)), List((6,14), (9,16), (11,15)), \
List((8,12), (7,16), (11,14), (10,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (7,14), (6,16), \
(5,14)), List((9,14), (10,12), (11,15)), List((6,14), (8,16), (9,12)), \
List((8,12), (7,16), (11,14), (10,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (7,14), (6,16), \
(5,14)), List((9,15), (10,12), (11,14)), List((6,14), (8,16), (11,15)), \
List((7,16), (10,14), (9,12), (8,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (7,14), (6,16), \
(5,14)), List((9,15), (10,12), (11,14)), List((6,14), (8,16), (11,15)), \
List((8,15), (7,16), (10,14), (9,12))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,13), (7,14), (6,16), \
(5,14)), List((9,15), (10,12), (11,14)), List((6,14), (8,16), (9,12), \
(11,15)), List((7,16), (10,14), (8,12))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (6,14), \
(7,12)), List((8,14), (10,16), (9,15)), List((6,12), (9,14), (10,15), \
(11,16)), List((7,14), (11,12), (8,16))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (6,14), \
(7,12)), List((8,14), (11,15), (10,12), (9,16)), List((6,12), (9,14), \
(10,16)), List((7,14), (11,12), (8,15))),ArrayBuffer((2,0), (2,0), (1,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (6,14), \
(7,12)), List((8,16), (9,14), (10,15)), List((6,12), (8,14), (11,16)), \
List((7,14), (11,12), (10,16), (9,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (6,14), \
(7,12)), List((8,16), (9,14), (10,15)), List((6,12), (8,14), (11,16)), \
List((9,15), (7,14), (11,12), (10,16))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (6,14), \
(7,12)), List((9,12), (10,16), (11,15)), List((6,12), (8,14), (10,15), \
(9,16)), List((7,14), (11,12), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (6,14), \
(7,12)), List((9,16), (11,12), (10,15)), List((6,12), (8,14), (11,15)), \
List((7,14), (9,12), (10,16), (8,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (6,14), \
(7,12)), List((9,16), (11,12), (10,15)), List((6,12), (8,14), (11,15)), \
List((8,15), (7,14), (9,12), (10,16))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((10,14), (8,12), (9,16), (11,15)), List((6,14), (8,16), \
(10,12)), List((7,16), (11,14), (9,15))),ArrayBuffer((2,0), (2,0), (1,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((8,12), (9,16), (10,15)), List((11,15), (6,14), (8,16), \
(10,12)), List((7,16), (11,14), (9,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((8,12), (9,16), (10,15)), List((6,14), (8,16), (10,12), \
(11,15)), List((7,16), (11,14), (9,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((8,12), (9,16), (10,15)), List((6,14), (8,16), (11,12)), \
List((7,16), (11,14), (10,12), (9,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((8,12), (9,16), (11,15), (10,14)), List((6,14), (8,16), \
(10,12)), List((7,16), (11,14), (9,15))),ArrayBuffer((2,0), (2,0), (1,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((8,16), (10,12), (11,14), (9,15)), List((6,14), (9,16), \
(11,15)), List((7,16), (10,14), (8,12))),ArrayBuffer((2,0), (2,0), (1,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((8,16), (10,12), (9,15)), List((11,12), (6,14), (9,16), \
(10,15)), List((7,16), (11,14), (8,12))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((8,16), (10,12), (9,15)), List((6,14), (9,16), (10,15), \
(11,12)), List((7,16), (11,14), (8,12))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((9,14), (10,12), (11,15)), List((6,14), (8,16), (10,15), \
(9,12)), List((7,16), (11,14), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((9,14), (10,12), (11,15)), List((9,12), (6,14), (8,16), \
(10,15)), List((7,16), (11,14), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((9,15), (10,12), (11,14)), List((11,15), (6,14), (8,16), \
(9,12)), List((7,16), (10,14), (8,12))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((9,15), (10,12), (11,14)), List((6,14), (8,16), (11,15)), \
List((7,16), (10,14), (9,12), (8,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((9,15), (10,12), (11,14)), List((6,14), (8,16), (9,12), \
(11,15)), List((7,16), (10,14), (8,12))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (5,13), (7,14), \
(6,16)), List((9,15), (8,16), (10,12), (11,14)), List((6,14), (9,16), \
(11,15)), List((7,16), (10,14), (8,12))),ArrayBuffer((2,0), (2,0), (1,0), \
(1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (6,15), (7,16)), \
List((5,15), (9,14), (8,12)), List((7,14), (10,16), (11,13), (9,12)), \
List((6,16), (8,15), (11,12), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), \
(6,15), (7,16)), List((5,15), (9,14), (8,12)), List((7,14), (10,16), (11,13), \
(9,12)), List((6,16), (8,15), (11,12), (10,13))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),1)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (6,15), (7,16)), \
List((5,15), (9,14), (8,12)), List((9,12), (7,14), (10,16), (11,13)), \
List((10,13), (6,16), (8,15), (11,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), \
(6,15), (7,16)), List((5,15), (9,14), (8,12)), List((9,12), (7,14), (10,16), \
(11,13)), List((10,13), (6,16), (8,15), (11,12))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),1)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (6,15), (7,16)), \
List((5,15), (9,14), (8,12)), List((9,12), (7,14), (10,16), (11,13)), \
List((6,16), (8,15), (11,12), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
    (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + 
     d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (6,15), (7,16)), \
List((5,15), (9,14), (8,12)), List((9,12), (7,14), (10,16), (11,13)), \
List((6,16), (8,15), (11,12), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),1)"]] :> (d^2*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
    (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + 
     d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (7,12), (9,15)), \
List((5,12), (8,14), (6,16)), List((6,12), (10,16), (11,13), (7,15)), \
List((10,13), (8,16), (9,14), (11,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (7,12), (9,15)), \
List((5,12), (8,14), (6,16)), List((6,12), (10,16), (11,13), (7,15)), \
List((8,16), (9,14), (11,15), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), \
(7,12), (9,15)), List((5,12), (8,14), (6,16)), List((7,15), (6,12), (10,16), \
(11,13)), List((10,13), (8,16), (9,14), (11,15))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (7,12), (9,15)), \
List((5,12), (8,14), (6,16)), List((7,15), (6,12), (10,16), (11,13)), \
List((8,16), (9,14), (11,15), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
    (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + 
     d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (7,13), (8,16)), \
List((5,13), (6,14), (9,15)), List((10,12), (6,15), (8,14), (11,16)), \
List((11,12), (7,16), (9,13), (10,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (7,13), (8,16)), \
List((5,13), (6,14), (9,15)), List((10,12), (6,15), (8,14), (11,16)), \
List((7,16), (9,13), (10,15), (11,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), \
(7,13), (8,16)), List((5,13), (6,14), (9,15)), List((6,15), (8,14), (11,16), \
(10,12)), List((11,12), (7,16), (9,13), (10,15))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,14), (7,13), (8,16)), \
List((5,13), (6,14), (9,15)), List((6,15), (8,14), (11,16), (10,12)), \
List((7,16), (9,13), (10,15), (11,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
    (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + 
     d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,15), (7,16), (9,13)), \
List((5,16), (6,15), (8,12)), List((7,13), (11,16), (10,14), (9,15)), \
List((6,12), (10,15), (11,14), (8,16))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d/v^12, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((5,15), (7,16), (9,13)), List((5,16), (6,15), (8,12)), List((7,13), \
(11,16), (10,14), (9,15)), List((8,16), (6,12), (10,15), \
(11,14))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,15), (7,16), (9,13)), \
List((5,16), (6,15), (8,12)), List((9,15), (7,13), (11,16), (10,14)), \
List((6,12), (10,15), (11,14), (8,16))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,15), \
(7,16), (9,13)), List((5,16), (6,15), (8,12)), List((9,15), (7,13), (11,16), \
(10,14)), List((8,16), (6,12), (10,15), (11,14))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,16), (6,14), (8,15)), \
List((5,14), (7,16), (6,15)), List((10,12), (7,15), (11,16), (9,13)), \
List((11,13), (8,16), (10,15), (9,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d^2, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((5,16), (6,14), (8,15)), List((5,14), (7,16), (6,15)), List((10,12), \
(7,15), (11,16), (9,13)), List((8,16), (10,15), (9,12), \
(11,13))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,16), (6,14), (8,15)), \
List((5,14), (7,16), (6,15)), List((7,15), (11,16), (9,13), (10,12)), \
List((11,13), (8,16), (10,15), (9,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
     d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + 
     d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,16), (6,14), (8,15)), \
List((5,14), (7,16), (6,15)), List((7,15), (11,16), (9,13), (10,12)), \
List((8,16), (10,15), (9,12), (11,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d^2, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((5,16), (8,15), (7,14)), List((5,15), (9,16), (6,13)), List((10,12), \
(6,15), (9,13), (11,16)), List((11,12), (7,16), (8,14), \
(10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,16), (8,15), (7,14)), \
List((5,15), (9,16), (6,13)), List((10,12), (6,15), (9,13), (11,16)), \
List((7,16), (8,14), (10,15), (11,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,16), \
(8,15), (7,14)), List((5,15), (9,16), (6,13)), List((6,15), (9,13), (11,16), \
(10,12)), List((11,12), (7,16), (8,14), (10,15))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((5,16), (8,15), (7,14)), \
List((5,15), (9,16), (6,13)), List((6,15), (9,13), (11,16), (10,12)), \
List((7,16), (8,14), (10,15), (11,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^12, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((6,12), (7,16), (9,14)), List((7,14), (8,16), (9,12)), List((10,13), \
(5,15), (6,16), (11,12)), List((5,16), (10,15), (11,13), \
(8,12))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,12), (7,16), (9,14)), \
List((7,14), (8,16), (9,12)), List((10,13), (5,15), (6,16), (11,12)), \
List((8,12), (5,16), (10,15), (11,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d^2, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((6,12), (7,16), (9,14)), List((7,14), (8,16), (9,12)), List((5,15), \
(6,16), (11,12), (10,13)), List((5,16), (10,15), (11,13), \
(8,12))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,12), (7,16), (9,14)), \
List((7,14), (8,16), (9,12)), List((5,15), (6,16), (11,12), (10,13)), \
List((8,12), (5,16), (10,15), (11,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
     d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + 
     d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,12), (9,15), (7,14)), \
List((5,12), (10,16), (8,13)), List((11,15), (5,16), (7,12), (9,14)), \
List((11,16), (6,15), (8,12), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^12, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((6,12), (9,15), (7,14)), List((5,12), (10,16), (8,13)), List((11,15), \
(5,16), (7,12), (9,14)), List((6,15), (8,12), (10,13), \
(11,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,12), (9,15), (7,14)), \
List((5,12), (10,16), (8,13)), List((5,16), (7,12), (9,14), (11,15)), \
List((11,16), (6,15), (8,12), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,12), \
(9,15), (7,14)), List((5,12), (10,16), (8,13)), List((5,16), (7,12), (9,14), \
(11,15)), List((6,15), (8,12), (10,13), (11,16))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,13), (8,12), (10,15)), \
List((5,14), (7,12), (9,16)), List((11,12), (5,12), (9,14), (7,16)), \
List((11,12), (6,12), (10,13), (8,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,13), \
(8,12), (10,15)), List((5,14), (7,12), (9,16)), List((5,12), (9,14), (7,16), \
(11,12)), List((6,12), (10,13), (8,15), (11,12))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,14), (7,16), (10,13)), \
List((5,16), (9,12), (8,15)), List((5,12), (6,16), (11,14), (9,15)), \
List((10,14), (7,13), (8,16), (11,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,14), \
(7,16), (10,13)), List((5,16), (9,12), (8,15)), List((5,12), (6,16), (11,14), \
(9,15)), List((7,13), (8,16), (11,15), (10,14))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,14), (7,16), (10,13)), \
List((5,16), (9,12), (8,15)), List((9,15), (5,12), (6,16), (11,14)), \
List((10,14), (7,13), (8,16), (11,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^12, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((6,14), (8,16), (11,13)), List((5,16), (10,12), (7,15)), List((6,16), \
(11,14), (8,13), (9,16)), List((5,12), (9,16), (7,16), \
(10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,15), (7,12), (9,14)), \
List((5,16), (8,12), (10,13)), List((5,12), (11,16), (9,15), (7,14)), \
List((6,12), (11,15), (10,16), (8,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^12, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((6,15), (7,12), (9,14)), List((5,16), (8,12), (10,13)), List((5,12), \
(11,16), (9,15), (7,14)), List((8,13), (6,12), (11,15), \
(10,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,15), (7,12), (9,14)), \
List((5,16), (8,12), (10,13)), List((7,14), (5,12), (11,16), (9,15)), \
List((8,13), (6,12), (11,15), (10,16))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d/v^12, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((6,15), (8,16), (10,12)), List((7,16), (9,13), (8,12)), List((11,12), \
(5,14), (6,16), (10,15)), List((5,16), (11,14), (9,12), \
(7,13))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,15), (8,16), (10,12)), \
List((7,16), (9,13), (8,12)), List((11,12), (5,14), (6,16), (10,15)), \
List((5,16), (11,14), (9,12), (7,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),1)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,15), (8,16), (10,12)), \
List((7,16), (9,13), (8,12)), List((11,12), (5,14), (6,16), (10,15)), \
List((7,13), (5,16), (11,14), (9,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,15), \
(8,16), (10,12)), List((7,16), (9,13), (8,12)), List((11,12), (5,14), (6,16), \
(10,15)), List((7,13), (5,16), (11,14), (9,12))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),1)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,15), (8,16), (10,12)), \
List((7,16), (9,13), (8,12)), List((5,14), (6,16), (10,15), (11,12)), \
List((5,16), (11,14), (9,12), (7,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,15), \
(8,16), (10,12)), List((7,16), (9,13), (8,12)), List((5,14), (6,16), (10,15), \
(11,12)), List((5,16), (11,14), (9,12), (7,13))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),1)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), (11,14), (8,13)), \
List((5,12), (7,16), (10,15)), List((11,13), (6,14), (9,16), (8,16)), \
List((9,16), (5,16), (10,12), (7,15))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), \
(11,14), (8,13)), List((5,12), (7,16), (10,15)), List((6,14), (9,16), (8,16), \
(11,13)), List((5,16), (10,12), (7,15), (9,16))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), (11,14), (8,13)), \
List((5,16), (10,15), (7,12)), List((6,14), (7,16), (10,12), (9,15)), \
List((5,15), (8,16), (11,13), (9,14))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d/v^12, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((6,16), (11,14), (8,13)), List((5,16), (10,15), (7,12)), List((6,14), \
(7,16), (10,12), (9,15)), List((9,14), (5,15), (8,16), \
(11,13))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), (11,14), (8,13)), \
List((5,16), (10,15), (7,12)), List((9,15), (6,14), (7,16), (10,12)), \
List((5,15), (8,16), (11,13), (9,14))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), \
(11,15), (7,14)), List((5,16), (10,12), (8,13)), List((6,15), (8,16), \
(10,13), (9,12)), List((5,12), (7,16), (11,14), (9,15))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), (11,15), (7,14)), \
List((5,16), (10,12), (8,13)), List((6,15), (8,16), (10,13), (9,12)), \
List((9,15), (5,12), (7,16), (11,14))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), \
(11,15), (7,14)), List((5,16), (10,12), (8,13)), List((9,12), (6,15), (8,16), \
(10,13)), List((5,12), (7,16), (11,14), (9,15))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), (11,15), (7,14)), \
List((5,16), (10,12), (8,13)), List((9,12), (6,15), (8,16), (10,13)), \
List((9,15), (5,12), (7,16), (11,14))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^12, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((6,16), (5,12), (5,13), (7,12)), List((8,14), (9,16), (10,15), (11,12)), \
List((6,12), (8,16), (11,14)), List((7,16), (10,12), \
(9,15))),ArrayBuffer((2,0), (2,0), (1,0), (1,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), (5,12), (5,13), \
(7,12)), List((8,15), (9,16), (10,14)), List((6,12), (8,16), (11,15)), \
List((9,14), (7,16), (11,12), (10,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), (5,12), (5,13), \
(7,12)), List((8,16), (10,15), (9,14)), List((6,12), (9,16), (10,14), \
(11,15)), List((7,16), (11,12), (8,15))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), (5,12), (5,13), \
(7,12)), List((9,12), (10,15), (11,14)), List((6,12), (8,16), (10,14), \
(9,15)), List((7,16), (11,12), (8,14))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((6,16), (5,12), (5,13), \
(7,12)), List((9,15), (11,12), (10,14)), List((6,12), (8,16), (11,14)), \
List((8,14), (7,16), (9,12), (10,15))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), (11,12), (9,13)), \
List((7,12), (10,12), (8,14)), List((10,14), (5,12), (5,16), (8,12)), \
List((6,12), (6,15), (9,12), (11,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), \
(11,12), (9,13)), List((7,12), (10,12), (8,14)), List((5,12), (5,16), (8,12), \
(10,14)), List((11,13), (6,12), (6,15), (9,12))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), (11,12), (9,13)), \
List((7,12), (10,12), (8,14)), List((5,12), (5,16), (8,12), (10,14)), \
List((6,12), (6,15), (9,12), (11,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), \
(8,14), (11,12)), List((7,14), (9,12), (10,13), (8,12)), List((6,12), (6,15), \
(11,12)), List((5,12), (5,16), (10,12), (9,13))),ArrayBuffer((1,0), (2,0), \
(1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), (8,14), (11,12)), \
List((8,12), (7,14), (9,12), (10,13)), List((6,12), (6,15), (11,12)), \
List((5,12), (5,16), (10,12), (9,13))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), \
(8,14), (11,13)), List((8,13), (7,14), (9,12), (10,12)), List((6,12), (6,15), \
(11,12), (10,13)), List((5,12), (5,16), (9,12))),ArrayBuffer((1,0), (2,0), \
(2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), (9,12), (8,16)), \
List((7,12), (10,12), (11,13)), List((6,12), (6,14), (11,12), (10,13)), \
List((5,15), (9,16), (8,12), (5,16))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), \
(9,12), (8,16)), List((7,12), (10,12), (11,13)), List((6,12), (6,14), \
(11,12), (10,13)), List((5,16), (5,15), (9,16), (8,12))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), (9,16), (11,13)), \
List((7,16), (11,12), (8,13)), List((6,14), (10,16), (9,13), (6,16)), \
List((5,16), (5,15), (8,16), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), \
(9,16), (8,16)), List((7,16), (10,12), (11,13), (8,12)), List((6,12), (6,14), \
(11,12), (10,13)), List((5,15), (9,16), (5,16))),ArrayBuffer((1,0), (2,0), \
(2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,12), (9,16), (8,16)), \
List((8,12), (7,16), (10,12), (11,13)), List((6,12), (6,14), (11,12), \
(10,13)), List((5,15), (9,16), (5,16))),ArrayBuffer((1,0), (2,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,13), \
(8,14), (11,12)), List((7,14), (10,13), (9,12), (8,12)), List((6,12), (6,15), \
(10,12), (11,13)), List((5,12), (5,16), (9,12))),ArrayBuffer((1,0), (2,0), \
(2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,13), (8,15), (11,12)), \
List((8,12), (9,15), (10,14)), List((7,15), (11,13), (10,12), (9,14)), \
List((5,12), (5,16), (6,12), (6,17))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -(d^2*v^18), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,13), (9,16), (8,16), \
(11,12)), List((7,16), (10,13), (8,12)), List((6,12), (6,14), (10,12), \
(11,13)), List((5,15), (9,16), (5,16))),ArrayBuffer((2,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,14), \
(10,12), (8,13)), List((7,12), (8,14), (9,13)), List((5,12), (5,16), (9,12), \
(11,13)), List((10,13), (6,12), (6,15), (11,12))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,14), (10,12), (8,13)), \
List((7,12), (8,14), (9,13)), List((5,12), (5,16), (9,12), (11,13)), \
List((6,12), (6,15), (11,12), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^24, HoldPattern[ev["PlanarGraph(12,Vector(List(), \
List((7,14), (10,13), (11,12)), List((7,13), (8,14), (9,12)), List((6,14), \
(6,15), (11,14), (8,12)), List((5,12), (5,16), (10,12), \
(9,13))),ArrayBuffer((1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,14), (10,13), \
(11,12)), List((7,13), (8,14), (9,12)), List((8,12), (6,14), (6,15), \
(11,14)), List((5,12), (5,16), (10,12), (9,13))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,14), (9,12), (11,13)), \
List((7,12), (10,14), (8,13)), List((5,12), (5,15), (8,12), (9,13)), \
List((10,13), (6,14), (6,16), (11,14))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,14), \
(9,12), (11,13)), List((7,12), (10,14), (8,13)), List((5,12), (5,15), (8,12), \
(9,13)), List((6,14), (6,16), (11,14), (10,13))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,14), (9,12), (11,13)), \
List((7,12), (10,14), (8,13)), List((9,13), (5,12), (5,15), (8,12)), \
List((6,14), (6,16), (11,14), (10,13))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,14), \
(9,13), (10,12)), List((7,13), (8,14), (11,12)), List((10,14), (5,12), \
(5,16), (8,12)), List((6,12), (6,15), (9,12), (11,13))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,14), (9,13), (10,12)), \
List((7,13), (8,14), (11,12)), List((5,12), (5,16), (8,12), (10,14)), \
List((11,13), (6,12), (6,15), (9,12))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,14), \
(9,13), (10,12)), List((7,13), (8,14), (11,12)), List((5,12), (5,16), (8,12), \
(10,14)), List((6,12), (6,15), (9,12), (11,13))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((7,15), (8,12), (11,14)), \
List((9,13), (11,15), (10,14)), List((7,12), (9,15), (10,13), (8,14)), \
List((5,12), (5,16), (6,12), (6,17))),ArrayBuffer((1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -(d^2*v^6), 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((8,12), (9,12), (10,13)), \
List((7,12), (7,15), (10,12), (11,13)), List((6,12), (6,16), (11,12), \
(9,13)), List((5,12), (5,14), (8,12))),ArrayBuffer((1,0), (2,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((8,12), \
(9,12), (10,13)), List((7,12), (7,15), (10,12), (11,13)), List((9,13), \
(6,12), (6,16), (11,12)), List((5,12), (5,14), (8,12))),ArrayBuffer((1,0), \
(2,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((8,12), (9,13), (11,12), \
(10,12)), List((6,12), (6,16), (11,12)), List((7,12), (7,15), (10,12)), \
List((5,12), (5,14), (9,12), (8,13))),ArrayBuffer((2,0), (1,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((8,13), \
(10,12), (9,12)), List((7,12), (7,14), (10,12), (11,12)), List((6,12), \
(6,15), (11,12)), List((5,12), (5,16), (8,12), (9,13))),ArrayBuffer((1,0), \
(2,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((8,13), (10,12), (9,12)), \
List((7,12), (7,14), (11,12), (10,12)), List((6,12), (6,15), (11,12)), \
List((5,12), (5,16), (8,12), (9,13))),ArrayBuffer((1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(12,Vector(List(), List((8,14), \
(10,16), (11,13)), List((9,16), (11,14), (10,13)), List((6,15), (7,16), \
(9,14), (6,16)), List((5,16), (5,12), (8,16), (7,14))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(12,Vector(List(), List((9,13), (11,12), \
(10,12)), List((7,12), (7,14), (9,12), (10,13)), List((11,12), (6,12), \
(8,16), (6,16)), List((5,15), (8,16), (5,16))),ArrayBuffer((1,0), (2,0), \
(2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((10,13), (5,14), (6,18), \
(9,15)), List((6,15), (7,18), (11,16), (9,13)), List((11,13), (7,16), (8,18), \
(12,17)), List((5,18), (10,14), (12,13), (8,17))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + 
     d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
     d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
   (v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((10,13), (5,14), (6,18), \
(9,15)), List((9,13), (6,15), (7,18), (11,16)), List((11,13), (7,16), (8,18), \
(12,17)), List((8,17), (5,18), (10,14), (12,13))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + 
     d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
     d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
   (v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((10,13), (5,14), (6,18), \
(9,15)), List((9,13), (6,15), (7,18), (11,16)), List((7,16), (8,18), (12,17), \
(11,13)), List((5,18), (10,14), (12,13), (8,17))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + 
     d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
     d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
   (v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((11,16), (9,18), (10,14), \
(12,17)), List((5,13), (8,15), (12,16), (6,17)), List((8,16), (5,15), (7,13), \
(11,18)), List((7,18), (6,13), (10,17), (9,14))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((11,16), (9,18), (10,14), \
(12,17)), List((6,17), (5,13), (8,15), (12,16)), List((5,15), (7,13), \
(11,18), (8,16)), List((6,13), (10,17), (9,14), (7,18))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 
      2*v^16 - 3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 
      4*v^26 + 2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - 
      d^2*v^30 + v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 
      2*d^2*v^36 + 3*v^38 - 6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 
      2*d^2*v^40 + v^42 + 2*d*v^42 - v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 
      6*v^48 + 3*d*v^48 - d^2*v^48 + 4*d*v^50 - d^2*v^50 - 4*v^52 + 
      3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 4*v^58 - 2*d*v^58 + 4*v^60 - 
      d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - d*v^72 - 2*v^74))/
    (v^44*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((11,16), (9,18), (10,14), \
(12,17)), List((6,17), (5,13), (8,15), (12,16)), List((8,16), (5,15), (7,13), \
(11,18)), List((6,13), (10,17), (9,14), (7,18))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d/v^24, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((11,16), (9,18), (10,14), \
(12,17)), List((6,17), (5,13), (8,15), (12,16)), List((8,16), (5,15), (7,13), \
(11,18)), List((7,18), (6,13), (10,17), (9,14))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,13), (5,14), (7,13), \
(6,18)), List((12,15), (9,16), (10,13), (11,17)), List((10,17), (6,13), \
(8,18), (11,15)), List((8,15), (7,18), (9,13), (12,16))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,13), (5,14), (7,13), \
(6,18)), List((12,15), (9,16), (10,13), (11,17)), List((6,13), (8,18), \
(11,15), (10,17)), List((7,18), (9,13), (12,16), (8,15))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,13), (5,14), (7,13), \
(6,18)), List((12,16), (8,13), (9,17), (11,15)), List((9,15), (10,17), \
(12,13), (11,16)), List((6,13), (7,18), (10,13), (8,17))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d^2*v^24, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,13), (5,14), (7,13), \
(6,18)), List((8,13), (9,17), (11,15), (12,16)), List((11,16), (9,15), \
(10,17), (12,13)), List((6,13), (7,18), (10,13), (8,17))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d^2*v^24, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,13), (5,14), (7,13), \
(6,18)), List((8,13), (9,17), (11,15), (12,16)), List((9,15), (10,17), \
(12,13), (11,16)), List((8,17), (6,13), (7,18), (10,13))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,14), (5,13), (7,14), \
(6,18)), List((10,15), (9,16), (12,14), (11,17)), List((6,14), (8,18), \
(11,15), (12,17)), List((7,18), (9,14), (10,16), (8,15))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,14), (6,15), (7,13), \
(5,15)), List((9,13), (12,18), (11,16), (10,17)), List((9,18), (6,13), \
(8,15), (12,16)), List((7,15), (10,13), (11,17), (8,16))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,14), (6,18), (9,15), \
(10,13)), List((9,13), (6,15), (7,18), (11,16)), List((11,13), (7,16), \
(8,18), (12,17)), List((5,18), (10,14), (12,13), (8,17))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,14), (7,15), (6,18), \
(5,15)), List((12,13), (8,16), (9,18), (11,17)), List((6,15), (8,18), \
(12,16), (10,13)), List((9,17), (7,18), (10,15), (11,13))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,14), (7,15), (6,18), \
(5,15)), List((12,15), (9,17), (10,13), (11,16)), List((6,15), (8,18), \
(9,13), (12,17)), List((8,13), (7,18), (11,15), (10,16))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 
      2*v^16 - 3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 
      4*v^26 + 2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - 
      d^2*v^30 + v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 
      2*d^2*v^36 + 3*v^38 - 6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 
      2*d^2*v^40 + v^42 + 2*d*v^42 - v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 
      6*v^48 + 3*d*v^48 - d^2*v^48 + 4*d*v^50 - d^2*v^50 - 4*v^52 + 
      3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 4*v^58 - 2*d*v^58 + 4*v^60 - 
      d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - d*v^72 - 2*v^74))/
    (v^44*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,14), (7,15), (6,18), \
(5,15)), List((9,16), (10,17), (11,15), (12,13)), List((6,15), (8,18), \
(12,16), (11,13)), List((8,16), (7,18), (10,15), (9,17))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 
      2*v^16 - 3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 
      4*v^26 + 2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - 
      d^2*v^30 + v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 
      2*d^2*v^36 + 3*v^38 - 6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 
      2*d^2*v^40 + v^42 + 2*d*v^42 - v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 
      6*v^48 + 3*d*v^48 - d^2*v^48 + 4*d*v^50 - d^2*v^50 - 4*v^52 + 
      3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 4*v^58 - 2*d*v^58 + 4*v^60 - 
      d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - d*v^72 - 2*v^74))/
    (v^44*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,15), (5,14), (6,15), \
(7,13)), List((9,13), (12,18), (11,16), (10,17)), List((9,18), (6,13), \
(8,15), (12,16)), List((8,16), (7,15), (10,13), (11,17))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,15), (5,14), (7,15), \
(6,18)), List((12,13), (8,16), (9,18), (11,17)), List((10,13), (6,15), \
(8,18), (12,16)), List((9,17), (7,18), (10,15), (11,13))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,15), (5,14), (7,15), \
(6,18)), List((12,15), (9,17), (10,13), (11,16)), List((12,17), (6,15), \
(8,18), (9,13)), List((8,13), (7,18), (11,15), (10,16))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,15), (5,14), (7,15), \
(6,18)), List((9,15), (10,17), (11,16), (12,13)), List((9,17), (6,15), \
(8,18), (10,16)), List((8,16), (7,18), (12,15), (11,13))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((5,18), (9,13), (11,14), \
(7,17)), List((8,16), (6,18), (10,13), (12,15)), List((9,14), (6,13), (7,18), \
(11,17)), List((5,13), (8,18), (12,16), (10,15))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/(v^44*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((6,18), (5,13), (5,14), \
(7,13)), List((12,15), (9,16), (10,13), (11,17)), List((6,13), (8,18), \
(11,15), (10,17)), List((8,15), (7,18), (9,13), (12,16))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 
      2*v^16 - 3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 
      4*v^26 + 2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - 
      d^2*v^30 + v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 
      2*d^2*v^36 + 3*v^38 - 6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 
      2*d^2*v^40 + v^42 + 2*d*v^42 - v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 
      6*v^48 + 3*d*v^48 - d^2*v^48 + 4*d*v^50 - d^2*v^50 - 4*v^52 + 
      3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 4*v^58 - 2*d*v^58 + 4*v^60 - 
      d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - d*v^72 - 2*v^74))/
    (v^44*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((7,14), (9,15), (11,18), \
(8,16)), List((12,17), (7,15), (8,14), (10,16)), List((5,13), (10,17), \
(11,16), (6,18)), List((12,15), (5,17), (6,13), (9,18))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 
      2*v^16 - 3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 
      4*v^26 + 2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - 
      d^2*v^30 + v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 
      2*d^2*v^36 + 3*v^38 - 6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 
      2*d^2*v^40 + v^42 + 2*d*v^42 - v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 
      6*v^48 + 3*d*v^48 - d^2*v^48 + 4*d*v^50 - d^2*v^50 - 4*v^52 + 
      3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 4*v^58 - 2*d*v^58 + 4*v^60 - 
      d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - d*v^72 - 2*v^74))/
    (v^44*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((7,14), (9,15), (11,18), \
(8,16)), List((7,15), (8,14), (10,16), (12,17)), List((5,13), (10,17), \
(11,16), (6,18)), List((5,17), (6,13), (9,18), (12,15))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((7,17), (5,18), (9,13), \
(11,14)), List((8,16), (6,18), (10,13), (12,15)), List((9,14), (6,13), \
(7,18), (11,17)), List((10,15), (5,13), (8,18), (12,16))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d^3, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((7,18), (12,17), (11,14), \
(9,15)), List((12,14), (8,17), (9,18), (11,15)), List((5,13), (8,18), \
(10,17), (6,16)), List((7,17), (5,18), (6,13), (10,16))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/(v^44*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((8,15), (10,13), (11,14), \
(9,13)), List((6,13), (6,18), (12,13), (10,14)), List((5,13), (5,16), \
(11,13), (12,14)), List((7,13), (7,17), (8,13), (9,15))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((8,16), (7,14), (9,15), \
(11,18)), List((12,17), (7,15), (8,14), (10,16)), List((5,13), (10,17), \
(11,16), (6,18)), List((5,17), (6,13), (9,18), (12,15))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((8,16), (7,14), (9,15), \
(11,18)), List((12,17), (7,15), (8,14), (10,16)), List((6,18), (5,13), \
(10,17), (11,16)), List((12,15), (5,17), (6,13), (9,18))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((8,16), (7,14), (9,15), \
(11,18)), List((7,15), (8,14), (10,16), (12,17)), List((6,18), (5,13), \
(10,17), (11,16)), List((5,17), (6,13), (9,18), (12,15))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> 
  (d*(2 + d*v^2 + 3*v^4 + v^8 - 3*v^10 - 2*v^12 - 4*v^14 + d*v^14 - 4*v^16 + 
     2*d*v^16 - v^18 - 2*v^20 - d^2*v^20 + 4*v^22 - 3*d*v^22 - 4*d*v^24 + 
     d^2*v^24 + 6*v^26 - 3*d*v^26 + d^2*v^26 + v^28 - 6*d*v^28 + 2*d^2*v^28 + 
     v^30 - v^32 - 2*d*v^32 - v^34 + 5*d*v^34 - 2*d^2*v^34 - 3*v^36 + 
     6*d*v^36 - 2*d^2*v^36 - v^38 + 5*d*v^38 - 2*d^2*v^38 - v^40 + 6*d*v^40 - 
     2*d^2*v^40 + 2*v^44 + d^2*v^44 + v^46 - 5*d*v^46 + 2*d^2*v^46 + 4*v^48 - 
     2*d*v^48 + d^2*v^48 + v^50 - 6*d*v^50 + 2*d^2*v^50 + 2*v^52 + 2*d*v^56 - 
     2*v^58 + 3*d*v^58 - v^60 + 2*d*v^60 - v^62 + 2*d*v^62 - v^64 + v^66 + 
     2*v^70 + v^74))/(v^22*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((9,13), (8,15), (10,13), \
(11,14)), List((10,14), (6,13), (6,18), (12,13)), List((5,13), (5,16), \
(11,13), (12,14)), List((7,13), (7,17), (8,13), (9,15))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((9,15), (7,18), (12,17), \
(11,14)), List((12,14), (8,17), (9,18), (11,15)), List((5,13), (8,18), \
(10,17), (6,16)), List((5,18), (6,13), (10,16), (7,17))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d^3, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((9,18), (10,14), (12,17), \
(11,16)), List((5,13), (8,15), (12,16), (6,17)), List((5,15), (7,13), \
(11,18), (8,16)), List((6,13), (10,17), (9,14), (7,18))),ArrayBuffer((2,0), \
(2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((9,18), (10,14), (12,17), \
(11,16)), List((5,13), (8,15), (12,16), (6,17)), List((8,16), (5,15), (7,13), \
(11,18)), List((7,18), (6,13), (10,17), (9,14))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(2 + d*v^2 + 3*v^4 + v^8 - 3*v^10 - 2*v^12 - 
     4*v^14 + d*v^14 - 4*v^16 + 2*d*v^16 - v^18 - 2*v^20 - d^2*v^20 + 
     4*v^22 - 3*d*v^22 - 4*d*v^24 + d^2*v^24 + 6*v^26 - 3*d*v^26 + d^2*v^26 + 
     v^28 - 6*d*v^28 + 2*d^2*v^28 + v^30 - v^32 - 2*d*v^32 - v^34 + 
     5*d*v^34 - 2*d^2*v^34 - 3*v^36 + 6*d*v^36 - 2*d^2*v^36 - v^38 + 
     5*d*v^38 - 2*d^2*v^38 - v^40 + 6*d*v^40 - 2*d^2*v^40 + 2*v^44 + 
     d^2*v^44 + v^46 - 5*d*v^46 + 2*d^2*v^46 + 4*v^48 - 2*d*v^48 + d^2*v^48 + 
     v^50 - 6*d*v^50 + 2*d^2*v^50 + 2*v^52 + 2*d*v^56 - 2*v^58 + 3*d*v^58 - 
     v^60 + 2*d*v^60 - v^62 + 2*d*v^62 - v^64 + v^66 + 2*v^70 + v^74))/
   (v^22*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(13,Vector(List(), List((9,18), (10,14), (12,17), \
(11,16)), List((6,17), (5,13), (8,15), (12,16)), List((8,16), (5,15), (7,13), \
(11,18)), List((6,13), (10,17), (9,14), (7,18))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((10,14), (11,14), \
(12,15)), List((8,16), (13,14), (9,14)), List((8,14), (9,16), (10,14)), \
List((7,14), (7,17), (13,14)), List((6,14), (6,18), (12,14), \
(11,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((10,14), (12,15), \
(11,16)), List((6,17), (7,18), (9,14)), List((7,14), (8,18), (13,14)), \
List((6,18), (9,17), (8,14)), List((10,15), (13,14), (11,14), \
(12,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((10,14), (12,15), \
(11,16)), List((6,17), (7,18), (9,14)), List((7,14), (8,18), (13,14)), \
List((6,18), (9,17), (8,14)), List((12,16), (10,15), (13,14), \
(11,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((10,14), (13,14), \
(12,15)), List((8,18), (9,14), (11,18)), List((8,14), (9,18), (10,14)), \
List((6,16), (11,18), (6,18)), List((7,14), (7,17), (12,14), \
(13,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((10,16), (11,15), \
(13,17)), List((10,15), (12,16), (11,17)), List((8,14), (13,16), (9,17)), \
List((8,16), (9,14), (12,17)), List((6,14), (6,18), (7,14), \
(7,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,14), (13,17), \
(12,15)), List((6,16), (7,18), (10,14)), List((7,14), (8,18), (11,17)), \
List((6,18), (10,16), (9,14)), List((13,15), (8,17), (9,18), \
(12,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,14), (13,17), \
(12,15)), List((6,16), (7,18), (10,14)), List((7,14), (8,18), (11,17)), \
List((6,18), (10,16), (9,14)), List((8,17), (9,18), (12,14), \
(13,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,15), (13,17), \
(12,14)), List((6,16), (7,18), (10,14)), List((8,17), (9,18), (13,14)), \
List((6,18), (10,16), (9,14)), List((12,15), (7,14), (8,18), \
(11,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,15), (13,17), \
(12,14)), List((6,16), (7,18), (10,14)), List((8,17), (9,18), (13,14)), \
List((6,18), (10,16), (9,14)), List((7,14), (8,18), (11,17), \
(12,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,16), (13,14), \
(12,17)), List((6,15), (8,18), (10,14)), List((7,18), (12,16), (9,17)), \
List((8,14), (9,18), (13,17)), List((6,18), (10,15), (11,14), \
(7,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,16), (13,14), \
(12,17)), List((6,15), (8,18), (10,14)), List((7,18), (12,16), (9,17)), \
List((8,14), (9,18), (13,17)), List((6,18), (10,15), (11,14), \
(7,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),1)"]] :> 
  -((d^2*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,16), (13,14), \
(12,17)), List((6,15), (8,18), (10,14)), List((7,18), (12,16), (9,17)), \
List((8,14), (9,18), (13,17)), List((7,16), (6,18), (10,15), \
(11,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,17), (12,16), \
(13,14)), List((6,17), (8,18), (11,16)), List((7,18), (10,15), (9,14)), \
List((8,16), (9,18), (12,14)), List((6,18), (13,17), (10,14), \
(7,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,17), (12,16), \
(13,14)), List((6,17), (8,18), (11,16)), List((7,18), (10,15), (9,14)), \
List((8,16), (9,18), (12,14)), List((6,18), (13,17), (10,14), \
(7,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),1)"]] :> 
  -((d^2*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,17), (12,16), \
(13,14)), List((6,17), (8,18), (11,16)), List((7,18), (10,15), (9,14)), \
List((8,16), (9,18), (12,14)), List((7,15), (6,18), (13,17), \
(10,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,18), (12,15), \
(13,17)), List((7,16), (13,18), (8,17)), List((6,14), (8,16), (10,17)), \
List((6,16), (9,14), (7,18)), List((11,15), (9,18), (10,14), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,18), (12,15), \
(13,17)), List((7,16), (13,18), (8,17)), List((6,14), (8,16), (10,17)), \
List((6,16), (9,14), (7,18)), List((9,18), (10,14), (12,17), \
(11,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,18), (12,15), \
(13,17)), List((9,14), (13,18), (10,17)), List((6,16), (10,14), (8,17)), \
List((6,14), (7,16), (9,18)), List((11,15), (7,18), (8,16), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((11,18), (12,15), \
(13,17)), List((9,14), (13,18), (10,17)), List((6,16), (10,14), (8,17)), \
List((6,14), (7,16), (9,18)), List((7,18), (8,16), (12,17), \
(11,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (12,18), \
(10,15)), List((7,14), (13,17), (11,16)), List((9,17), (11,14), (13,16)), \
List((8,18), (10,14), (12,15)), List((6,18), (9,14), (7,17), \
(8,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (12,18), \
(10,15)), List((7,14), (13,17), (11,16)), List((9,17), (11,14), (13,16)), \
List((8,18), (10,14), (12,15)), List((8,14), (6,18), (9,14), \
(7,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((10,17), (7,14), (9,14), (8,18)), List((11,17), (12,14), (13,16)), \
List((10,14), (13,17), (12,16)), List((8,17), (9,18), \
(11,14))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (10,14), (9,17), (8,18)), List((11,14), (13,17), (12,16)), \
List((10,17), (12,14), (13,16)), List((8,14), (9,18), \
(11,17))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (8,14), (10,18), (9,17)), List((11,18), (13,17), (12,16)), \
List((10,17), (12,18), (13,16)), List((8,18), (9,14), \
(11,17))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (8,14), (10,18), (9,17)), List((9,14), (12,17), (11,16)), \
List((8,18), (11,14), (13,16)), List((10,17), (13,18), \
(12,16))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (9,14), (8,18)), List((10,16), (11,18), (12,17), (13,14)), \
List((8,14), (10,18), (13,16)), List((9,18), (12,14), \
(11,17))),ArrayBuffer((1,0), (1,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (9,14), (8,18)), List((10,17), (11,18), (12,16)), List((8,14), \
(10,18), (13,17)), List((11,16), (9,18), (13,14), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (9,14), (8,18)), List((10,17), (11,18), (12,16)), List((8,14), \
(10,18), (13,17)), List((9,18), (13,14), (12,17), \
(11,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (9,14), (8,18)), List((10,18), (12,17), (11,16)), List((8,14), \
(11,18), (12,16), (13,17)), List((9,18), (13,14), \
(10,17))),ArrayBuffer((1,0), (1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (9,14), (8,18)), List((11,14), (12,17), (13,16)), List((8,14), \
(10,18), (12,16), (11,17)), List((9,18), (13,14), \
(10,16))),ArrayBuffer((1,0), (1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (9,14), (8,18)), List((11,17), (13,14), (12,16)), List((10,14), \
(12,17), (13,16)), List((8,14), (9,18), (11,14), (10,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (9,14), (8,18)), List((11,17), (13,14), (12,16)), List((8,14), \
(10,18), (13,16)), List((10,16), (9,18), (11,14), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (9,14), (8,18)), List((11,17), (13,14), (12,16)), List((8,14), \
(10,18), (13,16)), List((9,18), (11,14), (12,17), \
(10,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((7,14), (9,14), (8,18)), List((13,14), (10,16), (11,18), (12,17)), \
List((8,14), (10,18), (13,16)), List((9,18), (12,14), \
(11,17))),ArrayBuffer((1,0), (1,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (7,14)), \
List((9,17), (7,14), (8,14), (10,18)), List((9,14), (12,17), (11,16)), \
List((8,18), (11,14), (13,16)), List((10,17), (13,18), \
(12,16))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (8,14), \
(7,18)), List((10,14), (11,17), (13,16)), List((10,17), (12,14), (11,16)), \
List((7,14), (9,18), (12,16)), List((8,18), (13,14), \
(9,16))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (8,14), \
(7,18)), List((10,17), (13,14), (11,16)), List((9,14), (11,17), (13,16)), \
List((9,17), (12,14), (10,14)), List((7,14), (8,18), \
(12,14))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (8,14), \
(7,18)), List((10,18), (12,17), (11,16)), List((9,17), (11,18), (12,16)), \
List((7,14), (9,18), (13,17)), List((8,18), (13,14), \
(10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (8,14), \
(7,18)), List((11,17), (13,16), (12,14)), List((9,18), (11,16), (10,17)), \
List((7,14), (10,18), (12,17)), List((8,18), (13,14), \
(9,16))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (6,15), (8,14), \
(7,18)), List((9,14), (11,18), (13,16)), List((9,18), (12,14), (10,17)), \
List((7,14), (10,18), (12,17)), List((8,18), (13,14), \
(11,16))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((10,17), (7,15), (9,15), (8,18)), List((11,17), (12,15), (13,16)), \
List((10,15), (13,17), (12,16)), List((8,17), (9,18), \
(11,15))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (10,15), (9,17), (8,18)), List((11,15), (13,17), (12,16)), \
List((10,17), (12,15), (13,16)), List((8,15), (9,18), \
(11,17))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (8,15), (10,17), (9,18)), List((8,17), (12,15), (11,16)), \
List((9,15), (13,18), (12,16)), List((10,18), (11,17), \
(13,16))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (8,15), (10,18), (9,17)), List((11,18), (13,17), (12,16)), \
List((10,17), (12,18), (13,16)), List((8,18), (9,15), \
(11,17))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (9,15), (8,18)), List((10,16), (11,18), (13,17), (12,15)), \
List((8,15), (10,18), (12,16)), List((9,18), (13,15), \
(11,17))),ArrayBuffer((1,0), (1,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (9,15), (8,18)), List((10,17), (11,18), (12,16)), List((8,15), \
(10,18), (13,17)), List((11,16), (9,18), (13,15), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (9,15), (8,18)), List((10,17), (11,18), (12,16)), List((8,15), \
(10,18), (13,17)), List((9,18), (13,15), (12,17), \
(11,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (9,15), (8,18)), List((10,18), (12,17), (11,16)), List((8,15), \
(11,18), (12,16), (13,17)), List((9,18), (13,15), \
(10,17))),ArrayBuffer((1,0), (1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (9,15), (8,18)), List((11,15), (12,17), (13,16)), List((8,15), \
(10,18), (12,16), (11,17)), List((9,18), (13,15), \
(10,16))),ArrayBuffer((1,0), (1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (9,15), (8,18)), List((11,16), (12,17), (13,15)), List((8,15), \
(10,18), (13,16)), List((10,16), (9,18), (12,15), \
(11,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (9,15), (8,18)), List((11,16), (12,17), (13,15)), List((8,15), \
(10,18), (13,16)), List((9,18), (12,15), (11,17), \
(10,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((7,15), (9,15), (8,18)), List((12,15), (10,16), (11,18), (13,17)), \
List((8,15), (10,18), (12,16)), List((9,18), (13,15), \
(11,17))),ArrayBuffer((1,0), (1,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,15), (6,15)), \
List((9,18), (7,15), (8,15), (10,17)), List((8,17), (12,15), (11,16)), \
List((9,15), (13,18), (12,16)), List((10,18), (11,17), \
(13,16))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,18), (10,15)), \
List((6,18), (11,14), (8,16)), List((7,15), (9,18), (13,17)), List((8,18), \
(12,16), (9,17)), List((10,14), (13,15), (12,17), \
(11,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,18), (10,15)), \
List((6,18), (11,14), (8,16)), List((7,15), (9,18), (13,17)), List((8,18), \
(12,16), (9,17)), List((10,14), (13,15), (12,17), \
(11,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),1)"]] :> 
  (d^2*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (7,18), (10,15)), \
List((6,18), (11,14), (8,16)), List((7,15), (9,18), (13,17)), List((8,18), \
(12,16), (9,17)), List((11,16), (10,14), (13,15), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (8,15), (7,18), \
(6,15)), List((10,15), (11,17), (13,16)), List((10,17), (12,15), (11,16)), \
List((7,15), (9,18), (12,16)), List((8,18), (13,15), \
(9,16))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (8,15), (7,18), \
(6,15)), List((10,18), (12,17), (11,16)), List((9,17), (11,18), (12,16)), \
List((7,15), (9,18), (13,17)), List((8,18), (13,15), \
(10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,14), (8,15), (7,18), \
(6,15)), List((11,17), (13,16), (12,15)), List((9,18), (11,16), (10,17)), \
List((7,15), (10,18), (12,17)), List((8,18), (13,15), \
(9,16))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,14), (8,15), \
(7,18)), List((10,15), (11,17), (13,16)), List((10,17), (12,15), (11,16)), \
List((7,15), (9,18), (12,16)), List((8,18), (13,15), \
(9,16))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,14), (8,15), \
(7,18)), List((10,18), (12,17), (11,16)), List((9,17), (11,18), (12,16)), \
List((7,15), (9,18), (13,17)), List((8,18), (13,15), \
(10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,14), (8,15), \
(7,18)), List((11,17), (13,16), (12,15)), List((9,18), (11,16), (10,17)), \
List((7,15), (10,18), (12,17)), List((8,18), (13,15), \
(9,16))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,14), (8,15), \
(7,18)), List((9,16), (11,18), (12,15)), List((10,18), (13,17), (11,15)), \
List((7,15), (9,18), (12,16)), List((8,18), (13,15), \
(10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((10,18), (7,15), (12,15), (8,14)), List((10,15), (11,18), (13,17)), \
List((9,18), (13,15), (11,17)), List((8,18), (12,14), \
(9,15))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((10,18), (7,15), (12,15), (8,17)), List((10,15), (11,18), (13,14)), \
List((9,18), (13,15), (11,14)), List((8,18), (12,17), \
(9,15))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (10,15), (9,18)), List((11,15), (13,14), (12,17)), List((8,18), \
(11,14), (9,15)), List((13,17), (8,14), (10,18), (12,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (10,15), (9,18)), List((11,15), (13,14), (12,17)), List((8,18), \
(11,14), (9,15)), List((8,14), (10,18), (12,15), (13,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (12,14)), List((8,14), (10,18), (12,15)), List((9,18), \
(13,17), (10,15)), List((8,18), (11,14), (13,15), (9,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (12,14)), List((8,14), (10,18), (12,15)), List((9,18), \
(13,17), (10,15)), List((9,17), (8,18), (11,14), (13,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (12,14)), List((8,15), (10,18), (11,14)), List((9,18), \
(13,17), (10,14)), List((8,18), (12,15), (13,14), (9,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (12,14)), List((8,15), (10,18), (11,14)), List((9,18), \
(13,17), (10,14)), List((9,17), (8,18), (12,15), (13,14))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (12,14)), List((8,17), (10,18), (13,14)), List((9,18), \
(12,15), (10,14)), List((8,18), (13,17), (11,14), (9,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (12,14)), List((8,17), (10,18), (13,14)), List((9,18), \
(12,15), (10,14)), List((9,15), (8,18), (13,17), (11,14))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (12,14)), List((8,17), (10,18), (13,15)), List((9,18), \
(11,14), (10,15)), List((8,18), (13,17), (12,15), (9,14))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (12,14)), List((8,17), (10,18), (13,15)), List((9,18), \
(11,14), (10,15)), List((9,14), (8,18), (13,17), (12,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (13,17)), List((10,17), (12,18), (13,15)), List((8,18), \
(9,14), (12,15)), List((8,14), (10,18), (11,17), (9,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (11,15), (13,17)), List((10,17), (12,18), (13,15)), List((8,18), \
(9,14), (12,15)), List((9,15), (8,14), (10,18), (11,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (12,15), (10,14), (9,18)), List((8,14), (11,18), (13,17)), \
List((10,18), (13,14), (11,17)), List((8,18), (12,14), \
(9,15))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (13,15), (11,18)), List((10,17), (13,18), (12,15)), List((8,14), \
(12,17), (9,15)), List((10,18), (8,17), (9,14), (11,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (13,15), (11,18)), List((10,17), (13,18), (12,15)), List((8,14), \
(12,17), (9,15)), List((8,17), (9,14), (11,15), (10,18))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (13,15), (12,14)), List((9,14), (10,17), (12,15)), List((8,18), \
(13,14), (11,15)), List((8,14), (11,18), (10,15), (9,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (10,14), (9,17)), List((8,14), (11,15), (12,18)), \
List((9,15), (10,17), (13,14)), List((11,18), (13,15), \
(12,14))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (10,14), (9,17)), List((8,14), (11,15), (12,18)), \
List((9,15), (13,17), (11,18)), List((10,17), (12,14), \
(13,18))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (10,17), (9,14)), List((8,17), (11,15), (12,18)), \
List((9,15), (13,14), (11,18)), List((10,14), (12,17), \
(13,18))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (10,18), (9,17)), List((8,18), (11,15), (12,14)), \
List((9,15), (13,17), (11,14)), List((10,17), (12,18), \
(13,14))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (10,18), (9,17)), List((8,18), (9,15), (11,17)), \
List((10,17), (12,18), (13,14)), List((11,18), (13,17), \
(12,14))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (10,18)), List((11,14), (13,15), (12,17)), List((8,18), \
(11,15), (9,14)), List((10,15), (9,18), (12,14), (13,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18), (12,14)), List((8,18), (12,15), (10,14)), \
List((9,14), (11,18), (13,17)), List((10,18), (13,14), \
(11,17))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18), (12,14)), List((8,18), (13,15), (10,17)), \
List((9,14), (11,18), (12,15)), List((10,18), (13,17), \
(11,15))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18), (12,17)), List((8,18), (13,15), (10,14)), \
List((9,17), (11,18), (12,15)), List((10,18), (13,14), \
(11,15))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((10,14), (11,18), (13,17)), List((8,18), \
(12,15), (11,17)), List((9,15), (10,18), (13,14), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((10,17), (11,18), (13,14)), List((8,18), \
(12,15), (11,14)), List((12,14), (9,15), (10,18), \
(13,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((10,17), (11,18), (13,14)), List((8,18), \
(12,15), (11,14)), List((9,15), (10,18), (13,17), \
(12,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((8,18), (13,15), (10,14)), List((9,15), \
(11,18), (12,17)), List((10,18), (13,14), (12,15), \
(11,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((8,18), (13,15), (10,14)), List((9,15), \
(11,18), (12,17)), List((11,17), (10,18), (13,14), \
(12,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((8,18), (13,15), (10,17)), List((9,15), \
(11,18), (12,14)), List((10,18), (13,17), (12,15), \
(11,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((8,18), (13,15), (10,17)), List((9,15), \
(11,18), (12,14)), List((11,14), (10,18), (13,17), \
(12,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((9,15), (10,18), (13,14)), List((10,14), \
(11,18), (12,17)), List((11,17), (8,18), (13,15), \
(12,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((9,15), (10,18), (13,14)), List((10,14), \
(11,18), (12,17)), List((8,18), (13,15), (12,14), \
(11,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((9,15), (10,18), (13,17)), List((10,17), \
(11,18), (12,14)), List((11,14), (8,18), (13,15), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (9,18)), List((9,15), (10,18), (13,17)), List((10,17), \
(11,18), (12,14)), List((8,18), (13,15), (12,17), \
(11,14))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((9,14), (7,15), (8,15), (10,17)), List((11,18), (13,14), (12,15)), \
List((8,17), (13,15), (10,14)), List((9,15), (11,14), \
(12,18))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((9,14), (7,15), (8,15), (10,17)), List((8,17), (11,15), (12,18)), \
List((9,15), (13,14), (11,18)), List((10,14), (12,17), \
(13,18))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((9,17), (7,15), (8,15), (10,14)), List((8,14), (11,15), (12,18)), \
List((9,15), (13,17), (11,18)), List((10,17), (12,14), \
(13,18))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (6,16), (7,15)), \
List((9,17), (7,15), (8,15), (10,18)), List((8,18), (11,15), (12,14)), \
List((9,15), (13,17), (11,14)), List((10,17), (12,18), \
(13,14))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (7,16), (8,14), \
(6,16)), List((10,14), (11,18), (13,17)), List((10,18), (12,14), (11,17)), \
List((7,14), (9,16), (12,17)), List((8,16), (13,14), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (7,16), (8,14), \
(6,16)), List((10,16), (12,18), (11,17)), List((9,18), (11,16), (12,17)), \
List((7,14), (9,16), (13,18)), List((8,16), (13,14), \
(10,18))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (7,16), (8,14), \
(6,16)), List((11,18), (13,17), (12,14)), List((9,16), (11,17), (10,18)), \
List((7,14), (10,16), (12,18)), List((8,16), (13,14), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (8,16), (7,18), \
(6,16)), List((10,16), (11,14), (13,17)), List((10,14), (12,16), (11,17)), \
List((7,16), (9,18), (12,17)), List((8,18), (13,16), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (8,16), (7,18), \
(6,16)), List((10,16), (12,14), (13,17)), List((11,14), (13,16), (12,17)), \
List((7,16), (9,18), (10,14)), List((8,18), (11,16), \
(9,14))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (8,16), (7,18), \
(6,16)), List((10,18), (12,14), (11,17)), List((9,14), (11,18), (12,17)), \
List((7,16), (9,18), (13,14)), List((8,18), (13,16), \
(10,14))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (8,16), (7,18), \
(6,16)), List((11,14), (13,17), (12,16)), List((9,18), (11,17), (10,14)), \
List((7,16), (10,18), (12,14)), List((8,18), (13,16), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (8,16), (7,18), \
(6,16)), List((11,17), (12,14), (13,16)), List((9,18), (11,14), (10,17)), \
List((7,16), (10,18), (13,17)), List((8,18), (12,16), \
(9,14))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,15), (8,16), (7,18), \
(6,16)), List((9,14), (11,18), (12,17)), List((9,18), (12,14), (10,17)), \
List((7,16), (10,18), (13,17)), List((8,18), (13,16), \
(11,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (10,15), \
(11,14)), List((7,17), (11,16), (12,14)), List((9,18), (12,17), (13,14)), \
List((8,15), (13,18), (10,14)), List((6,15), (7,16), (9,17), \
(8,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (10,15), \
(11,14)), List((7,17), (11,16), (12,14)), List((9,18), (12,17), (13,14)), \
List((8,15), (13,18), (10,14)), List((8,18), (6,15), (7,16), \
(9,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (7,16), \
(8,14)), List((10,14), (11,18), (13,17)), List((10,18), (12,14), (11,17)), \
List((7,14), (9,16), (12,17)), List((8,16), (13,14), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (7,16), \
(8,14)), List((10,16), (12,18), (11,17)), List((9,18), (11,16), (12,17)), \
List((7,14), (9,16), (13,18)), List((8,16), (13,14), \
(10,18))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (7,16), \
(8,14)), List((11,18), (13,17), (12,14)), List((9,16), (11,17), (10,18)), \
List((7,14), (10,16), (12,18)), List((8,16), (13,14), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (7,16), \
(8,14)), List((9,16), (13,14), (11,17)), List((9,14), (10,16), (12,18)), \
List((7,14), (11,16), (13,17)), List((8,16), (12,14), \
(10,18))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (8,16), \
(7,18)), List((10,16), (11,14), (13,17)), List((10,14), (12,16), (11,17)), \
List((7,16), (9,18), (12,17)), List((8,18), (13,16), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (8,16), \
(7,18)), List((10,16), (12,14), (13,17)), List((11,14), (13,16), (12,17)), \
List((7,16), (9,18), (10,14)), List((8,18), (11,16), \
(9,14))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (8,16), \
(7,18)), List((10,18), (12,14), (11,17)), List((9,14), (11,18), (12,17)), \
List((7,16), (9,18), (13,14)), List((8,18), (13,16), \
(10,14))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (8,16), \
(7,18)), List((10,18), (13,16), (11,17)), List((9,18), (12,14), (10,16)), \
List((7,16), (11,18), (13,17)), List((8,18), (12,16), \
(9,14))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (8,16), \
(7,18)), List((10,18), (13,17), (11,16)), List((9,14), (11,18), (12,16)), \
List((7,16), (9,18), (12,14)), List((8,18), (13,16), \
(10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (8,16), \
(7,18)), List((11,14), (13,17), (12,16)), List((9,18), (11,17), (10,14)), \
List((7,16), (10,18), (12,14)), List((8,18), (13,16), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (8,16), \
(7,18)), List((11,17), (12,14), (13,16)), List((9,18), (11,14), (10,17)), \
List((7,16), (10,18), (13,17)), List((8,18), (12,16), \
(9,14))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,16), (6,15), (8,16), \
(7,18)), List((9,14), (11,18), (12,17)), List((9,18), (12,14), (10,17)), \
List((7,16), (10,18), (13,17)), List((8,18), (13,16), \
(11,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,17), (9,15), (12,18)), \
List((7,18), (8,16), (13,17)), List((10,14), (12,17), (11,18)), List((10,17), \
(11,14), (13,18)), List((6,15), (8,17), (7,16), (9,18))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,17), (9,15), (12,18)), \
List((7,18), (8,16), (13,17)), List((10,14), (12,17), (11,18)), List((10,17), \
(11,14), (13,18)), List((9,18), (6,15), (8,17), (7,16))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,18), (7,14), (13,17)), \
List((9,17), (10,15), (11,16)), List((8,15), (12,18), (10,16)), List((11,17), \
(12,16), (13,18)), List((6,14), (8,18), (9,15), (7,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((6,18), (7,14), (13,17)), \
List((9,17), (10,15), (11,16)), List((8,15), (12,18), (10,16)), List((11,17), \
(12,16), (13,18)), List((7,17), (6,14), (8,18), (9,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,14), (8,18), (12,16)), \
List((8,16), (9,18), (11,17)), List((9,17), (10,18), (13,15)), List((6,18), \
(13,17), (10,15)), List((11,16), (6,17), (7,18), (12,14))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,14), (8,18), (12,16)), \
List((8,16), (9,18), (11,17)), List((9,17), (10,18), (13,15)), List((6,18), \
(13,17), (10,15)), List((6,17), (7,18), (12,14), (11,16))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,14), (8,18), (12,16)), \
List((8,16), (9,18), (12,14)), List((9,14), (10,18), (13,17)), List((6,18), \
(11,15), (10,17)), List((11,17), (6,15), (7,18), (13,14))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,14), (8,18), (12,16)), \
List((8,16), (9,18), (12,14)), List((9,14), (10,18), (13,17)), List((6,18), \
(11,15), (10,17)), List((6,15), (7,18), (13,14), (11,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (11,18), \
(13,16)), List((6,14), (10,18), (12,17)), List((7,18), (13,15), (8,16)), \
List((6,18), (12,14), (9,17)), List((10,17), (8,18), (11,16), \
(9,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (11,18), \
(13,16)), List((6,14), (10,18), (12,17)), List((7,18), (13,15), (8,16)), \
List((6,18), (12,14), (9,17)), List((8,18), (11,16), (9,18), \
(10,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (11,18), \
(13,17)), List((6,16), (10,18), (12,14)), List((7,18), (13,15), (9,17)), \
List((6,18), (12,16), (8,14)), List((11,17), (8,18), (10,14), \
(9,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (11,18), \
(13,17)), List((6,16), (10,18), (12,14)), List((7,18), (13,15), (9,17)), \
List((6,18), (12,16), (8,14)), List((8,18), (10,14), (9,18), \
(11,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (13,18), (9,17)), \
List((6,14), (12,17), (8,18)), List((10,18), (11,16), (13,17)), List((10,16), \
(12,18), (11,17)), List((6,17), (8,14), (7,18), (9,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (13,18), (9,17)), \
List((6,14), (12,17), (8,18)), List((10,18), (11,16), (13,17)), List((10,16), \
(12,18), (11,17)), List((9,15), (6,17), (8,14), (7,18))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (8,18), (12,14)), \
List((8,14), (9,18), (11,17)), List((9,17), (10,18), (13,16)), List((6,18), \
(13,17), (10,16)), List((11,14), (6,17), (7,18), (12,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (8,18), (12,14)), \
List((8,14), (9,18), (11,17)), List((9,17), (10,18), (13,16)), List((6,18), \
(13,17), (10,16)), List((6,17), (7,18), (12,15), (11,14))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (8,18), (12,16)), \
List((8,16), (9,18), (11,17)), List((9,17), (10,18), (13,14)), List((6,18), \
(13,17), (10,14)), List((11,16), (6,17), (7,18), (12,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (8,18), (12,16)), \
List((8,16), (9,18), (11,17)), List((9,17), (10,18), (13,14)), List((6,18), \
(13,17), (10,14)), List((6,17), (7,18), (12,15), (11,16))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (8,18), (12,17)), \
List((8,17), (9,18), (11,14)), List((9,14), (10,18), (13,16)), List((6,18), \
(13,14), (10,16)), List((11,17), (6,14), (7,18), (12,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,15), (8,18), (12,17)), \
List((8,17), (9,18), (11,14)), List((9,14), (10,18), (13,16)), List((6,18), \
(13,14), (10,16)), List((6,14), (7,18), (12,15), (11,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,16), (8,18), (12,14)), \
List((8,14), (9,18), (13,17)), List((9,17), (10,18), (13,14)), List((6,18), \
(11,15), (10,14)), List((11,14), (6,15), (7,18), (12,16))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,16), (8,18), (12,14)), \
List((8,14), (9,18), (13,17)), List((9,17), (10,18), (13,14)), List((6,18), \
(11,15), (10,14)), List((11,14), (6,15), (7,18), (12,16))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),1)"]] :> -(d^2*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,16), (8,18), (12,14)), \
List((8,14), (9,18), (13,17)), List((9,17), (10,18), (13,14)), List((6,18), \
(11,15), (10,14)), List((6,15), (7,18), (12,16), (11,14))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,16), (8,19), (12,14)), \
List((6,19), (11,15), (8,14)), List((9,17), (10,19), (13,18)), List((9,19), \
(13,17), (10,18)), List((11,14), (6,15), (7,19), (12,16))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d^2*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,17), (10,18), \
(13,15)), List((9,18), (13,17), (10,15)), List((6,18), (12,14), (8,16)), \
List((7,18), (9,17), (11,18)), List((12,16), (6,14), (11,18), \
(8,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,17), (10,18), \
(13,15)), List((9,18), (13,17), (10,15)), List((6,18), (12,14), (8,16)), \
List((7,18), (9,17), (11,18)), List((6,14), (11,18), (8,18), \
(12,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,17), (8,18), (12,14)), \
List((8,14), (9,18), (12,17)), List((9,17), (10,18), (13,16)), List((6,18), \
(11,15), (10,16)), List((11,16), (6,15), (7,18), (13,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,17), (8,18), (12,14)), \
List((8,14), (9,18), (12,17)), List((9,17), (10,18), (13,16)), List((6,18), \
(11,15), (10,16)), List((6,15), (7,18), (13,17), (11,16))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,17), (8,18), (12,15)), \
List((8,15), (9,18), (12,17)), List((9,17), (10,18), (13,16)), List((6,18), \
(11,14), (10,16)), List((11,16), (6,14), (7,18), (13,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,17), (8,18), (12,15)), \
List((8,15), (9,18), (12,17)), List((9,17), (10,18), (13,16)), List((6,18), \
(11,14), (10,16)), List((6,14), (7,18), (13,17), (11,16))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,17), (8,18), (12,16)), \
List((8,16), (9,18), (12,17)), List((9,17), (10,18), (13,14)), List((6,18), \
(11,15), (10,14)), List((11,14), (6,15), (7,18), (13,17))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,17), (8,18), (12,16)), \
List((8,16), (9,18), (12,17)), List((9,17), (10,18), (13,14)), List((6,18), \
(11,15), (10,14)), List((6,15), (7,18), (13,17), (11,14))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,18), (6,14), (6,15), \
(8,14)), List((10,14), (11,17), (13,16)), List((10,17), (12,14), (11,16)), \
List((7,14), (9,18), (12,16)), List((8,18), (13,14), \
(9,16))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,18), (6,14), (6,15), \
(8,14)), List((10,18), (12,17), (11,16)), List((9,17), (11,18), (12,16)), \
List((7,14), (9,18), (13,17)), List((8,18), (13,14), \
(10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((7,18), (6,14), (6,15), \
(8,14)), List((11,17), (13,16), (12,14)), List((9,18), (11,16), (10,17)), \
List((7,14), (10,18), (12,17)), List((8,18), (13,14), \
(9,16))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 
  (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,14), (10,16), \
(12,14)), List((9,14), (11,15), (13,14)), List((10,14), (8,16), (11,14), \
(9,15)), List((6,14), (6,18), (13,14)), List((7,14), (7,17), \
(12,14))),ArrayBuffer((1,0), (1,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,14), (11,15), (9,17)), \
List((8,15), (10,14), (13,16)), List((9,14), (12,17), (10,16)), List((11,17), \
(13,15), (12,16)), List((6,14), (6,18), (7,14), (7,19))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d^2*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,14), (11,16), \
(13,14)), List((9,16), (10,15), (12,14)), List((8,16), (10,14), (9,15)), \
List((7,14), (7,18), (13,14)), List((6,14), (6,17), (11,14), \
(12,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,14), (9,16), (13,14)), \
List((9,14), (10,16), (12,15)), List((8,16), (11,14), (10,15)), List((7,14), \
(7,17), (13,14)), List((6,14), (6,18), (12,14), (11,15))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,16), (13,14), \
(12,14)), List((9,15), (11,16), (10,14)), List((8,14), (9,16), (10,15)), \
List((7,14), (7,18), (13,14)), List((6,14), (6,17), (11,14), \
(12,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,17), (10,18), \
(13,15)), List((9,18), (13,17), (10,15)), List((6,14), (7,18), (12,16)), \
List((8,18), (9,17), (11,18)), List((11,18), (6,18), (12,14), \
(7,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,17), (12,14), \
(10,16)), List((9,17), (13,14), (11,15)), List((9,14), (10,17), (12,16)), \
List((8,14), (11,17), (13,15)), List((6,14), (6,18), (7,14), \
(7,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,18), (9,14), (11,18)), \
List((8,14), (10,18), (13,15)), List((9,18), (12,14), (10,15)), List((7,14), \
(7,16), (13,14), (12,15)), List((6,17), (11,18), (6,18))),ArrayBuffer((1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,18), (9,15), (11,18)), \
List((8,15), (10,18), (13,14)), List((9,18), (12,15), (10,14)), List((7,14), \
(7,16), (12,14), (13,15)), List((6,17), (11,18), (6,18))),ArrayBuffer((1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,18), (9,15), (11,18)), \
List((8,15), (10,18), (13,17)), List((9,18), (12,15), (10,17)), List((7,17), \
(7,14), (12,17), (13,15)), List((6,16), (11,18), (6,18))),ArrayBuffer((1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((8,18), (9,15), (11,18)), \
List((8,15), (10,18), (13,17)), List((9,18), (12,15), (10,17)), List((7,17), \
(7,16), (12,17), (13,15)), List((6,14), (11,18), (6,18))),ArrayBuffer((1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((9,14), (10,15), \
(13,14)), List((8,18), (10,14), (12,15)), List((8,14), (11,18), (9,15)), \
List((7,14), (7,16), (13,14)), List((6,18), (6,17), (12,18), \
(11,15))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((9,15), (10,14), \
(11,16)), List((9,14), (11,15), (10,16)), List((6,17), (8,19), (12,14)), \
List((7,19), (13,18), (8,14)), List((6,19), (12,17), (13,14), \
(7,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> -(d^2*v^6), 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((9,15), (10,18), \
(13,16)), List((6,14), (8,18), (12,17)), List((6,18), (12,14), (7,17)), \
List((7,18), (8,17), (11,18)), List((11,18), (9,18), (13,15), \
(10,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((9,15), (12,14), \
(13,14)), List((10,14), (13,15), (11,14)), List((6,14), (6,16), (9,14), \
(10,15)), List((7,14), (7,18), (11,14)), List((8,14), (8,17), \
(12,14))),ArrayBuffer((1,0), (1,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((9,15), (13,14), \
(12,14)), List((10,14), (13,14), (11,14)), List((6,14), (6,16), (9,14), \
(12,15)), List((7,14), (7,18), (11,14)), List((8,14), (8,17), \
(10,14))),ArrayBuffer((1,0), (1,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(14,Vector(List(), List((9,18), (13,16), \
(10,15)), List((7,14), (8,18), (12,17)), List((6,18), (12,14), (8,17)), \
List((6,14), (11,18), (7,18)), List((13,15), (9,16), (11,18), \
(10,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,15), (12,19), \
(13,17)), List((6,20), (10,19), (7,15)), List((7,20), (14,15), (11,16), \
(8,18)), List((8,20), (11,18), (14,16), (9,15)), List((6,19), (9,20), \
(13,15), (12,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^16*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,15), (12,19), \
(13,17)), List((6,20), (10,19), (7,15)), List((7,20), (14,15), (11,16), \
(8,18)), List((9,15), (8,20), (11,18), (14,16)), List((12,17), (6,19), \
(9,20), (13,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d^2/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,15), \
(12,19), (13,17)), List((6,20), (10,19), (7,15)), List((8,18), (7,20), \
(14,15), (11,16)), List((8,20), (11,18), (14,16), (9,15)), List((6,19), \
(9,20), (13,15), (12,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d^2*v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,15), \
(14,16), (11,19)), List((9,18), (12,17), (13,15)), List((6,18), (7,20), \
(12,15), (9,17)), List((6,20), (13,18), (11,15), (8,19)), List((7,15), \
(8,20), (14,19), (10,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d*v^18), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,15), \
(14,16), (11,19)), List((9,18), (12,17), (13,15)), List((6,18), (7,20), \
(12,15), (9,17)), List((8,19), (6,20), (13,18), (11,15)), List((10,16), \
(7,15), (8,20), (14,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,15), \
(14,16), (11,19)), List((9,18), (12,17), (13,15)), List((9,17), (6,18), \
(7,20), (12,15)), List((8,19), (6,20), (13,18), (11,15)), List((7,15), \
(8,20), (14,19), (10,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,15), \
(14,17), (13,16)), List((11,15), (14,16), (12,17)), List((10,17), (8,15), \
(8,19), (9,15)), List((6,15), (6,18), (12,15), (9,17)), List((7,15), (7,20), \
(13,15), (11,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  d*v^12, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,17), \
(14,16), (13,15)), List((8,15), (9,18), (12,17)), List((8,18), (11,15), \
(10,16), (9,17)), List((7,15), (7,19), (14,15), (11,16)), List((13,17), \
(6,15), (6,20), (12,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,18), \
(12,19), (11,15)), List((6,20), (10,19), (7,18)), List((7,20), (11,18), \
(13,15), (8,16)), List((12,15), (6,19), (9,20), (14,17)), List((8,20), \
(13,16), (14,15), (9,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^26*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,18), (12,19), \
(11,15)), List((6,20), (10,19), (7,18)), List((7,20), (11,18), (13,15), \
(8,16)), List((12,15), (6,19), (9,20), (14,17)), List((9,17), (8,20), \
(13,16), (14,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,18), \
(12,19), (11,15)), List((6,20), (10,19), (7,18)), List((7,20), (11,18), \
(13,15), (8,16)), List((6,19), (9,20), (14,17), (12,15)), List((8,20), \
(13,16), (14,15), (9,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,18), \
(12,19), (11,15)), List((6,20), (10,19), (7,18)), List((8,16), (7,20), \
(11,18), (13,15)), List((12,15), (6,19), (9,20), (14,17)), List((8,20), \
(13,16), (14,15), (9,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,19), \
(13,15), (14,17)), List((6,20), (10,15), (7,19)), List((7,20), (14,19), \
(13,17), (9,15)), List((8,18), (9,20), (12,15), (11,16)), List((6,15), \
(8,20), (11,18), (12,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^28*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((10,19), (13,15), \
(14,17)), List((6,20), (10,15), (7,19)), List((9,15), (7,20), (14,19), \
(13,17)), List((11,16), (8,18), (9,20), (12,15)), List((6,15), (8,20), \
(11,18), (12,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d^2*v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), \
(12,17), (14,19)), List((6,20), (10,16), (7,18)), List((7,20), (13,18), \
(14,15), (9,19)), List((10,18), (6,16), (8,20), (13,15)), List((8,15), \
(9,20), (12,19), (11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d*v^18), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), \
(12,17), (14,19)), List((6,20), (10,16), (7,18)), List((7,20), (13,18), \
(14,15), (9,19)), List((6,16), (8,20), (13,15), (10,18)), List((11,17), \
(8,15), (9,20), (12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), \
(12,19), (14,17)), List((6,20), (10,18), (7,16)), List((7,20), (10,16), \
(13,18), (9,15)), List((8,19), (9,20), (14,15), (12,17)), List((6,18), \
(8,20), (11,19), (13,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d*v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), \
(12,19), (14,17)), List((6,20), (10,18), (7,16)), List((9,15), (7,20), \
(10,16), (13,18)), List((12,17), (8,19), (9,20), (14,15)), List((6,18), \
(8,20), (11,19), (13,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d/v^18), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), \
(13,17), (12,18)), List((6,20), (9,16), (7,15)), List((11,17), (14,15), \
(12,15), (13,18)), List((7,20), (14,15), (10,15), (8,19)), List((9,15), \
(6,16), (8,20), (10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> 0, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), (13,18), \
(14,17)), List((10,19), (14,15), (12,17)), List((6,16), (10,15), (9,19), \
(8,20)), List((11,18), (6,15), (8,16), (7,20)), List((13,17), (7,18), (9,20), \
(12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), (13,18), \
(14,17)), List((10,19), (14,15), (12,17)), List((6,16), (10,15), (9,19), \
(8,20)), List((6,15), (8,16), (7,20), (11,18)), List((13,17), (7,18), (9,20), \
(12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), (13,18), \
(14,17)), List((10,19), (14,15), (12,17)), List((8,20), (6,16), (10,15), \
(9,19)), List((11,18), (6,15), (8,16), (7,20)), List((13,17), (7,18), (9,20), \
(12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), (13,18), \
(14,17)), List((10,19), (14,15), (12,17)), List((8,20), (6,16), (10,15), \
(9,19)), List((11,18), (6,15), (8,16), (7,20)), List((7,18), (9,20), (12,19), \
(13,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,15), (13,18), \
(14,17)), List((10,19), (14,15), (12,17)), List((8,20), (6,16), (10,15), \
(9,19)), List((6,15), (8,16), (7,20), (11,18)), List((7,18), (9,20), (12,19), \
(13,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,16), (13,17), \
(12,19)), List((9,20), (10,15), (14,18)), List((6,20), (11,17), (12,16), \
(8,19)), List((13,19), (6,17), (14,20), (7,18)), List((7,19), (10,18), \
(9,15), (8,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,17), \
(12,15), (13,18)), List((6,20), (9,15), (7,16)), List((11,15), (13,17), \
(12,18), (14,15)), List((7,20), (9,16), (10,15), (8,19)), List((6,15), \
(8,20), (10,19), (14,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> 0, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,17), (12,16), \
(13,19)), List((9,18), (10,15), (14,20)), List((11,16), (6,17), (8,20), \
(12,19)), List((14,18), (6,20), (13,17), (7,19)), List((9,15), (7,18), \
(8,19), (10,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d/v^18), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,17), \
(12,16), (13,19)), List((9,18), (10,15), (14,20)), List((6,17), (8,20), \
(12,19), (11,16)), List((14,18), (6,20), (13,17), (7,19)), List((7,18), \
(8,19), (10,20), (9,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -(d*v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,18), \
(12,19), (13,15)), List((6,20), (10,15), (7,16)), List((7,20), (10,16), \
(12,15), (8,19)), List((9,17), (8,20), (11,19), (14,18)), List((13,18), \
(6,15), (9,20), (14,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> 0, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,20), (12,17), \
(14,19)), List((7,15), (8,18), (13,19)), List((6,18), (9,16), (14,20), \
(8,19)), List((10,20), (13,15), (12,19), (11,17)), List((6,16), (7,18), \
(10,15), (9,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,20), (12,17), \
(14,19)), List((7,15), (8,18), (13,19)), List((6,18), (9,16), (14,20), \
(8,19)), List((11,17), (10,20), (13,15), (12,19)), List((9,20), (6,16), \
(7,18), (10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,20), (12,17), \
(14,19)), List((7,15), (8,18), (13,19)), List((8,19), (6,18), (9,16), \
(14,20)), List((11,17), (10,20), (13,15), (12,19)), List((9,20), (6,16), \
(7,18), (10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,20), (13,17), \
(14,19)), List((7,18), (10,15), (8,20)), List((9,19), (6,16), (8,18), \
(14,20)), List((10,20), (12,15), (13,19), (11,17)), List((6,18), (9,16), \
(12,19), (7,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,20), (13,17), \
(14,19)), List((7,18), (10,15), (8,20)), List((9,19), (6,16), (8,18), \
(14,20)), List((10,20), (12,15), (13,19), (11,17)), List((7,15), (6,18), \
(9,16), (12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((11,20), (13,17), \
(14,19)), List((7,18), (10,15), (8,20)), List((9,19), (6,16), (8,18), \
(14,20)), List((11,17), (10,20), (12,15), (13,19)), List((6,18), (9,16), \
(12,19), (7,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (13,18), \
(14,16)), List((9,19), (10,15), (11,20)), List((14,17), (6,16), (9,15), \
(8,19)), List((10,20), (6,15), (13,16), (7,18)), List((11,19), (7,20), \
(12,18), (8,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  d^2, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (13,18), \
(14,16)), List((9,19), (10,15), (11,20)), List((14,17), (6,16), (9,15), \
(8,19)), List((6,15), (13,16), (7,18), (10,20)), List((7,20), (12,18), \
(8,17), (11,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (13,18), \
(14,16)), List((9,19), (10,15), (11,20)), List((6,16), (9,15), (8,19), \
(14,17)), List((6,15), (13,16), (7,18), (10,20)), List((11,19), (7,20), \
(12,18), (8,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (14,20), \
(13,19)), List((10,15), (14,19), (11,20)), List((6,18), (7,16), (13,17), \
(9,19)), List((6,16), (8,18), (12,20), (7,17)), List((11,15), (8,20), (9,18), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (14,20), \
(13,19)), List((10,15), (14,19), (11,20)), List((6,18), (7,16), (13,17), \
(9,19)), List((6,16), (8,18), (12,20), (7,17)), List((8,20), (9,18), (10,19), \
(11,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (14,20), \
(13,19)), List((10,15), (14,19), (11,20)), List((9,19), (6,18), (7,16), \
(13,17)), List((6,16), (8,18), (12,20), (7,17)), List((11,15), (8,20), \
(9,18), (10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (14,20), \
(13,19)), List((10,15), (14,19), (11,20)), List((9,19), (6,18), (7,16), \
(13,17)), List((7,17), (6,16), (8,18), (12,20)), List((8,20), (9,18), \
(10,19), (11,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (14,20), \
(13,19)), List((10,16), (14,19), (11,20)), List((6,18), (7,15), (13,17), \
(9,19)), List((6,15), (8,18), (12,20), (7,17)), List((11,16), (8,20), (9,18), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (14,20), \
(13,19)), List((10,16), (14,19), (11,20)), List((6,18), (7,15), (13,17), \
(9,19)), List((6,15), (8,18), (12,20), (7,17)), List((8,20), (9,18), (10,19), \
(11,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,17), (14,20), \
(13,19)), List((10,16), (14,19), (11,20)), List((9,19), (6,18), (7,15), \
(13,17)), List((6,15), (8,18), (12,20), (7,17)), List((11,16), (8,20), \
(9,18), (10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,19), (13,15), \
(14,17)), List((6,20), (10,15), (7,16)), List((7,20), (10,16), (11,15), \
(8,18)), List((13,17), (6,15), (9,20), (14,19)), List((9,19), (8,20), \
(11,18), (12,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,19), \
(13,15), (14,17)), List((6,20), (10,15), (7,16)), List((7,20), (10,16), \
(11,15), (8,18)), List((6,15), (9,20), (14,19), (13,17)), List((8,20), \
(11,18), (12,15), (9,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d*v^18), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,19), \
(13,18), (14,15)), List((6,20), (10,16), (7,15)), List((7,20), (13,15), \
(11,18), (8,17)), List((8,20), (11,17), (12,18), (9,19)), List((6,16), \
(9,20), (14,19), (10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,19), (13,18), \
(14,15)), List((6,20), (10,16), (7,15)), List((7,20), (13,15), (11,18), \
(8,17)), List((9,19), (8,20), (11,17), (12,18)), List((10,15), (6,16), \
(9,20), (14,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,19), (14,17), \
(13,15)), List((6,20), (10,16), (7,15)), List((7,20), (14,15), (12,17), \
(9,19)), List((11,15), (8,18), (9,20), (13,19)), List((10,15), (6,16), \
(8,20), (11,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d*v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,19), \
(14,17), (13,15)), List((6,20), (10,16), (7,15)), List((7,20), (14,15), \
(12,17), (9,19)), List((8,18), (9,20), (13,19), (11,15)), List((10,15), \
(6,16), (8,20), (11,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), \
(13,16), (14,19)), List((10,15), (14,20), (11,19)), List((12,16), (7,20), \
(8,18), (13,19)), List((6,18), (9,17), (11,15), (8,19)), List((6,17), (7,18), \
(10,20), (9,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((10,15), (14,20), (11,19)), List((12,16), (7,20), (8,18), \
(13,19)), List((8,19), (6,18), (9,17), (11,15)), List((6,17), (7,18), \
(10,20), (9,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((10,15), (14,20), (11,19)), List((12,16), (7,20), (8,18), \
(13,19)), List((8,19), (6,18), (9,17), (11,15)), List((9,15), (6,17), (7,18), \
(10,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((10,15), (14,20), (11,19)), List((7,20), (8,18), (13,19), \
(12,16)), List((6,18), (9,17), (11,15), (8,19)), List((6,17), (7,18), \
(10,20), (9,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((10,15), (14,20), (11,19)), List((7,20), (8,18), (13,19), \
(12,16)), List((6,18), (9,17), (11,15), (8,19)), List((9,15), (6,17), (7,18), \
(10,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((6,15), (7,18), (10,20)), List((11,19), (9,17), (10,15), \
(14,20)), List((12,16), (7,20), (8,18), (13,19)), List((8,19), (6,18), \
(9,15), (11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((6,15), (7,18), (10,20)), List((11,19), (9,17), (10,15), \
(14,20)), List((7,20), (8,18), (13,19), (12,16)), List((6,18), (9,15), \
(11,17), (8,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((6,15), (7,18), (10,20)), List((11,19), (9,17), (10,15), \
(14,20)), List((7,20), (8,18), (13,19), (12,16)), List((8,19), (6,18), \
(9,15), (11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((6,15), (7,18), (10,20)), List((9,17), (10,15), (14,20), \
(11,19)), List((7,20), (8,18), (13,19), (12,16)), List((8,19), (6,18), \
(9,15), (11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((6,18), (11,15), (8,19)), List((11,19), (9,15), (10,17), \
(14,20)), List((12,16), (7,20), (8,18), (13,19)), List((6,15), (7,18), \
(10,20), (9,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((6,18), (11,15), (8,19)), List((9,15), (10,17), (14,20), \
(11,19)), List((12,16), (7,20), (8,18), (13,19)), List((6,15), (7,18), \
(10,20), (9,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((7,18), (14,20), (8,19)), List((10,20), (11,15), (13,19), \
(12,16)), List((9,15), (6,17), (8,18), (11,19)), List((6,18), (9,17), \
(10,15), (7,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((7,18), (14,20), (8,19)), List((10,20), (11,15), (13,19), \
(12,16)), List((9,15), (6,17), (8,18), (11,19)), List((7,20), (6,18), (9,17), \
(10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((7,18), (14,20), (8,19)), List((12,16), (10,20), (11,15), \
(13,19)), List((6,17), (8,18), (11,19), (9,15)), List((6,18), (9,17), \
(10,15), (7,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((7,18), (14,20), (8,19)), List((12,16), (10,20), (11,15), \
(13,19)), List((6,17), (8,18), (11,19), (9,15)), List((7,20), (6,18), (9,17), \
(10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((12,20), (13,16), \
(14,19)), List((7,18), (14,20), (8,19)), List((12,16), (10,20), (11,15), \
(13,19)), List((9,15), (6,17), (8,18), (11,19)), List((7,20), (6,18), (9,17), \
(10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (7,15)), \
List((10,19), (7,15), (9,15), (8,20)), List((11,19), (12,18), (13,15), \
(14,17)), List((10,15), (14,19), (13,17)), List((8,19), (9,20), (12,15), \
(11,18))),ArrayBuffer((1,0), (2,0), (2,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (10,15), (9,19), (8,20)), List((12,15), (11,18), (14,19), \
(13,17)), List((10,19), (13,15), (14,17)), List((8,15), (9,20), (11,19), \
(12,18))),ArrayBuffer((1,0), (2,0), (2,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (8,15), (10,20), (9,19)), List((10,19), (11,20), (13,18)), \
List((9,15), (13,19), (12,18), (14,17)), List((11,18), (8,20), (14,15), \
(12,17))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (9,15), (8,20)), List((14,17), (11,18), (12,15), (13,19)), \
List((8,15), (10,20), (13,17), (12,19)), List((10,17), (9,20), (11,15), \
(14,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (7,15)), \
List((7,15), (9,15), (8,20)), List((14,17), (11,18), (12,15), (13,19)), \
List((8,15), (10,20), (13,17), (12,19)), List((9,20), (11,15), (14,18), \
(10,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,15), (11,19), (12,15)), List((13,17), (9,18), (10,19), \
(14,15)), List((11,15), (9,19), (13,18), (14,17)), List((7,15), (8,20), \
(12,15))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,15), (11,19), (12,15)), List((9,18), (10,19), (14,15), \
(13,17)), List((11,15), (9,19), (13,18), (14,17)), List((7,15), (8,20), \
(12,15))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,15), (11,19), (13,17)), List((14,15), (9,18), (10,19), \
(12,15)), List((9,19), (14,18), (13,15), (11,17)), List((7,15), (8,20), \
(12,15))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,15), (11,19), (14,18)), List((14,15), (11,18), (12,19), \
(13,17)), List((10,19), (7,15), (9,20), (12,17)), List((8,20), (13,15), \
(9,17))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,15), (12,19), (14,17)), List((12,17), (10,19), (11,15), \
(13,18)), List((11,18), (7,15), (9,20), (13,17)), List((8,20), (14,15), \
(9,17))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,15), (12,19), (14,17)), List((12,17), (10,19), (11,15), \
(13,18)), List((7,15), (9,20), (13,17), (11,18)), List((8,20), (14,15), \
(9,17))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,15), (14,17), (13,19), (12,18)), List((11,17), (12,15), \
(13,18), (14,19)), List((7,15), (9,20), (10,17)), List((8,20), (11,15), \
(9,17))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> d^2*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,15), (14,17), (13,19), (12,18)), List((14,19), (11,17), \
(12,15), (13,18)), List((7,15), (9,20), (10,17)), List((8,20), (11,15), \
(9,17))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,17), (12,19), (14,18)), List((11,19), (13,15), (12,18)), \
List((13,18), (9,15), (10,19), (14,17)), List((7,15), (8,20), (11,15), \
(9,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d*v^30), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,17), (12,19), (14,18)), List((11,19), (13,15), (12,18)), \
List((9,15), (10,19), (14,17), (13,18)), List((7,15), (8,20), (11,15), \
(9,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,18), (13,19), (14,15)), List((11,15), (12,17), (14,18)), \
List((11,17), (9,15), (10,19), (12,18)), List((7,15), (8,20), (13,15), \
(9,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,18), (13,19), (14,15)), List((11,15), (12,17), (14,18)), \
List((9,15), (10,19), (12,18), (11,17)), List((7,15), (8,20), (13,15), \
(9,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d*v^30), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,19), (14,15), (11,18)), List((11,19), (14,18), (13,15), \
(12,17)), List((7,15), (9,20), (13,17)), List((9,17), (8,20), (10,15), \
(12,19))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((10,19), (14,18), (13,15)), List((11,17), (14,15), (12,18)), \
List((10,18), (9,19), (11,15), (12,17)), List((13,19), (7,15), (8,20), \
(9,15))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((11,15), (14,17), (12,18)), List((10,15), (13,19), (11,17)), \
List((10,19), (7,15), (9,20), (13,17)), List((9,17), (8,20), (12,15), \
(14,18))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((11,15), (14,17), (12,18)), List((10,15), (13,19), (11,17)), \
List((7,15), (9,20), (13,17), (10,19)), List((8,20), (12,15), (14,18), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((11,18), (12,19), (13,17)), List((10,15), (11,19), (13,18), \
(14,17)), List((10,19), (7,15), (9,20), (12,17)), List((8,20), (14,15), \
(9,17))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((11,18), (12,19), (13,17)), List((14,17), (10,15), (11,19), \
(13,18)), List((10,19), (7,15), (9,20), (12,17)), List((8,20), (14,15), \
(9,17))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((11,18), (14,15), (13,17)), List((10,19), (11,15), (13,18), \
(12,17)), List((7,15), (9,20), (14,17)), List((9,17), (8,20), (10,15), \
(12,19))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((11,18), (14,15), (13,17)), List((12,17), (10,19), (11,15), \
(13,18)), List((7,15), (9,20), (14,17)), List((9,17), (8,20), (10,15), \
(12,19))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((11,19), (13,18), (14,15), (12,17)), List((9,20), (11,18), \
(10,19)), List((14,17), (7,15), (10,20), (12,19)), List((8,20), (13,15), \
(9,18))),ArrayBuffer((2,0), (2,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((11,19), (13,18), (14,15), (12,17)), List((9,20), (11,18), \
(10,19)), List((7,15), (10,20), (12,19), (14,17)), List((8,20), (13,15), \
(9,18))),ArrayBuffer((2,0), (2,0), (1,0), (2,0), (1,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^4*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((11,19), (14,18), (12,17)), List((11,18), (10,19), (13,15), \
(14,17)), List((7,15), (9,20), (13,17)), List((8,20), (10,15), (12,19), \
(9,17))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((12,15), (11,19), (14,18), (13,17)), List((9,20), (11,18), \
(10,19)), List((7,15), (10,20), (12,19)), List((9,18), (8,20), (13,15), \
(14,17))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^4*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((12,15), (9,17), (11,20), (14,19)), List((10,20), (13,18), \
(14,15), (11,19)), List((7,15), (9,20), (12,17)), List((8,20), (13,15), \
(10,18))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((12,17), (14,19), (13,18)), List((9,15), (12,19), (13,17), \
(10,18)), List((14,18), (9,19), (11,15), (10,15)), List((7,15), (8,20), \
(11,15))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((12,18), (13,19), (14,17)), List((10,18), (11,15), (12,19)), \
List((11,19), (7,15), (9,20), (13,17)), List((9,17), (8,20), (10,15), \
(14,18))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((12,18), (13,19), (14,17)), List((10,18), (11,15), (12,19)), \
List((7,15), (9,20), (13,17), (11,19)), List((8,20), (10,15), (14,18), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((13,15), (11,19), (12,17), (14,18)), List((10,19), (9,20), \
(12,18), (11,17)), List((7,15), (10,20), (13,19)), List((8,20), (14,15), \
(9,18))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((13,15), (11,19), (12,17), (14,18)), List((9,20), (12,18), \
(11,17), (10,19)), List((7,15), (10,20), (13,19)), List((8,20), (14,15), \
(9,18))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((9,15), (11,19), (14,18)), List((10,19), (13,17), (11,18)), \
List((10,17), (12,19), (14,15), (13,18)), List((9,19), (7,15), (8,20), \
(12,15))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((9,15), (12,19), (14,18)), List((10,19), (13,15), (11,17)), \
List((11,19), (13,17), (14,15), (12,18)), List((7,15), (8,20), (10,15), \
(9,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d*v^30), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((9,15), (12,19), (14,18)), List((10,19), (13,15), (11,17)), \
List((12,18), (11,19), (13,17), (14,15)), List((9,19), (7,15), (8,20), \
(10,15))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,15), (6,16), (8,15), \
(7,20)), List((9,18), (10,19), (13,15)), List((9,19), (13,18), (14,15), \
(11,17)), List((12,15), (10,15), (11,19), (14,17)), List((7,15), (8,20), \
(12,15))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,15), (8,16), \
(7,20)), List((10,16), (11,18), (14,17)), List((12,19), (14,16), (13,17)), \
List((7,16), (9,20), (11,17), (10,18)), List((8,20), (12,16), (13,19), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,15), (8,16), \
(7,20)), List((10,16), (14,19), (12,18)), List((11,19), (13,17), (14,18)), \
List((7,16), (9,20), (11,17), (10,19)), List((8,20), (12,16), (13,18), \
(9,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,15), (8,16), \
(7,20)), List((11,19), (13,18), (14,16), (12,17)), List((9,20), (11,18), \
(10,19)), List((14,17), (7,16), (10,20), (12,19)), List((8,20), (13,16), \
(9,18))),ArrayBuffer((2,0), (2,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (11,16), (12,15)), List((8,20), (13,19), (11,15), (9,16)), \
List((10,18), (9,20), (12,16), (14,15)), List((13,15), (8,19), (10,20), \
(14,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (11,16), (12,15)), List((9,16), (8,20), (13,19), (11,15)), \
List((10,18), (9,20), (12,16), (14,15)), List((13,15), (8,19), (10,20), \
(14,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (12,16), (8,15), (9,20)), List((8,20), (13,15), (10,19)), \
List((10,20), (13,19), (14,15), (11,18)), List((9,16), (11,20), (14,18), \
(12,15))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (8,16), (10,15), (9,18)), List((8,15), (11,16), (12,20)), \
List((12,15), (11,20), (13,16), (14,19)), List((9,16), (10,18), (14,15), \
(13,19))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (8,16), (10,19), (9,15)), List((8,19), (12,16), (11,20)), \
List((10,15), (11,19), (13,20), (14,18)), List((9,16), (14,15), (13,18), \
(12,20))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (8,16), (10,20), (9,19)), List((10,19), (11,20), (12,15)), \
List((11,15), (8,20), (13,16), (14,18)), List((9,16), (12,19), (14,15), \
(13,18))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (8,16), (10,20), (9,19)), List((8,20), (11,16), (12,15)), \
List((9,16), (13,19), (14,18), (11,15)), List((10,19), (12,20), (14,15), \
(13,18))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (8,16), (9,20), (12,15)), List((9,15), (11,20), (13,18)), \
List((10,19), (8,20), (12,16), (14,15)), List((10,20), (14,19), (13,15), \
(11,18))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (8,16), (9,20)), List((10,18), (8,20), (12,16), (13,15)), \
List((9,16), (11,20), (14,19), (12,15)), List((10,20), (13,18), (14,15), \
(11,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (8,16), (9,20)), List((12,16), (11,19), (13,15), (14,18)), \
List((10,15), (8,20), (14,16), (13,18)), List((9,16), (10,20), (11,15), \
(12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (8,16), (9,20)), List((12,16), (11,19), (13,15), (14,18)), \
List((8,20), (14,16), (13,18), (10,15)), List((9,16), (10,20), (11,15), \
(12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((7,16), (8,16), (9,20)), List((8,20), (12,16), (13,15), (10,18)), \
List((9,16), (11,20), (14,19), (12,15)), List((10,20), (13,18), (14,15), \
(11,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((9,15), (7,16), (8,16), (10,18)), List((9,16), (11,15), (12,20)), \
List((12,16), (11,20), (13,15), (14,19)), List((10,15), (8,18), (14,16), \
(13,19))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((9,19), (7,16), (8,16), (10,15)), List((9,16), (12,19), (11,20)), \
List((14,18), (8,15), (11,16), (13,20)), List((12,20), (10,19), (14,15), \
(13,18))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (6,17), (7,16)), \
List((9,19), (7,16), (8,16), (10,20)), List((9,16), (12,19), (11,15)), \
List((14,18), (8,20), (11,16), (13,15)), List((12,15), (10,19), (14,20), \
(13,18))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (7,17), (8,15), \
(6,17)), List((10,15), (12,20), (14,18)), List((12,18), (10,20), (11,15), \
(13,19)), List((11,19), (7,15), (9,17), (13,18)), List((8,17), (14,15), \
(9,18))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (7,17), (8,15), \
(6,17)), List((11,20), (13,19), (14,15), (12,18)), List((9,17), (11,19), \
(10,20)), List((14,18), (7,15), (10,17), (12,20)), List((8,17), (13,15), \
(9,19))),ArrayBuffer((2,0), (2,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (7,18), (12,20)), \
List((9,17), (11,15), (13,19)), List((6,18), (12,16), (14,20), (8,19)), \
List((9,15), (13,17), (14,19), (10,20)), List((7,20), (8,18), (11,19), \
(10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (7,18), (12,20)), \
List((9,17), (11,15), (13,19)), List((8,19), (6,18), (12,16), (14,20)), \
List((10,20), (9,15), (13,17), (14,19)), List((7,20), (8,18), (11,19), \
(10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (7,20), (14,18)), \
List((7,18), (8,20), (11,19)), List((6,20), (14,16), (11,18), (9,19)), \
List((12,15), (8,19), (10,20), (13,17)), List((10,17), (9,20), (12,19), \
(13,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d^2*v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (7,20), (14,18)), \
List((7,18), (8,20), (11,19)), List((6,20), (14,16), (11,18), (9,19)), \
List((8,19), (10,20), (13,17), (12,15)), List((10,17), (9,20), (12,19), \
(13,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^16*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (7,20), (14,18)), \
List((7,18), (8,20), (11,19)), List((9,19), (6,20), (14,16), (11,18)), \
List((8,19), (10,20), (13,17), (12,15)), List((9,20), (12,19), (13,15), \
(10,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d^2/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((10,15), (12,19), (14,17)), List((12,17), (10,19), (11,15), \
(13,18)), List((7,17), (9,20), (14,15)), List((9,15), (8,20), (13,17), \
(11,18))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((10,18), (12,15), (13,17)), List((11,15), (14,19), (12,17)), \
List((7,17), (9,20), (10,15), (13,18)), List((9,15), (8,20), (14,17), \
(11,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((10,20), (12,19), (11,15)), List((9,20), (13,18), (12,15), \
(10,19)), List((7,17), (11,20), (14,15)), List((9,18), (8,20), (14,17), \
(13,15))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((11,19), (14,15), (12,18)), List((10,19), (13,17), (11,15)), \
List((7,17), (9,20), (14,18), (13,15)), List((9,18), (8,20), (10,17), \
(12,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((11,19), (14,15), (13,17)), List((9,20), (12,18), (11,15), \
(10,19)), List((7,17), (10,20), (13,19)), List((9,18), (8,20), (14,17), \
(12,15))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((11,19), (14,18), (13,17), (12,15)), List((9,20), (12,19), \
(10,15)), List((7,17), (10,20), (13,15)), List((9,19), (8,20), (14,17), \
(11,18))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((12,15), (11,19), (14,18), (13,17)), List((9,20), (12,19), \
(10,15)), List((7,17), (10,20), (13,15)), List((9,19), (8,20), (14,17), \
(11,18))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((12,17), (11,19), (13,18), (14,15)), List((9,20), (11,18), \
(10,19)), List((7,17), (10,20), (12,19)), List((9,18), (8,20), (14,17), \
(13,15))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((12,17), (11,19), (14,15), (13,18)), List((9,19), (10,20), \
(11,15)), List((7,17), (9,20), (12,19)), List((10,15), (8,20), (13,17), \
(14,18))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((12,18), (11,19), (14,17), (13,15)), List((10,15), (9,20), \
(12,19), (13,18)), List((7,17), (10,20), (14,15)), List((8,20), (11,17), \
(9,19))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((12,18), (13,17), (14,15)), List((10,18), (11,19), (12,17)), \
List((7,17), (9,20), (14,18), (13,15)), List((9,18), (8,20), (11,17), \
(10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,16), (8,17), (7,20), \
(6,17)), List((12,19), (14,18), (13,17)), List((10,15), (12,18), (11,19)), \
List((7,17), (9,20), (11,15), (13,19)), List((9,15), (8,20), (14,17), \
(10,18))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (7,17), \
(8,15)), List((11,19), (14,15), (13,18)), List((12,18), (10,20), (11,15), \
(13,19)), List((7,15), (9,17), (14,18)), List((8,17), (10,15), (12,20), \
(9,18))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (7,17), \
(8,15)), List((11,19), (14,15), (13,18)), List((12,18), (10,20), (11,15), \
(13,19)), List((7,15), (9,17), (14,18)), List((9,18), (8,17), (10,15), \
(12,20))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (7,17), \
(8,15)), List((12,15), (11,20), (14,19), (13,18)), List((9,17), (11,19), \
(10,20)), List((7,15), (10,17), (12,20)), List((8,17), (13,15), (14,18), \
(9,19))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (7,17), \
(8,15)), List((12,15), (11,20), (14,19), (13,18)), List((9,17), (11,19), \
(10,20)), List((7,15), (10,17), (12,20)), List((9,19), (8,17), (13,15), \
(14,18))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^4*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (7,17), \
(8,15)), List((13,15), (9,18), (11,17), (12,19)), List((10,17), (14,20), \
(12,15), (11,19)), List((7,15), (9,17), (13,18)), List((8,17), (14,15), \
(10,20))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((10,17), (11,19), (14,15)), List((11,15), (12,19), (13,18)), \
List((10,19), (7,17), (9,20), (12,18)), List((9,18), (8,20), (14,17), \
(13,15))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((10,18), (12,15), (13,17)), List((11,15), (14,19), (12,17)), \
List((13,18), (7,17), (9,20), (10,15)), List((9,15), (8,20), (14,17), \
(11,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((11,18), (14,15), (13,17)), List((12,17), (10,19), (11,15), \
(13,18)), List((12,19), (7,17), (9,20), (10,15)), List((8,20), (14,17), \
(9,15))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((11,18), (14,15), (13,17)), List((12,17), (10,19), (11,15), \
(13,18)), List((7,17), (9,20), (10,15), (12,19)), List((8,20), (14,17), \
(9,15))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((11,19), (13,18), (14,15), (12,17)), List((11,18), (9,19), \
(10,20), (13,15)), List((7,17), (9,20), (12,19)), List((8,20), (14,17), \
(10,15))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((11,19), (14,15), (13,17), (12,18)), List((9,19), (10,20), \
(11,15)), List((13,18), (7,17), (9,20), (12,19)), List((8,20), (14,17), \
(10,15))),ArrayBuffer((2,0), (2,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,15), (11,19), (14,17), (13,18)), List((9,20), (12,19), \
(10,15)), List((14,18), (7,17), (10,20), (13,15)), List((8,20), (11,17), \
(9,19))),ArrayBuffer((2,0), (2,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,15), (11,19), (14,17), (13,18)), List((9,20), (12,19), \
(10,15)), List((7,17), (10,20), (13,15), (14,18)), List((8,20), (11,17), \
(9,19))),ArrayBuffer((2,0), (2,0), (1,0), (2,0), (1,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^4*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,15), (13,18), (14,17)), List((9,20), (12,18), (11,15), \
(10,19)), List((14,15), (7,17), (10,20), (11,19)), List((8,20), (13,17), \
(9,18))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^4*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,15), (13,18), (14,17)), List((9,20), (12,18), (11,15), \
(10,19)), List((7,17), (10,20), (11,19), (14,15)), List((8,20), (13,17), \
(9,18))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,17), (11,19), (13,18), (14,15)), List((11,18), (9,19), \
(10,20), (13,15)), List((7,17), (9,20), (12,19)), List((8,20), (14,17), \
(10,15))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,17), (11,19), (13,18), (14,15)), List((9,19), (10,20), \
(13,15), (11,18)), List((7,17), (9,20), (12,19)), List((8,20), (14,17), \
(10,15))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,17), (14,18), (13,15)), List((10,17), (11,19), (12,18)), \
List((10,19), (7,17), (9,20), (11,18)), List((9,18), (8,20), (13,17), \
(14,15))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,18), (11,19), (14,15), (13,17)), List((9,19), (10,20), \
(11,15)), List((13,18), (7,17), (9,20), (12,19)), List((8,20), (14,17), \
(10,15))),ArrayBuffer((2,0), (2,0), (1,0), (2,0), (1,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,18), (11,19), (14,17), (13,15)), List((10,15), (9,20), \
(12,19), (13,18)), List((7,17), (10,20), (14,15)), List((8,20), (11,17), \
(9,19))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((12,19), (14,18), (13,17)), List((10,15), (12,18), (11,19)), \
List((13,19), (7,17), (9,20), (11,15)), List((9,15), (8,20), (14,17), \
(10,18))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((9,18), (11,20), (13,15)), List((9,20), (13,18), (12,15), \
(10,19)), List((14,15), (7,17), (10,20), (12,19)), List((8,20), (14,17), \
(11,15))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (6,16), (8,17), \
(7,20)), List((9,18), (11,20), (13,15)), List((9,20), (13,18), (12,15), \
(10,19)), List((7,17), (10,20), (12,19), (14,15)), List((8,20), (14,17), \
(11,15))),ArrayBuffer((2,0), (1,0), (2,0), (2,0), (1,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (10,15)), \
List((7,15), (8,20), (12,19)), List((11,18), (12,15), (14,19), (13,16)), \
List((6,20), (10,17), (11,15), (9,18)), List((14,16), (8,19), (9,20), \
(13,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (10,15)), \
List((7,15), (8,20), (12,19)), List((11,18), (12,15), (14,19), (13,16)), \
List((6,20), (10,17), (11,15), (9,18)), List((8,19), (9,20), (13,18), \
(14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (10,15)), \
List((7,15), (8,20), (12,19)), List((13,16), (11,18), (12,15), (14,19)), \
List((6,20), (10,17), (11,15), (9,18)), List((8,19), (9,20), (13,18), \
(14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (10,15)), \
List((7,15), (8,20), (12,19)), List((13,16), (11,18), (12,15), (14,19)), \
List((9,18), (6,20), (10,17), (11,15)), List((8,19), (9,20), (13,18), \
(14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (10,15)), \
List((8,19), (9,20), (14,18)), List((11,18), (12,15), (13,16), (14,19)), \
List((6,20), (10,17), (11,15), (9,18)), List((7,15), (8,20), (13,19), \
(12,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (10,15)), \
List((8,19), (9,20), (14,18)), List((14,19), (11,18), (12,15), (13,16)), \
List((6,20), (10,17), (11,15), (9,18)), List((7,15), (8,20), (13,19), \
(12,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (10,15)), \
List((8,19), (9,20), (14,18)), List((14,19), (11,18), (12,15), (13,16)), \
List((9,18), (6,20), (10,17), (11,15)), List((12,16), (7,15), (8,20), \
(13,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (10,15)), \
List((8,19), (9,20), (14,18)), List((14,19), (11,18), (12,15), (13,16)), \
List((9,18), (6,20), (10,17), (11,15)), List((7,15), (8,20), (13,19), \
(12,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (11,18)), \
List((7,18), (8,20), (12,19)), List((8,19), (9,20), (13,15), (14,16)), \
List((9,15), (10,20), (14,19), (13,16)), List((6,20), (11,17), (12,18), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^16*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (13,15)), \
List((8,18), (9,20), (11,16)), List((12,19), (7,15), (8,20), (14,18)), \
List((11,18), (9,16), (10,20), (14,19)), List((6,20), (13,17), (12,15), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (13,15)), \
List((8,18), (9,20), (11,16)), List((7,15), (8,20), (14,18), (12,19)), \
List((9,16), (10,20), (14,19), (11,18)), List((6,20), (13,17), (12,15), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (14,15)), \
List((7,15), (8,20), (11,16)), List((6,20), (14,17), (12,15), (9,18)), \
List((11,15), (8,16), (10,20), (13,19)), List((10,19), (9,20), (12,18), \
(13,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (14,15)), \
List((7,15), (8,20), (11,16)), List((6,20), (14,17), (12,15), (9,18)), \
List((11,15), (8,16), (10,20), (13,19)), List((9,20), (12,18), (13,15), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (14,15)), \
List((7,15), (8,20), (11,16)), List((6,20), (14,17), (12,15), (9,18)), \
List((8,16), (10,20), (13,19), (11,15)), List((9,20), (12,18), (13,15), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (14,15)), \
List((7,15), (8,20), (11,16)), List((9,18), (6,20), (14,17), (12,15)), \
List((11,15), (8,16), (10,20), (13,19)), List((9,20), (12,18), (13,15), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (14,15)), \
List((7,15), (8,20), (11,19)), List((6,20), (14,17), (11,15), (9,19)), \
List((8,19), (10,20), (13,18), (12,16)), List((10,18), (9,20), (12,19), \
(13,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^16*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (14,19)), \
List((7,19), (8,20), (11,15)), List((6,20), (14,17), (11,19), (9,15)), \
List((8,15), (10,20), (13,18), (12,16)), List((10,18), (9,20), (12,15), \
(13,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^16*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,17), (7,20), (14,19)), \
List((7,19), (8,20), (11,15)), List((9,15), (6,20), (14,17), (11,19)), \
List((8,15), (10,20), (13,18), (12,16)), List((9,20), (12,15), (13,16), \
(10,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d^2/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,18), (13,16), (8,19)), \
List((9,15), (12,17), (10,20)), List((13,19), (6,16), (7,18), (14,20)), \
List((12,20), (9,17), (11,15), (14,19)), List((10,15), (7,20), (8,18), \
(11,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,18), (7,20), (10,15)), \
List((6,20), (10,18), (8,15)), List((13,19), (11,17), (12,15), (14,16)), \
List((12,16), (7,15), (9,20), (14,19)), List((8,20), (11,15), (13,17), \
(9,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,18), (7,20), (10,15)), \
List((6,20), (10,18), (8,15)), List((13,19), (11,17), (12,15), (14,16)), \
List((7,15), (9,20), (14,19), (12,16)), List((8,20), (11,15), (13,17), \
(9,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,18), (7,20), (10,15)), \
List((6,20), (10,18), (8,15)), List((13,19), (11,17), (12,15), (14,16)), \
List((7,15), (9,20), (14,19), (12,16)), List((9,19), (8,20), (11,15), \
(13,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 
      2*v^16 - 3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 
      4*v^26 + 2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - 
      d^2*v^30 + v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 
      2*d^2*v^36 + 3*v^38 - 6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 
      2*d^2*v^40 + v^42 + 2*d*v^42 - v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 
      6*v^48 + 3*d*v^48 - d^2*v^48 + 4*d*v^50 - d^2*v^50 - 4*v^52 + 
      3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 4*v^58 - 2*d*v^58 + 4*v^60 - 
      d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - d*v^72 - 2*v^74))/
    (v^32*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,19), (7,20), (11,16)), \
List((9,17), (10,20), (13,18)), List((11,19), (7,16), (8,20), (14,15)), \
List((8,15), (9,20), (13,17), (12,18)), List((10,18), (6,20), (14,19), \
(12,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,19), (7,20), (11,16)), \
List((9,17), (10,20), (13,18)), List((7,16), (8,20), (14,15), (11,19)), \
List((12,18), (8,15), (9,20), (13,17)), List((10,18), (6,20), (14,19), \
(12,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,19), (7,20), (12,15)), \
List((6,20), (11,19), (8,18)), List((10,17), (11,18), (12,19), (13,15)), \
List((7,15), (9,20), (14,16), (13,17)), List((8,20), (10,18), (14,17), \
(9,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,19), (7,20), (12,15)), \
List((6,20), (11,19), (8,18)), List((13,15), (10,17), (11,18), (12,19)), \
List((13,17), (7,15), (9,20), (14,16)), List((8,20), (10,18), (14,17), \
(9,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,19), (7,20), (12,15)), \
List((6,20), (11,19), (8,18)), List((13,15), (10,17), (11,18), (12,19)), \
List((13,17), (7,15), (9,20), (14,16)), List((9,16), (8,20), (10,18), \
(14,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,19), (7,20), (12,15)), \
List((6,20), (11,19), (8,18)), List((13,15), (10,17), (11,18), (12,19)), \
List((7,15), (9,20), (14,16), (13,17)), List((8,20), (10,18), (14,17), \
(9,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (10,17), (8,15)), \
List((7,18), (9,20), (13,19)), List((11,15), (13,18), (14,19), (12,16)), \
List((10,15), (6,17), (7,20), (11,18)), List((8,20), (12,15), (14,16), \
(9,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (10,17), (8,15)), \
List((7,18), (9,20), (13,19)), List((11,15), (13,18), (14,19), (12,16)), \
List((6,17), (7,20), (11,18), (10,15)), List((8,20), (12,15), (14,16), \
(9,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (10,17), (8,15)), \
List((7,18), (9,20), (13,19)), List((11,15), (13,18), (14,19), (12,16)), \
List((6,17), (7,20), (11,18), (10,15)), List((9,19), (8,20), (12,15), \
(14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (10,17), (8,15)), \
List((7,18), (9,20), (13,19)), List((12,16), (11,15), (13,18), (14,19)), \
List((10,15), (6,17), (7,20), (11,18)), List((9,19), (8,20), (12,15), \
(14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (10,17), (8,15)), \
List((8,20), (13,15), (9,19)), List((11,15), (14,18), (12,16), (13,19)), \
List((10,15), (6,17), (7,20), (11,18)), List((7,18), (9,20), (12,19), \
(14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (10,17), (8,15)), \
List((8,20), (13,15), (9,19)), List((11,15), (14,18), (12,16), (13,19)), \
List((6,17), (7,20), (11,18), (10,15)), List((14,16), (7,18), (9,20), \
(12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (10,17), (8,15)), \
List((8,20), (13,15), (9,19)), List((13,19), (11,15), (14,18), (12,16)), \
List((10,15), (6,17), (7,20), (11,18)), List((14,16), (7,18), (9,20), \
(12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (10,17), (8,15)), \
List((8,20), (13,15), (9,19)), List((13,19), (11,15), (14,18), (12,16)), \
List((10,15), (6,17), (7,20), (11,18)), List((7,18), (9,20), (12,19), \
(14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (10,17), (8,15)), \
List((8,20), (13,15), (9,19)), List((13,19), (11,15), (14,18), (12,16)), \
List((6,17), (7,20), (11,18), (10,15)), List((14,16), (7,18), (9,20), \
(12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (11,19), (8,15)), \
List((8,20), (13,15), (9,18)), List((10,17), (13,18), (11,15), (12,19)), \
List((6,19), (7,20), (14,16), (12,17)), List((14,17), (7,16), (9,20), \
(10,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (11,19), (8,15)), \
List((8,20), (13,15), (9,18)), List((10,17), (13,18), (11,15), (12,19)), \
List((6,19), (7,20), (14,16), (12,17)), List((7,16), (9,20), (10,18), \
(14,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (11,19), (8,15)), \
List((8,20), (13,15), (9,18)), List((12,19), (10,17), (13,18), (11,15)), \
List((12,17), (6,19), (7,20), (14,16)), List((7,16), (9,20), (10,18), \
(14,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((6,20), (11,19), (8,15)), \
List((8,20), (13,15), (9,18)), List((12,19), (10,17), (13,18), (11,15)), \
List((6,19), (7,20), (14,16), (12,17)), List((14,17), (7,16), (9,20), \
(10,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,15), (8,20), (13,19)), \
List((8,19), (9,20), (11,17)), List((12,16), (6,18), (7,20), (14,15)), \
List((11,19), (9,17), (10,20), (13,15)), List((10,15), (6,20), (12,18), \
(14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d^2*v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,15), (8,20), (13,19)), \
List((8,19), (9,20), (11,17)), List((12,16), (6,18), (7,20), (14,15)), \
List((9,17), (10,20), (13,15), (11,19)), List((6,20), (12,18), (14,16), \
(10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^28*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,15), (8,20), (13,19)), \
List((8,19), (9,20), (11,17)), List((6,18), (7,20), (14,15), (12,16)), \
List((9,17), (10,20), (13,15), (11,19)), List((6,20), (12,18), (14,16), \
(10,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d^2/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,15), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((10,17), (13,15), (12,18), (11,19)), \
List((14,17), (6,16), (7,20), (10,15)), List((8,19), (6,20), (14,16), \
(11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,15), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((10,17), (13,15), (12,18), (11,19)), \
List((6,16), (7,20), (10,15), (14,17)), List((8,19), (6,20), (14,16), \
(11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,15), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((11,19), (10,17), (13,15), (12,18)), \
List((14,17), (6,16), (7,20), (10,15)), List((6,20), (14,16), (11,17), \
(8,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,15), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((11,19), (10,17), (13,15), (12,18)), \
List((14,17), (6,16), (7,20), (10,15)), List((8,19), (6,20), (14,16), \
(11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,15), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((11,19), (10,17), (13,15), (12,18)), \
List((6,16), (7,20), (10,15), (14,17)), List((6,20), (14,16), (11,17), \
(8,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (8,20), (13,18)), \
List((9,15), (10,20), (12,16)), List((11,18), (6,19), (7,20), (13,17)), \
List((8,18), (9,20), (14,15), (11,19)), List((10,16), (6,20), (14,19), \
(12,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (8,20), (13,18)), \
List((9,15), (10,20), (12,16)), List((6,19), (7,20), (13,17), (11,18)), \
List((8,18), (9,20), (14,15), (11,19)), List((6,20), (14,19), (12,15), \
(10,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((10,15), (13,17), (12,18), (11,19)), \
List((14,15), (6,16), (7,20), (10,17)), List((8,19), (6,20), (14,16), \
(11,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((10,15), (13,17), (12,18), (11,19)), \
List((6,16), (7,20), (10,17), (14,15)), List((6,20), (14,16), (11,15), \
(8,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((10,15), (13,17), (12,18), (11,19)), \
List((6,16), (7,20), (10,17), (14,15)), List((8,19), (6,20), (14,16), \
(11,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((10,16), (13,17), (12,18), (11,19)), \
List((14,16), (6,15), (7,20), (10,17)), List((8,19), (6,20), (14,15), \
(11,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((10,16), (13,17), (12,18), (11,19)), \
List((6,15), (7,20), (10,17), (14,16)), List((8,19), (6,20), (14,15), \
(11,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((11,19), (10,15), (13,17), (12,18)), \
List((14,15), (6,16), (7,20), (10,17)), List((6,20), (14,16), (11,15), \
(8,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((11,19), (10,15), (13,17), (12,18)), \
List((14,15), (6,16), (7,20), (10,17)), List((8,19), (6,20), (14,16), \
(11,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,17), (9,20), (13,18)), \
List((8,20), (12,19), (9,18)), List((11,19), (10,16), (13,17), (12,18)), \
List((14,16), (6,15), (7,20), (10,17)), List((8,19), (6,20), (14,15), \
(11,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,18), (10,20), \
(12,15)), List((8,20), (13,17), (9,16)), List((10,15), (6,20), (14,19), \
(12,18)), List((8,17), (7,20), (14,18), (11,19)), List((11,17), (6,19), \
(9,20), (13,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,18), \
(10,20), (12,15)), List((8,20), (13,17), (9,16)), List((6,20), (14,19), \
(12,18), (10,15)), List((8,17), (7,20), (14,18), (11,19)), List((6,19), \
(9,20), (13,16), (11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,18), \
(10,20), (12,16)), List((8,20), (13,17), (9,15)), List((10,16), (6,20), \
(14,19), (12,18)), List((8,17), (7,20), (14,18), (11,19)), List((11,17), \
(6,19), (9,20), (13,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,18), \
(10,20), (12,16)), List((8,20), (13,17), (9,15)), List((6,20), (14,19), \
(12,18), (10,16)), List((7,20), (14,18), (11,19), (8,17)), List((11,17), \
(6,19), (9,20), (13,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -(d*v^18), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,18), \
(10,20), (12,16)), List((8,20), (13,17), (9,15)), List((6,20), (14,19), \
(12,18), (10,16)), List((8,17), (7,20), (14,18), (11,19)), List((6,19), \
(9,20), (13,15), (11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,19), \
(8,20), (11,16)), List((9,15), (10,20), (12,17)), List((13,15), (6,18), \
(7,20), (14,19)), List((11,19), (8,16), (9,20), (14,15)), List((6,20), \
(13,18), (12,15), (10,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), \
(2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,19), (8,20), (11,16)), \
List((9,15), (10,20), (12,17)), List((6,18), (7,20), (14,19), (13,15)), \
List((8,16), (9,20), (14,15), (11,19)), List((6,20), (13,18), (12,15), \
(10,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,19), (8,20), (13,15)), \
List((8,15), (9,20), (11,17)), List((12,16), (6,18), (7,20), (14,19)), \
List((11,15), (9,17), (10,20), (13,19)), List((10,19), (6,20), (12,18), \
(14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d^2*v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,19), (8,20), (13,15)), \
List((8,15), (9,20), (11,17)), List((12,16), (6,18), (7,20), (14,19)), \
List((9,17), (10,20), (13,19), (11,15)), List((6,20), (12,18), (14,16), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^28*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,19), (8,20), (13,18)), \
List((8,18), (9,20), (11,16)), List((12,15), (6,17), (7,20), (14,19)), \
List((9,16), (10,20), (13,19), (11,18)), List((6,20), (12,17), (14,15), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^28*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,19), (8,20), (13,18)), \
List((8,18), (9,20), (14,15)), List((11,16), (6,17), (7,20), (12,19)), \
List((9,15), (10,20), (13,19), (14,18)), List((6,20), (11,17), (12,16), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^28*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,20), (6,15), (6,16), \
(8,15)), List((11,15), (14,17), (12,18)), List((10,15), (13,19), (11,17)), \
List((7,15), (9,20), (13,17), (10,19)), List((9,17), (8,20), (12,15), \
(14,18))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,20), (6,15), (6,16), \
(8,15)), List((11,18), (14,15), (13,17)), List((12,17), (10,19), (11,15), \
(13,18)), List((7,15), (9,20), (14,17)), List((9,17), (8,20), (10,15), \
(12,19))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,20), (6,15), (6,16), \
(8,15)), List((12,15), (11,19), (14,18), (13,17)), List((9,20), (11,18), \
(10,19)), List((7,15), (10,20), (12,19)), List((9,18), (8,20), (13,15), \
(14,17))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,20), (6,15), (6,16), \
(8,15)), List((12,18), (13,19), (14,17)), List((10,18), (11,15), (12,19)), \
List((7,15), (9,20), (13,17), (11,19)), List((9,17), (8,20), (10,15), \
(14,18))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^28*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((7,20), (6,15), (6,16), \
(8,15)), List((13,15), (11,19), (12,17), (14,18)), List((10,19), (9,20), \
(12,18), (11,17)), List((7,15), (10,20), (13,19)), List((8,20), (14,15), \
(9,18))),ArrayBuffer((2,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,15), (12,18), (13,15), \
(14,16)), List((9,18), (10,17), (11,15)), List((8,18), (10,15), (9,17)), \
List((11,18), (7,15), (7,19), (12,15)), List((6,15), (6,20), (14,15), \
(13,16))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,15), (12,20), (9,17), \
(14,16)), List((8,20), (10,15), (11,17)), List((9,16), (10,17), (13,15)), \
List((7,15), (7,19), (14,15), (13,16)), List((6,20), (6,18), (11,20), \
(12,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d*v^30), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,15), (9,20), (13,18)), \
List((9,18), (10,20), (14,19)), List((11,16), (6,17), (7,20), (12,19)), \
List((7,19), (8,20), (13,15), (14,18)), List((10,19), (6,20), (11,17), \
(12,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d^2/v^6), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,15), (9,20), (13,18)), \
List((9,18), (10,20), (14,19)), List((6,17), (7,20), (12,19), (11,16)), \
List((14,18), (7,19), (8,20), (13,15)), List((10,19), (6,20), (11,17), \
(12,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^16*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,17), (9,20), (14,16)), \
List((6,15), (10,20), (13,19)), List((7,20), (12,18), (13,15), (10,19)), \
List((8,20), (14,17), (9,16), (11,20)), List((6,20), (12,15), (7,18), \
(11,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,19), (9,20), (11,16)), \
List((9,16), (10,20), (11,19)), List((12,18), (6,17), (7,20), (14,15)), \
List((14,18), (7,15), (8,20), (13,19)), List((10,19), (6,20), (12,17), \
(13,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,20), (10,15), \
(11,17)), List((8,15), (12,20), (9,17)), List((13,16), (9,15), (10,17), \
(14,15)), List((6,20), (6,18), (11,20), (12,17)), List((7,15), (7,19), \
(13,15), (14,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  d*v^12, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,20), (14,15), \
(10,16), (11,17)), List((8,15), (12,20), (9,17)), List((9,15), (10,17), \
(13,16)), List((7,15), (7,18), (13,15), (14,16)), List((6,19), (11,20), \
(12,17), (6,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,20), \
(14,15), (10,18)), List((7,20), (13,19), (9,17)), List((12,15), (6,16), \
(10,20), (14,18)), List((6,20), (12,16), (11,15), (7,19)), List((8,15), \
(9,20), (13,17), (11,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d*v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((8,20), \
(14,15), (10,18)), List((7,20), (13,19), (9,17)), List((12,15), (6,16), \
(10,20), (14,18)), List((7,19), (6,20), (12,16), (11,15)), List((8,15), \
(9,20), (13,17), (11,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]\
] :> -(d/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,18), \
(14,15), (13,16), (12,15)), List((8,17), (11,18), (10,15)), List((8,18), \
(10,17), (9,15)), List((7,15), (7,19), (11,15), (12,18)), List((6,15), \
(6,20), (13,15), (14,16))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), (2,0)),0)"]\
] :> d*v^12, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,19), \
(10,20), (11,15)), List((8,20), (11,19), (10,15)), List((8,19), (6,20), \
(12,16), (13,18)), List((12,18), (6,16), (7,20), (14,17)), List((14,18), \
(7,17), (9,20), (13,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> d/v^12, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,19), \
(10,20), (11,16)), List((8,20), (11,19), (10,16)), List((6,20), (12,17), \
(13,15), (8,19)), List((12,15), (6,17), (7,20), (14,18)), List((14,15), \
(7,18), (9,20), (13,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -((d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 
      2*v^16 - 3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 
      4*v^26 + 2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - 
      d^2*v^30 + v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 
      2*d^2*v^36 + 3*v^38 - 6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 
      2*d^2*v^40 + v^42 + 2*d*v^42 - v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 
      6*v^48 + 3*d*v^48 - d^2*v^48 + 4*d*v^50 - d^2*v^50 - 4*v^52 + 
      3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 4*v^58 - 2*d*v^58 + 4*v^60 - 
      d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - d*v^72 - 2*v^74))/
    (v^32*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,19), (10,20), \
(11,16)), List((8,20), (11,19), (10,16)), List((8,19), (6,20), (12,17), \
(13,15)), List((12,15), (6,17), (7,20), (14,18)), List((14,15), (7,18), \
(9,20), (13,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  d/v^12, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,19), (10,20), \
(11,16)), List((8,20), (11,19), (10,16)), List((8,19), (6,20), (12,17), \
(13,15)), List((12,15), (6,17), (7,20), (14,18)), List((7,18), (9,20), \
(13,19), (14,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  d*v^12, HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,19), (10,20), \
(12,18)), List((6,20), (11,17), (10,18)), List((11,18), (6,17), (7,20), \
(12,19)), List((7,19), (8,20), (13,15), (14,16)), List((13,16), (8,15), \
(9,20), (14,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d^2*v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,19), \
(10,20), (12,18)), List((6,20), (11,17), (10,18)), List((6,17), (7,20), \
(12,19), (11,18)), List((14,16), (7,19), (8,20), (13,15)), List((13,16), \
(8,15), (9,20), (14,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^28*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,19), (10,20), \
(12,18)), List((6,20), (11,17), (10,18)), List((6,17), (7,20), (12,19), \
(11,18)), List((14,16), (7,19), (8,20), (13,15)), List((8,15), (9,20), \
(14,19), (13,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d^2/v^6), HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,20), \
(13,15), (10,19)), List((11,18), (14,17), (12,19)), List((6,20), (12,18), \
(13,19), (9,15)), List((8,17), (7,16), (10,20), (14,19)), List((11,17), \
(6,18), (7,20), (8,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^10*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,20), (13,15), \
(10,19)), List((11,18), (14,17), (12,19)), List((9,15), (6,20), (12,18), \
(13,19)), List((8,17), (7,16), (10,20), (14,19)), List((11,17), (6,18), \
(7,20), (8,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,20), (13,16), \
(10,19)), List((11,18), (14,17), (12,19)), List((6,20), (12,18), (13,19), \
(9,16)), List((8,17), (7,15), (10,20), (14,19)), List((6,18), (7,20), (8,15), \
(11,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,20), (13,16), \
(10,19)), List((11,18), (14,17), (12,19)), List((9,16), (6,20), (12,18), \
(13,19)), List((8,17), (7,15), (10,20), (14,19)), List((11,17), (6,18), \
(7,20), (8,15))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,20), (13,19), \
(10,15)), List((11,18), (14,19), (12,17)), List((11,19), (6,18), (10,20), \
(13,15)), List((7,20), (8,16), (14,17), (9,19)), List((7,16), (6,20), \
(12,18), (8,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,20), (13,19), \
(10,15)), List((11,18), (14,19), (12,17)), List((6,18), (10,20), (13,15), \
(11,19)), List((7,20), (8,16), (14,17), (9,19)), List((6,20), (12,18), \
(8,17), (7,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,20), (13,19), \
(10,15)), List((11,18), (14,19), (12,17)), List((6,18), (10,20), (13,15), \
(11,19)), List((9,19), (7,20), (8,16), (14,17)), List((6,20), (12,18), \
(8,17), (7,16))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,20), (13,19), \
(10,16)), List((11,18), (14,19), (12,17)), List((11,19), (6,18), (10,20), \
(13,16)), List((7,20), (8,15), (14,17), (9,19)), List((7,15), (6,20), \
(12,18), (8,17))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(15,Vector(List(), List((9,20), (14,16), \
(10,17)), List((6,20), (13,15), (8,18)), List((12,15), (7,19), (8,20), \
(13,18)), List((9,16), (11,20), (10,20), (14,17)), List((6,15), (11,20), \
(7,20), (12,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,16), (12,19), \
(13,16)), List((9,16), (11,20), (13,16)), List((7,18), (11,16), (14,20)), \
List((8,17), (12,16), (15,19)), List((8,16), (15,17), (10,19)), List((7,16), \
(14,18), (9,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> 0, HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,16), (13,20), \
(11,19), (12,21)), List((12,16), (7,21), (8,22), (14,18)), List((13,19), \
(6,20), (9,22), (15,17)), List((9,17), (7,22), (11,21), (15,19)), \
List((8,18), (6,22), (10,20), (14,16))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d^2/v^12, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,16), (13,20), \
(11,19), (12,21)), List((12,16), (7,21), (8,22), (14,18)), List((6,20), \
(9,22), (15,17), (13,19)), List((9,17), (7,22), (11,21), (15,19)), \
List((6,22), (10,20), (14,16), (8,18))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + 3*v^4 + 3*v^8 - v^10 + 3*d*v^12 - 2*v^14 + 
     3*d*v^14 - 3*v^16 + 7*d*v^16 - v^18 + 6*d*v^18 - 2*v^20 + 4*d*v^20 + 
     2*v^22 + 2*d*v^22 + v^24 - 10*d*v^24 + 4*d^2*v^24 + 6*v^26 - 4*d*v^26 + 
     4*d^2*v^26 + 2*v^28 - 18*d*v^28 + 9*d^2*v^28 + 5*v^30 - 4*d*v^30 + 
     6*d^2*v^30 - 9*d*v^32 + 4*d^2*v^32 - v^34 + 9*d*v^34 - 2*d^2*v^34 - 
     4*v^36 + 10*d*v^36 - 10*d^2*v^36 + 2*d^3*v^36 - 6*v^38 + 17*d*v^38 - 
     11*d^2*v^38 + 2*d^3*v^38 - 5*v^40 + 20*d*v^40 - 16*d^2*v^40 + 
     3*d^3*v^40 - 6*v^42 + 6*d*v^42 - 9*d^2*v^42 + 2*d^3*v^42 - v^44 + 
     4*d*v^44 - d^2*v^44 - 2*v^46 - 17*d*v^46 + 5*d^2*v^46 + d^3*v^46 + 
     7*v^48 - 14*d*v^48 + 17*d^2*v^48 - 5*d^3*v^48 + d^4*v^48 + v^50 - 
     30*d*v^50 + 15*d^2*v^50 - d^3*v^50 + 9*v^52 - 13*d*v^52 + 15*d^2*v^52 - 
     4*d^3*v^52 + v^54 - 16*d*v^54 + 6*d^2*v^54 - 2*d^3*v^54 + v^56 + 
     6*d*v^56 - 4*d^2*v^56 - 4*v^58 + 9*d*v^58 - 10*d^2*v^58 + 2*d^3*v^58 - 
     7*v^60 + 20*d*v^60 - 12*d^2*v^60 + 2*d^3*v^60 - 7*v^62 + 23*d*v^62 - 
     13*d^2*v^62 + 2*d^3*v^62 - 8*v^64 + 9*d*v^64 - 6*d^2*v^64 + d^3*v^64 - 
     v^66 + 11*d*v^66 - 3*d^2*v^66 - 2*v^68 - 8*d*v^68 + 4*d^2*v^68 + 
     12*v^70 - 7*d*v^70 + 7*d^2*v^70 + 2*v^72 - 12*d*v^72 + 6*d^2*v^72 + 
     d^3*v^72 + 17*v^74 - 10*d*v^74 + 5*d^2*v^74 + v^76 - 5*d*v^76 + 
     d^2*v^76 + 6*v^78 - d*v^78 - 4*v^80 + 3*d*v^80 - 6*v^82 + 4*d*v^82 - 
     7*v^84 + 3*d*v^84 - 9*v^86 + d*v^86 - 2*v^88 - 4*v^90 + 5*v^92 + 
     3*d*v^94 + 7*v^96 + d^2*v^96 + 3*d*v^98 + 3*v^100))/
   (v^54*(1 + d*v^2 + v^4)^3), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,16), (13,21), \
(11,17), (12,20)), List((14,16), (7,19), (8,22), (15,18)), List((6,20), \
(7,22), (14,19), (12,16)), List((8,18), (9,22), (10,21), (15,16)), \
List((6,22), (11,20), (13,17), (9,21))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,18), (12,17), \
(14,19)), List((11,17), (15,20), (12,19)), List((10,17), (13,18), (11,20)), \
List((7,18), (8,16), (13,20)), List((8,20), (9,16), (15,19)), List((7,16), \
(14,18), (9,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
   ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,19), (11,21), \
(13,20), (15,16)), List((11,20), (6,21), (7,22), (14,18)), List((8,22), \
(12,17), (15,19), (9,16)), List((7,18), (9,22), (13,16), (14,20)), \
List((8,17), (6,22), (10,21), (12,19))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d^2/v^12, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,19), (12,20), \
(11,18), (13,21)), List((12,18), (7,20), (8,22), (14,16)), List((6,21), \
(9,22), (15,17), (13,19)), List((9,17), (7,22), (10,20), (15,19)), \
List((6,22), (11,21), (14,18), (8,16))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + 3*v^4 + 3*v^8 - v^10 + 3*d*v^12 - 2*v^14 + 
     3*d*v^14 - 3*v^16 + 7*d*v^16 - v^18 + 6*d*v^18 - 2*v^20 + 4*d*v^20 + 
     2*v^22 + 2*d*v^22 + v^24 - 10*d*v^24 + 4*d^2*v^24 + 6*v^26 - 4*d*v^26 + 
     4*d^2*v^26 + 2*v^28 - 18*d*v^28 + 9*d^2*v^28 + 5*v^30 - 4*d*v^30 + 
     6*d^2*v^30 - 9*d*v^32 + 4*d^2*v^32 - v^34 + 9*d*v^34 - 2*d^2*v^34 - 
     4*v^36 + 10*d*v^36 - 10*d^2*v^36 + 2*d^3*v^36 - 6*v^38 + 17*d*v^38 - 
     11*d^2*v^38 + 2*d^3*v^38 - 5*v^40 + 20*d*v^40 - 16*d^2*v^40 + 
     3*d^3*v^40 - 6*v^42 + 6*d*v^42 - 9*d^2*v^42 + 2*d^3*v^42 - v^44 + 
     4*d*v^44 - d^2*v^44 - 2*v^46 - 17*d*v^46 + 5*d^2*v^46 + d^3*v^46 + 
     7*v^48 - 14*d*v^48 + 17*d^2*v^48 - 5*d^3*v^48 + d^4*v^48 + v^50 - 
     30*d*v^50 + 15*d^2*v^50 - d^3*v^50 + 9*v^52 - 13*d*v^52 + 15*d^2*v^52 - 
     4*d^3*v^52 + v^54 - 16*d*v^54 + 6*d^2*v^54 - 2*d^3*v^54 + v^56 + 
     6*d*v^56 - 4*d^2*v^56 - 4*v^58 + 9*d*v^58 - 10*d^2*v^58 + 2*d^3*v^58 - 
     7*v^60 + 20*d*v^60 - 12*d^2*v^60 + 2*d^3*v^60 - 7*v^62 + 23*d*v^62 - 
     13*d^2*v^62 + 2*d^3*v^62 - 8*v^64 + 9*d*v^64 - 6*d^2*v^64 + d^3*v^64 - 
     v^66 + 11*d*v^66 - 3*d^2*v^66 - 2*v^68 - 8*d*v^68 + 4*d^2*v^68 + 
     12*v^70 - 7*d*v^70 + 7*d^2*v^70 + 2*v^72 - 12*d*v^72 + 6*d^2*v^72 + 
     d^3*v^72 + 17*v^74 - 10*d*v^74 + 5*d^2*v^74 + v^76 - 5*d*v^76 + 
     d^2*v^76 + 6*v^78 - d*v^78 - 4*v^80 + 3*d*v^80 - 6*v^82 + 4*d*v^82 - 
     7*v^84 + 3*d*v^84 - 9*v^86 + d*v^86 - 2*v^88 - 4*v^90 + 5*v^92 + 
     3*d*v^94 + 7*v^96 + d^2*v^96 + 3*d*v^98 + 3*v^100))/
   (v^54*(1 + d*v^2 + v^4)^3), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,20), (13,16), \
(15,19)), List((11,19), (12,17), (15,20)), List((11,17), (14,19), (12,20)), \
List((8,18), (14,20), (9,19)), List((7,16), (9,18), (13,19)), List((7,18), \
(10,16), (8,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,20), (15,18), \
(11,17)), List((11,20), (15,17), (12,18)), List((7,16), (9,20), (14,19)), \
List((7,20), (14,16), (8,19)), List((8,20), (9,19), (13,20)), List((10,18), \
(13,20), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> 0, HoldPattern[ev["PlanarGraph(16,Vector(List(), List((10,22), (12,20), \
(11,21), (13,19)), List((10,20), (6,22), (8,16), (14,17)), List((11,19), \
(7,21), (9,16), (15,18)), List((7,16), (12,21), (14,20), (8,17)), \
List((9,18), (6,16), (13,22), (15,19))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + 
     d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
     d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
   (v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((11,19), (12,20), \
(15,17)), List((10,20), (15,19), (12,17)), List((7,20), (13,16), (9,18)), \
List((8,20), (14,16), (10,19)), List((7,16), (11,20), (14,19)), List((8,16), \
(9,20), (13,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> d, HoldPattern[ev["PlanarGraph(16,Vector(List(), List((11,20), (15,19), \
(12,17)), List((10,19), (12,20), (15,17)), List((8,16), (9,20), (14,18)), \
List((7,20), (14,16), (9,18)), List((10,20), (11,19), (13,20)), List((7,16), \
(13,20), (8,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> 0, HoldPattern[ev["PlanarGraph(16,Vector(List(), List((12,16), (7,21), \
(9,22), (11,18)), List((10,19), (8,22), (12,21), (13,16)), List((11,16), \
(9,18), (10,22), (13,19)), List((6,20), (7,22), (15,21), (14,17)), \
List((6,22), (14,20), (15,17), (8,21))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d^2/v^12, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((12,20), (10,16), \
(13,21), (11,17)), List((14,16), (7,19), (8,22), (15,18)), List((12,16), \
(6,20), (7,22), (14,19)), List((15,16), (8,18), (9,22), (10,21)), \
List((9,21), (6,22), (11,20), (13,17))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(2 + d*v^2 + 5*v^4 + d*v^6 + 4*v^8 - 4*v^10 - 
     2*v^12 + d*v^12 - 8*v^14 + 2*d*v^14 + d^2*v^14 - 9*v^16 + 6*d*v^16 + 
     d^2*v^16 - 5*v^18 + 2*d*v^18 + d^2*v^18 - 6*v^20 + 3*d*v^20 - d^2*v^20 + 
     6*v^22 - 2*d*v^22 - d^2*v^22 + 3*v^24 - 12*d*v^24 + 2*d^2*v^24 + 
     19*v^26 - 10*d*v^26 - 2*d^2*v^26 + d^3*v^26 + 7*v^28 - 20*d*v^28 + 
     5*d^2*v^28 + 16*v^30 - 7*d*v^30 + 2*d^2*v^30 - v^32 - 8*d*v^32 + 
     2*d^2*v^32 + 12*d*v^34 - 3*d^2*v^34 - d^3*v^34 - 14*v^36 + 17*d*v^36 - 
     5*d^2*v^36 - d^3*v^36 - 16*v^38 + 30*d*v^38 - 9*d^2*v^38 - 11*v^40 + 
     24*d*v^40 - 8*d^2*v^40 + d^3*v^40 - 15*v^42 + 18*d*v^42 - 6*d^2*v^42 + 
     d^3*v^42 + 4*v^44 + 5*d*v^44 - d^2*v^44 + 2*v^46 - 21*d*v^46 + 
     7*d^2*v^46 + 22*v^48 - 16*d*v^48 + 8*d^2*v^48 + 10*v^50 - 40*d*v^50 + 
     20*d^2*v^50 - d^3*v^50 + 22*v^52 - 16*d*v^52 + 8*d^2*v^52 + 2*v^54 - 
     21*d*v^54 + 7*d^2*v^54 + 4*v^56 + 5*d*v^56 - d^2*v^56 - 15*v^58 + 
     18*d*v^58 - 6*d^2*v^58 + d^3*v^58 - 11*v^60 + 24*d*v^60 - 8*d^2*v^60 + 
     d^3*v^60 - 16*v^62 + 30*d*v^62 - 9*d^2*v^62 - 14*v^64 + 17*d*v^64 - 
     5*d^2*v^64 - d^3*v^64 + 12*d*v^66 - 3*d^2*v^66 - d^3*v^66 - v^68 - 
     8*d*v^68 + 2*d^2*v^68 + 16*v^70 - 7*d*v^70 + 2*d^2*v^70 + 7*v^72 - 
     20*d*v^72 + 5*d^2*v^72 + 19*v^74 - 10*d*v^74 - 2*d^2*v^74 + d^3*v^74 + 
     3*v^76 - 12*d*v^76 + 2*d^2*v^76 + 6*v^78 - 2*d*v^78 - d^2*v^78 - 
     6*v^80 + 3*d*v^80 - d^2*v^80 - 5*v^82 + 2*d*v^82 + d^2*v^82 - 9*v^84 + 
     6*d*v^84 + d^2*v^84 - 8*v^86 + 2*d*v^86 + d^2*v^86 - 2*v^88 + d*v^88 - 
     4*v^90 + 4*v^92 + d*v^94 + 5*v^96 + d*v^98 + 2*v^100))/
   (v^32*(1 + d*v^2 + v^4)^3), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((12,20), (10,16), \
(13,21), (11,17)), List((14,16), (7,19), (8,22), (15,18)), List((12,16), \
(6,20), (7,22), (14,19)), List((8,18), (9,22), (10,21), (15,16)), \
List((6,22), (11,20), (13,17), (9,21))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((12,20), (13,17), \
(15,19)), List((11,19), (14,18), (15,20)), List((8,20), (10,16), (12,17)), \
List((7,19), (9,16), (11,18)), List((8,16), (14,20), (9,18)), List((7,16), \
(13,19), (10,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
   ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((12,21), (10,16), \
(13,20), (11,19)), List((12,16), (7,21), (8,22), (14,18)), List((13,19), \
(6,20), (9,22), (15,17)), List((7,22), (11,21), (15,19), (9,17)), \
List((8,18), (6,22), (10,20), (14,16))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + 
     d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
     d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
   (v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((12,21), (10,16), \
(13,20), (11,19)), List((12,16), (7,21), (8,22), (14,18)), List((6,20), \
(9,22), (15,17), (13,19)), List((7,22), (11,21), (15,19), (9,17)), \
List((6,22), (10,20), (14,16), (8,18))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + 
     d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
     d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
   (v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((13,16), (15,18), \
(14,19)), List((10,16), (11,20), (12,17)), List((9,20), (12,16), (11,17)), \
List((7,20), (13,18), (9,16)), List((7,18), (8,20), (15,19)), List((8,19), \
(10,20), (14,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((13,19), (10,22), \
(12,20), (11,21)), List((10,20), (6,22), (8,16), (14,17)), List((7,21), \
(9,16), (15,18), (11,19)), List((7,16), (12,21), (14,20), (8,17)), \
List((9,18), (6,16), (13,22), (15,19))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + 3*v^4 + 3*v^8 - v^10 + 3*d*v^12 - 2*v^14 + 
     3*d*v^14 - 3*v^16 + 7*d*v^16 - v^18 + 6*d*v^18 - 2*v^20 + 4*d*v^20 + 
     2*v^22 + 2*d*v^22 + v^24 - 10*d*v^24 + 4*d^2*v^24 + 6*v^26 - 4*d*v^26 + 
     4*d^2*v^26 + 2*v^28 - 18*d*v^28 + 9*d^2*v^28 + 5*v^30 - 4*d*v^30 + 
     6*d^2*v^30 - 9*d*v^32 + 4*d^2*v^32 - v^34 + 9*d*v^34 - 2*d^2*v^34 - 
     4*v^36 + 10*d*v^36 - 10*d^2*v^36 + 2*d^3*v^36 - 6*v^38 + 17*d*v^38 - 
     11*d^2*v^38 + 2*d^3*v^38 - 5*v^40 + 20*d*v^40 - 16*d^2*v^40 + 
     3*d^3*v^40 - 6*v^42 + 6*d*v^42 - 9*d^2*v^42 + 2*d^3*v^42 - v^44 + 
     4*d*v^44 - d^2*v^44 - 2*v^46 - 17*d*v^46 + 5*d^2*v^46 + d^3*v^46 + 
     7*v^48 - 14*d*v^48 + 17*d^2*v^48 - 5*d^3*v^48 + d^4*v^48 + v^50 - 
     30*d*v^50 + 15*d^2*v^50 - d^3*v^50 + 9*v^52 - 13*d*v^52 + 15*d^2*v^52 - 
     4*d^3*v^52 + v^54 - 16*d*v^54 + 6*d^2*v^54 - 2*d^3*v^54 + v^56 + 
     6*d*v^56 - 4*d^2*v^56 - 4*v^58 + 9*d*v^58 - 10*d^2*v^58 + 2*d^3*v^58 - 
     7*v^60 + 20*d*v^60 - 12*d^2*v^60 + 2*d^3*v^60 - 7*v^62 + 23*d*v^62 - 
     13*d^2*v^62 + 2*d^3*v^62 - 8*v^64 + 9*d*v^64 - 6*d^2*v^64 + d^3*v^64 - 
     v^66 + 11*d*v^66 - 3*d^2*v^66 - 2*v^68 - 8*d*v^68 + 4*d^2*v^68 + 
     12*v^70 - 7*d*v^70 + 7*d^2*v^70 + 2*v^72 - 12*d*v^72 + 6*d^2*v^72 + 
     d^3*v^72 + 17*v^74 - 10*d*v^74 + 5*d^2*v^74 + v^76 - 5*d*v^76 + 
     d^2*v^76 + 6*v^78 - d*v^78 - 4*v^80 + 3*d*v^80 - 6*v^82 + 4*d*v^82 - 
     7*v^84 + 3*d*v^84 - 9*v^86 + d*v^86 - 2*v^88 - 4*v^90 + 5*v^92 + 
     3*d*v^94 + 7*v^96 + d^2*v^96 + 3*d*v^98 + 3*v^100))/
   (v^54*(1 + d*v^2 + v^4)^3), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((13,19), (10,22), \
(12,20), (11,21)), List((6,22), (8,16), (14,17), (10,20)), List((11,19), \
(7,21), (9,16), (15,18)), List((8,17), (7,16), (12,21), (14,20)), \
List((6,16), (13,22), (15,19), (9,18))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + 3*v^4 + 3*v^8 - v^10 + 3*d*v^12 - 2*v^14 + 
     3*d*v^14 - 3*v^16 + 7*d*v^16 - v^18 + 6*d*v^18 - 2*v^20 + 4*d*v^20 + 
     2*v^22 + 2*d*v^22 + v^24 - 10*d*v^24 + 4*d^2*v^24 + 6*v^26 - 4*d*v^26 + 
     4*d^2*v^26 + 2*v^28 - 18*d*v^28 + 9*d^2*v^28 + 5*v^30 - 4*d*v^30 + 
     6*d^2*v^30 - 9*d*v^32 + 4*d^2*v^32 - v^34 + 9*d*v^34 - 2*d^2*v^34 - 
     4*v^36 + 10*d*v^36 - 10*d^2*v^36 + 2*d^3*v^36 - 6*v^38 + 17*d*v^38 - 
     11*d^2*v^38 + 2*d^3*v^38 - 5*v^40 + 20*d*v^40 - 16*d^2*v^40 + 
     3*d^3*v^40 - 6*v^42 + 6*d*v^42 - 9*d^2*v^42 + 2*d^3*v^42 - v^44 + 
     4*d*v^44 - d^2*v^44 - 2*v^46 - 17*d*v^46 + 5*d^2*v^46 + d^3*v^46 + 
     7*v^48 - 14*d*v^48 + 17*d^2*v^48 - 5*d^3*v^48 + d^4*v^48 + v^50 - 
     30*d*v^50 + 15*d^2*v^50 - d^3*v^50 + 9*v^52 - 13*d*v^52 + 15*d^2*v^52 - 
     4*d^3*v^52 + v^54 - 16*d*v^54 + 6*d^2*v^54 - 2*d^3*v^54 + v^56 + 
     6*d*v^56 - 4*d^2*v^56 - 4*v^58 + 9*d*v^58 - 10*d^2*v^58 + 2*d^3*v^58 - 
     7*v^60 + 20*d*v^60 - 12*d^2*v^60 + 2*d^3*v^60 - 7*v^62 + 23*d*v^62 - 
     13*d^2*v^62 + 2*d^3*v^62 - 8*v^64 + 9*d*v^64 - 6*d^2*v^64 + d^3*v^64 - 
     v^66 + 11*d*v^66 - 3*d^2*v^66 - 2*v^68 - 8*d*v^68 + 4*d^2*v^68 + 
     12*v^70 - 7*d*v^70 + 7*d^2*v^70 + 2*v^72 - 12*d*v^72 + 6*d^2*v^72 + 
     d^3*v^72 + 17*v^74 - 10*d*v^74 + 5*d^2*v^74 + v^76 - 5*d*v^76 + 
     d^2*v^76 + 6*v^78 - d*v^78 - 4*v^80 + 3*d*v^80 - 6*v^82 + 4*d*v^82 - 
     7*v^84 + 3*d*v^84 - 9*v^86 + d*v^86 - 2*v^88 - 4*v^90 + 5*v^92 + 
     3*d*v^94 + 7*v^96 + d^2*v^96 + 3*d*v^98 + 3*v^100))/
   (v^54*(1 + d*v^2 + v^4)^3), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((13,19), (10,22), \
(12,20), (11,21)), List((6,22), (8,16), (14,17), (10,20)), List((7,21), \
(9,16), (15,18), (11,19)), List((7,16), (12,21), (14,20), (8,17)), \
List((6,16), (13,22), (15,19), (9,18))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d^2/v^12, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((13,21), (10,19), \
(12,20), (11,18)), List((12,18), (7,20), (8,22), (14,16)), List((13,19), \
(6,21), (9,22), (15,17)), List((7,22), (10,20), (15,19), (9,17)), \
List((8,16), (6,22), (11,21), (14,18))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + 
     d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
     d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
   (v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((15,21), (12,19), \
(14,16), (13,18)), List((6,20), (7,22), (11,16), (10,17)), List((6,22), \
(10,20), (11,17), (8,16)), List((14,18), (7,16), (9,22), (13,21)), \
List((9,21), (8,22), (12,16), (15,19))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> d^2/v^12, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((6,16), (6,17), (8,16), \
(7,22)), List((10,16), (13,19), (15,18), (12,21)), List((14,18), (11,20), \
(12,16), (15,21)), List((7,16), (9,22), (13,18), (10,19)), List((8,22), \
(11,16), (14,20), (9,18))),ArrayBuffer((2,0), (2,0), (2,0), (2,0), (2,0)),0)"]\
] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((6,16), (6,17), (8,16), \
(7,22)), List((10,20), (11,16), (14,18), (13,21)), List((14,21), (11,18), \
(12,16), (15,19)), List((9,16), (13,20), (15,21), (12,19)), List((7,16), \
(8,22), (10,16), (9,20))),ArrayBuffer((2,0), (2,0), (2,0), (2,0), (2,0)),0)"]] \
:> d*v^12, HoldPattern[ev["PlanarGraph(16,Vector(List(), List((6,16), (6,17), \
(8,16), (7,22)), List((13,21), (10,20), (11,16), (14,18)), List((14,21), \
(11,18), (12,16), (15,19)), List((9,16), (13,20), (15,21), (12,19)), \
List((9,20), (7,16), (8,22), (10,16))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> 
  -((d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 
      2*v^16 - 3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 
      4*v^26 + 2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - 
      d^2*v^30 + v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 
      2*d^2*v^36 + 3*v^38 - 6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 
      2*d^2*v^40 + v^42 + 2*d*v^42 - v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 
      6*v^48 + 3*d*v^48 - d^2*v^48 + 4*d*v^50 - d^2*v^50 - 4*v^52 + 
      3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 4*v^58 - 2*d*v^58 + 4*v^60 - 
      d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - d*v^72 - 2*v^74))/
    (v^32*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((6,18), (6,17), (8,18), \
(7,22)), List((13,18), (10,19), (12,16), (15,20)), List((11,16), (14,21), \
(15,18), (12,20)), List((13,19), (7,18), (9,22), (10,16)), List((9,16), \
(8,22), (14,18), (11,21))),ArrayBuffer((2,0), (2,0), (2,0), (2,0), (2,0)),0)"]\
] :> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,16), (7,17), (8,16)), \
List((8,16), (10,16), (9,20)), List((11,16), (13,20), (15,18)), List((11,20), \
(14,16), (12,19)), List((9,16), (12,20), (14,19)), List((10,20), (15,16), \
(13,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,16), (7,17), (8,16)), \
List((8,16), (10,16), (9,20)), List((12,16), (13,19), (15,18)), List((12,19), \
(14,16), (13,18)), List((9,16), (11,20), (14,18)), List((10,20), (15,16), \
(11,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,16), (7,17), (8,16)), \
List((8,16), (10,16), (9,20)), List((12,20), (14,19), (13,18)), List((11,19), \
(13,20), (14,18)), List((9,16), (11,20), (15,19)), List((10,20), (15,16), \
(12,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,16), (7,17), (8,16)), \
List((8,16), (10,16), (9,20)), List((13,19), (15,18), (14,16)), List((11,20), \
(13,18), (12,19)), List((9,16), (12,20), (14,19)), List((10,20), (15,16), \
(11,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,16), (8,17), (7,17)), \
List((8,17), (10,17), (9,20)), List((11,18), (13,20), (14,17)), List((12,20), \
(15,19), (13,17)), List((9,17), (11,20), (14,18)), List((10,20), (15,17), \
(12,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,16), (8,17), (7,17)), \
List((8,17), (10,17), (9,20)), List((12,17), (13,19), (15,18)), List((12,19), \
(14,17), (13,18)), List((9,17), (11,20), (14,18)), List((10,20), (15,17), \
(11,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,16), (8,17), (7,17)), \
List((8,17), (10,17), (9,20)), List((12,20), (14,19), (13,18)), List((11,19), \
(13,20), (14,18)), List((9,17), (11,20), (15,19)), List((10,20), (15,17), \
(12,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,16), (8,17), (7,17)), \
List((8,17), (10,17), (9,20)), List((13,19), (15,18), (14,17)), List((11,20), \
(13,18), (12,19)), List((9,17), (12,20), (14,19)), List((10,20), (15,17), \
(11,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,16), (8,20), (13,18)), \
List((7,20), (13,16), (9,18)), List((8,18), (10,20), (14,19)), List((9,20), \
(14,18), (11,19)), List((10,19), (12,20), (15,17)), List((11,20), (15,19), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (13,17), (14,16)), List((9,20), (13,16), (10,17)), List((10,20), \
(14,17), (11,16)), List((9,16), (12,20), (15,19)), List((11,20), (15,16), \
(12,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (13,17), (14,16)), List((9,20), (13,16), (10,17)), List((10,20), \
(15,17), (11,19)), List((9,16), (12,20), (14,17)), List((11,20), (15,19), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (13,17), (14,19)), List((9,20), (13,19), (10,17)), List((10,20), \
(15,17), (11,16)), List((9,19), (12,20), (14,17)), List((11,20), (15,16), \
(12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,16)), List((9,16), (11,17), (12,19)), List((10,17), \
(13,16), (14,20)), List((11,19), (14,17), (15,20)), List((12,16), (15,19), \
(13,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,16)), List((9,16), (11,17), (12,19)), List((10,17), \
(13,16), (14,20)), List((11,19), (15,17), (12,16)), List((13,20), (15,16), \
(14,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,20)), List((12,16), (14,17), (15,19)), List((13,17), \
(15,16), (14,19)), List((9,20), (12,17), (11,16)), List((10,17), (11,20), \
(13,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,20)), List((13,16), (15,17), (14,19)), List((9,20), \
(13,17), (11,16)), List((10,17), (12,20), (15,19)), List((11,20), (14,16), \
(12,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,20)), List((13,19), (15,17), (14,16)), List((9,20), \
(13,17), (11,19)), List((10,17), (12,20), (15,16)), List((11,20), (14,19), \
(12,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,20)), List((9,20), (14,17), (11,16)), List((10,17), \
(12,20), (14,16)), List((11,20), (15,16), (13,19)), List((12,16), (13,20), \
(15,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,20)), List((9,20), (14,17), (11,16)), List((10,17), \
(12,20), (15,19)), List((11,20), (14,16), (13,17)), List((12,19), (13,20), \
(15,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,20)), List((9,20), (14,17), (11,19)), List((10,17), \
(12,20), (14,19)), List((11,20), (15,19), (13,16)), List((12,19), (13,20), \
(15,16))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,20)), List((9,20), (14,17), (11,19)), List((10,17), \
(12,20), (15,16)), List((11,20), (14,19), (13,17)), List((12,16), (13,20), \
(15,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,20), (13,16), \
(10,17)), List((9,20), (15,16), (12,19)), List((8,20), (14,16), (11,18)), \
List((7,16), (11,20), (14,18)), List((9,16), (10,20), (13,17)), List((8,16), \
(12,20), (15,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> d, HoldPattern[ev["PlanarGraph(16,Vector(List(), List((7,22), (6,16), \
(6,17), (8,16)), List((10,16), (13,19), (15,18), (12,21)), List((14,18), \
(11,20), (12,16), (15,21)), List((7,16), (9,22), (13,18), (10,19)), \
List((9,18), (8,22), (11,16), (14,20))),ArrayBuffer((2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> (d*(1 + 3*v^4 + 3*v^8 - v^10 + 3*d*v^12 - 2*v^14 + 
     3*d*v^14 - 3*v^16 + 7*d*v^16 - v^18 + 6*d*v^18 - 2*v^20 + 4*d*v^20 + 
     2*v^22 + 2*d*v^22 + v^24 - 10*d*v^24 + 4*d^2*v^24 + 6*v^26 - 4*d*v^26 + 
     4*d^2*v^26 + 2*v^28 - 18*d*v^28 + 9*d^2*v^28 + 5*v^30 - 4*d*v^30 + 
     6*d^2*v^30 - 9*d*v^32 + 4*d^2*v^32 - v^34 + 9*d*v^34 - 2*d^2*v^34 - 
     4*v^36 + 10*d*v^36 - 10*d^2*v^36 + 2*d^3*v^36 - 6*v^38 + 17*d*v^38 - 
     11*d^2*v^38 + 2*d^3*v^38 - 5*v^40 + 20*d*v^40 - 16*d^2*v^40 + 
     3*d^3*v^40 - 6*v^42 + 6*d*v^42 - 9*d^2*v^42 + 2*d^3*v^42 - v^44 + 
     4*d*v^44 - d^2*v^44 - 2*v^46 - 17*d*v^46 + 5*d^2*v^46 + d^3*v^46 + 
     7*v^48 - 14*d*v^48 + 17*d^2*v^48 - 5*d^3*v^48 + d^4*v^48 + v^50 - 
     30*d*v^50 + 15*d^2*v^50 - d^3*v^50 + 9*v^52 - 13*d*v^52 + 15*d^2*v^52 - 
     4*d^3*v^52 + v^54 - 16*d*v^54 + 6*d^2*v^54 - 2*d^3*v^54 + v^56 + 
     6*d*v^56 - 4*d^2*v^56 - 4*v^58 + 9*d*v^58 - 10*d^2*v^58 + 2*d^3*v^58 - 
     7*v^60 + 20*d*v^60 - 12*d^2*v^60 + 2*d^3*v^60 - 7*v^62 + 23*d*v^62 - 
     13*d^2*v^62 + 2*d^3*v^62 - 8*v^64 + 9*d*v^64 - 6*d^2*v^64 + d^3*v^64 - 
     v^66 + 11*d*v^66 - 3*d^2*v^66 - 2*v^68 - 8*d*v^68 + 4*d^2*v^68 + 
     12*v^70 - 7*d*v^70 + 7*d^2*v^70 + 2*v^72 - 12*d*v^72 + 6*d^2*v^72 + 
     d^3*v^72 + 17*v^74 - 10*d*v^74 + 5*d^2*v^74 + v^76 - 5*d*v^76 + 
     d^2*v^76 + 6*v^78 - d*v^78 - 4*v^80 + 3*d*v^80 - 6*v^82 + 4*d*v^82 - 
     7*v^84 + 3*d*v^84 - 9*v^86 + d*v^86 - 2*v^88 - 4*v^90 + 5*v^92 + 
     3*d*v^94 + 7*v^96 + d^2*v^96 + 3*d*v^98 + 3*v^100))/
   (v^54*(1 + d*v^2 + v^4)^3), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((8,16), (13,20), (9,19)), \
List((7,16), (13,19), (10,20)), List((8,20), (12,16), (15,17)), List((7,19), \
(11,16), (14,18)), List((10,16), (15,20), (12,17)), List((9,16), (14,19), \
(11,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((9,17), (11,18), \
(13,20)), List((9,18), (10,17), (12,19)), List((10,19), (13,17), (15,20)), \
List((11,20), (12,18), (14,19)), List((7,16), (15,19), (8,20)), List((7,19), \
(8,16), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(16,Vector(List(), List((9,20), (12,19), \
(11,18)), List((9,19), (13,20), (10,17)), List((10,19), (13,17), (15,20)), \
List((11,20), (12,18), (14,19)), List((7,16), (15,19), (8,20)), List((7,19), \
(8,16), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (12,19), \
(13,21)), List((13,17), (15,21), (14,22)), List((8,20), (16,21), (9,22)), \
List((7,18), (9,20), (11,22)), List((10,19), (14,17), (16,22), (12,21)), \
List((7,20), (11,18), (15,22), (8,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (12,19), \
(13,21)), List((13,17), (15,21), (14,22)), List((8,20), (16,21), (9,22)), \
List((7,18), (9,20), (11,22)), List((12,21), (10,19), (14,17), (16,22)), \
List((7,20), (11,18), (15,22), (8,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (12,19), \
(13,21)), List((13,17), (16,21), (14,22)), List((8,21), (9,20), (16,22)), \
List((7,20), (11,18), (9,22)), List((12,21), (10,19), (14,17), (15,22)), \
List((11,22), (7,18), (8,20), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (12,20), \
(16,17)), List((11,20), (14,18), (12,17)), List((9,19), (10,20), (13,17)), \
List((11,18), (9,20), (13,19), (15,17)), List((8,17), (8,21), (16,17)), \
List((7,17), (7,22), (14,17), (15,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(2,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (13,18), \
(11,19)), List((7,21), (12,17), (16,17)), List((8,17), (15,22), (14,20)), \
List((7,17), (9,21), (8,22)), List((9,22), (16,21), (14,17), (15,20)), \
List((13,19), (10,18), (12,17), (11,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (13,18), \
(11,19)), List((8,17), (16,21), (12,17)), List((7,22), (15,17), (14,20)), \
List((7,17), (9,22), (8,21)), List((16,17), (9,21), (14,22), (15,20)), \
List((13,19), (10,18), (12,17), (11,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (14,18), \
(11,21)), List((9,17), (13,19), (12,22)), List((7,22), (8,20), (16,21)), \
List((7,20), (15,22), (8,21)), List((13,22), (9,19), (11,17), (15,21)), \
List((14,21), (10,18), (12,17), (16,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (16,21), \
(11,20)), List((12,22), (13,18), (14,21)), List((8,22), (9,19), (15,20)), \
List((7,19), (11,17), (9,20)), List((12,18), (15,22), (16,20), (13,21)), \
List((10,21), (7,17), (8,19), (14,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (16,21), \
(11,20)), List((12,22), (13,18), (14,21)), List((8,22), (9,19), (15,20)), \
List((7,19), (11,17), (9,20)), List((12,18), (15,22), (16,20), (13,21)), \
List((7,17), (8,19), (14,22), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,17), (16,21), \
(11,20)), List((12,22), (13,18), (14,21)), List((8,22), (9,19), (15,20)), \
List((7,19), (11,17), (9,20)), List((13,21), (12,18), (15,22), (16,20)), \
List((7,17), (8,19), (14,22), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,18), (11,22), \
(16,19)), List((7,22), (15,17), (12,21)), List((7,17), (8,22), (14,20)), \
List((9,21), (13,22), (12,22)), List((14,17), (8,20), (9,22), (15,21)), \
List((13,22), (10,22), (16,18), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,18), (13,17), \
(12,22)), List((9,19), (14,17), (11,21)), List((7,22), (8,20), (16,21)), \
List((7,20), (15,22), (8,21)), List((9,17), (11,19), (15,21), (13,22)), \
List((10,17), (12,18), (16,22), (14,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,18), (14,20), \
(16,17)), List((11,20), (12,19), (13,17)), List((9,17), (10,20), (15,18)), \
List((9,20), (12,17), (11,19)), List((8,17), (8,21), (15,17), (16,18)), \
List((7,17), (7,22), (14,17), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,19), (14,17), \
(12,21)), List((13,17), (15,22), (14,21)), List((8,21), (9,20), (16,22)), \
List((7,20), (11,18), (9,22)), List((10,17), (12,19), (16,21), (13,22)), \
List((7,18), (8,20), (15,21), (11,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,19), (14,17), \
(12,21)), List((13,17), (16,22), (14,21)), List((8,20), (16,21), (9,22)), \
List((7,18), (9,20), (11,22)), List((10,17), (12,19), (15,21), (13,22)), \
List((7,20), (11,18), (15,22), (8,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,19), (14,17), \
(12,21)), List((13,17), (16,22), (14,21)), List((8,20), (16,21), (9,22)), \
List((7,18), (9,20), (11,22)), List((13,22), (10,17), (12,19), (15,21)), \
List((8,21), (7,20), (11,18), (15,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,21), (11,17), \
(16,20)), List((12,18), (14,22), (13,21)), List((8,19), (15,22), (9,20)), \
List((7,17), (9,19), (11,20)), List((12,22), (13,18), (16,21), (15,20)), \
List((7,19), (10,17), (14,21), (8,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,21), (11,17), \
(16,20)), List((12,18), (14,22), (13,21)), List((8,19), (15,22), (9,20)), \
List((7,17), (9,19), (11,20)), List((12,22), (13,18), (16,21), (15,20)), \
List((8,22), (7,19), (10,17), (14,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,21), (11,17), \
(16,20)), List((12,18), (14,22), (13,21)), List((8,19), (15,22), (9,20)), \
List((7,17), (9,19), (11,20)), List((15,20), (12,22), (13,18), (16,21)), \
List((8,22), (7,19), (10,17), (14,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,21), (11,22), \
(16,18)), List((9,22), (16,21), (11,18)), List((7,17), (8,22), (14,20)), \
List((9,21), (13,22), (10,22)), List((14,17), (8,20), (12,22), (15,19)), \
List((13,22), (7,22), (15,17), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,22), (16,19), \
(11,18)), List((7,17), (9,22), (15,21)), List((7,22), (14,17), (8,20)), \
List((9,21), (13,22), (12,22)), List((8,22), (14,20), (15,17), (12,21)), \
List((16,18), (10,19), (13,22), (11,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((10,22), (16,21), \
(11,18)), List((9,21), (11,22), (16,18)), List((7,22), (14,17), (8,19)), \
List((9,22), (10,21), (13,22)), List((8,22), (14,19), (15,17), (12,20)), \
List((15,20), (7,17), (13,22), (12,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (12,19), \
(16,20)), List((11,19), (13,17), (14,21)), List((7,22), (13,21), (9,17)), \
List((9,22), (15,17), (10,18)), List((7,21), (8,22), (12,20), (14,19)), \
List((16,17), (8,20), (10,22), (15,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (13,19), \
(14,21)), List((12,18), (16,20), (15,17)), List((7,21), (8,22), (14,17)), \
List((7,22), (13,21), (9,19)), List((8,17), (10,22), (12,20), (15,18)), \
List((10,20), (9,22), (11,19), (16,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (13,19), \
(14,21)), List((12,18), (16,20), (15,17)), List((7,21), (8,22), (14,17)), \
List((7,22), (13,21), (9,19)), List((8,17), (10,22), (12,20), (15,18)), \
List((9,22), (11,19), (16,17), (10,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (14,21), \
(12,20)), List((7,21), (8,19), (14,20)), List((7,19), (15,21), (9,22)), \
List((8,20), (9,19), (16,22)), List((10,17), (13,18), (15,22), (11,21)), \
List((10,18), (12,17), (16,20), (13,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (14,21), \
(12,20)), List((7,21), (8,19), (14,20)), List((7,19), (15,21), (9,22)), \
List((8,20), (9,19), (16,22)), List((10,17), (13,18), (15,22), (11,21)), \
List((13,22), (10,18), (12,17), (16,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*
    (1 + v + v^2)*(1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (14,21), \
(12,20)), List((7,21), (8,19), (14,20)), List((7,19), (15,21), (9,22)), \
List((8,20), (9,19), (16,22)), List((11,21), (10,17), (13,18), (15,22)), \
List((10,18), (12,17), (16,20), (13,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
     (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
      3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
    (v^22*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (14,21), \
(12,20)), List((7,21), (8,19), (14,20)), List((7,19), (15,21), (9,22)), \
List((8,20), (9,19), (16,22)), List((11,21), (10,17), (13,18), (15,22)), \
List((13,22), (10,18), (12,17), (16,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (14,21), \
(13,19)), List((8,22), (15,17), (9,18)), List((7,20), (10,22), (16,17)), \
List((9,22), (15,18), (10,17)), List((12,21), (16,20), (13,17), (14,19)), \
List((7,22), (12,20), (11,21), (8,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (14,21), \
(13,19)), List((8,22), (15,17), (9,18)), List((7,20), (10,22), (16,17)), \
List((9,22), (15,18), (10,17)), List((12,21), (16,20), (13,17), (14,19)), \
List((8,17), (7,22), (12,20), (11,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,17), (14,21), \
(13,19)), List((8,22), (15,17), (9,18)), List((7,20), (10,22), (16,17)), \
List((9,22), (15,18), (10,17)), List((14,19), (12,21), (16,20), (13,17)), \
List((7,22), (12,20), (11,21), (8,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (12,17), \
(14,19)), List((13,21), (16,17), (15,20)), List((7,17), (8,22), (16,20)), \
List((8,20), (9,22), (15,21)), List((10,19), (7,22), (11,17), (14,18)), \
List((9,21), (10,22), (12,19), (13,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (12,17), \
(14,19)), List((13,21), (16,17), (15,20)), List((7,17), (8,22), (16,20)), \
List((8,20), (9,22), (15,21)), List((7,22), (11,17), (14,18), (10,19)), \
List((13,17), (9,21), (10,22), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (12,17), \
(14,19)), List((13,21), (16,17), (15,20)), List((7,17), (8,22), (16,20)), \
List((8,20), (9,22), (15,21)), List((7,22), (11,17), (14,18), (10,19)), \
List((9,21), (10,22), (12,19), (13,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (14,20), \
(13,17)), List((8,22), (13,18), (9,17)), List((9,22), (16,17), (10,19)), \
List((7,21), (10,22), (15,19)), List((12,20), (15,21), (16,19), (14,17)), \
List((7,22), (12,21), (11,20), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
      2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
      2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
      d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
      3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
      d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
     (1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (14,20), \
(13,17)), List((8,22), (13,18), (9,17)), List((9,22), (16,17), (10,19)), \
List((7,21), (10,22), (15,19)), List((12,20), (15,21), (16,19), (14,17)), \
List((8,18), (7,22), (12,21), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (14,20), \
(13,17)), List((8,22), (13,18), (9,17)), List((9,22), (16,17), (10,19)), \
List((7,21), (10,22), (15,19)), List((14,17), (12,20), (15,21), (16,19)), \
List((7,22), (12,21), (11,20), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (14,20), \
(13,17)), List((8,22), (13,18), (9,17)), List((9,22), (16,17), (10,19)), \
List((7,21), (10,22), (15,19)), List((14,17), (12,20), (15,21), (16,19)), \
List((8,18), (7,22), (12,21), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
      2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
      2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
      d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
      3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
      d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
     (1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (15,20), \
(16,17)), List((12,19), (13,17), (14,21)), List((7,22), (13,21), (9,17)), \
List((9,22), (15,17), (10,20)), List((14,19), (7,21), (8,22), (12,17)), \
List((8,17), (10,22), (11,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (15,20), \
(16,17)), List((12,19), (13,17), (14,21)), List((7,22), (13,21), (9,17)), \
List((9,22), (15,17), (10,20)), List((7,21), (8,22), (12,17), (14,19)), \
List((16,18), (8,17), (10,22), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (15,20), \
(16,17)), List((12,19), (13,17), (14,21)), List((7,22), (13,21), (9,17)), \
List((9,22), (15,17), (10,20)), List((7,21), (8,22), (12,17), (14,19)), \
List((8,17), (10,22), (11,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,18), (16,21), \
(12,22)), List((11,21), (12,18), (15,22)), List((8,20), (14,17), (10,22)), \
List((7,20), (13,19), (9,21)), List((14,22), (8,17), (9,20), (15,21)), \
List((13,21), (7,19), (10,20), (16,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,19), (15,21), \
(13,17)), List((12,17), (14,20), (13,19)), List((9,17), (10,22), (16,18)), \
List((8,21), (9,22), (15,17)), List((10,18), (7,22), (12,20), (16,17)), \
List((14,19), (7,20), (8,22), (11,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,19), (15,21), \
(13,17)), List((12,17), (14,20), (13,19)), List((9,17), (10,22), (16,18)), \
List((8,21), (9,22), (15,17)), List((7,22), (12,20), (16,17), (10,18)), \
List((14,19), (7,20), (8,22), (11,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,19), (15,21), \
(13,17)), List((12,17), (14,20), (13,19)), List((9,17), (10,22), (16,18)), \
List((8,21), (9,22), (15,17)), List((7,22), (12,20), (16,17), (10,18)), \
List((7,20), (8,22), (11,21), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,20), (12,21), \
(16,17)), List((7,18), (9,22), (13,21)), List((8,22), (15,19), (10,20)), \
List((7,22), (14,18), (8,19)), List((12,17), (9,21), (10,22), (16,20)), \
List((11,21), (15,20), (14,19), (13,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,20), (12,21), \
(16,17)), List((7,18), (9,22), (13,21)), List((8,22), (15,19), (10,20)), \
List((7,22), (14,18), (8,19)), List((12,17), (9,21), (10,22), (16,20)), \
List((13,18), (11,21), (15,20), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,20), (12,21), \
(16,17)), List((7,18), (9,22), (13,21)), List((8,22), (15,19), (10,20)), \
List((7,22), (14,18), (8,19)), List((9,21), (10,22), (16,20), (12,17)), \
List((11,21), (15,20), (14,19), (13,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,20), (12,22), \
(15,18)), List((7,22), (13,17), (9,21)), List((8,22), (14,17), (10,19)), \
List((7,17), (10,22), (14,19)), List((9,22), (16,21), (15,20), (12,18)), \
List((8,17), (11,22), (16,20), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,20), (13,21), \
(14,17)), List((8,22), (15,18), (9,19)), List((9,22), (16,19), (10,17)), \
List((7,21), (10,22), (13,17)), List((12,18), (14,20), (16,17), (15,19)), \
List((7,22), (11,21), (12,20), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,20), (13,21), \
(14,17)), List((8,22), (15,18), (9,19)), List((9,22), (16,19), (10,17)), \
List((7,21), (10,22), (13,17)), List((12,18), (14,20), (16,17), (15,19)), \
List((8,18), (7,22), (11,21), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
      2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
      2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
      d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
      3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
      d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
     (1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,20), (13,21), \
(14,17)), List((8,22), (15,18), (9,19)), List((9,22), (16,19), (10,17)), \
List((7,21), (10,22), (13,17)), List((15,19), (12,18), (14,20), (16,17)), \
List((7,22), (11,21), (12,20), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
      2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
      2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
      d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
      3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
      d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
     (1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,20), (13,21), \
(14,17)), List((8,22), (15,18), (9,19)), List((9,22), (16,19), (10,17)), \
List((7,21), (10,22), (13,17)), List((15,19), (12,18), (14,20), (16,17)), \
List((8,18), (7,22), (11,21), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (12,18), \
(15,17)), List((11,18), (13,21), (12,17)), List((7,22), (16,20), (9,17)), \
List((8,19), (10,22), (14,17)), List((16,17), (7,20), (8,22), (14,19)), \
List((10,17), (9,22), (13,17), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (12,18), \
(15,17)), List((11,18), (13,21), (12,17)), List((7,22), (16,20), (9,17)), \
List((8,19), (10,22), (14,17)), List((16,17), (7,20), (8,22), (14,19)), \
List((9,22), (13,17), (15,21), (10,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (12,18), \
(15,22)), List((11,18), (16,21), (12,22)), List((8,17), (10,20), (14,22)), \
List((7,19), (9,20), (13,21)), List((8,20), (14,17), (16,22), (9,21)), \
List((7,20), (13,19), (15,21), (10,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (13,17), \
(14,19)), List((8,22), (15,20), (9,17)), List((9,22), (16,17), (10,18)), \
List((7,17), (10,22), (16,18)), List((15,17), (12,20), (14,21), (13,19)), \
List((7,22), (11,17), (12,21), (8,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (13,17), \
(14,19)), List((8,22), (15,20), (9,17)), List((9,22), (16,17), (10,18)), \
List((7,17), (10,22), (16,18)), List((15,17), (12,20), (14,21), (13,19)), \
List((8,20), (7,22), (11,17), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (13,17), \
(16,22)), List((10,18), (14,17), (15,22)), List((10,17), (15,18), (13,22)), \
List((8,20), (12,19), (9,21)), List((14,22), (7,17), (9,20), (16,21)), \
List((8,19), (7,20), (11,17), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (15,17), \
(16,18)), List((8,19), (9,22), (12,17)), List((7,22), (13,20), (10,21)), \
List((7,20), (8,22), (14,19)), List((15,18), (9,17), (10,22), (16,21)), \
List((11,17), (13,21), (14,20), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (15,17), \
(16,18)), List((8,19), (9,22), (12,17)), List((7,22), (13,20), (10,21)), \
List((7,20), (8,22), (14,19)), List((15,18), (9,17), (10,22), (16,21)), \
List((12,19), (11,17), (13,21), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (15,17), \
(16,18)), List((8,19), (9,22), (12,17)), List((7,22), (13,20), (10,21)), \
List((7,20), (8,22), (14,19)), List((9,17), (10,22), (16,21), (15,18)), \
List((11,17), (13,21), (14,20), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,21), (15,17), \
(16,18)), List((8,19), (9,22), (12,17)), List((7,22), (13,20), (10,21)), \
List((7,20), (8,22), (14,19)), List((9,17), (10,22), (16,21), (15,18)), \
List((12,19), (11,17), (13,21), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (12,17), \
(16,21)), List((11,17), (15,22), (12,21)), List((8,18), (9,20), (14,22)), \
List((7,19), (10,20), (13,21)), List((7,20), (13,19), (15,21), (9,22)), \
List((8,20), (14,18), (16,22), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (12,17), \
(16,21)), List((11,17), (15,22), (12,21)), List((8,20), (14,18), (9,21)), \
List((7,20), (13,19), (10,22)), List((13,22), (7,19), (9,20), (15,21)), \
List((14,21), (8,18), (10,20), (16,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (12,17), \
(16,21)), List((11,17), (15,22), (13,20)), List((12,21), (13,17), (14,20)), \
List((8,19), (14,21), (9,20)), List((10,22), (7,18), (9,19), (15,20)), \
List((7,19), (10,18), (16,22), (8,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*
    (1 + v + v^2)*(1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (12,17), \
(16,21)), List((11,17), (15,22), (13,20)), List((12,21), (13,17), (14,20)), \
List((8,19), (14,21), (9,20)), List((7,18), (9,19), (15,20), (10,22)), \
List((7,19), (10,18), (16,22), (8,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (12,17), \
(16,21)), List((11,17), (15,22), (13,20)), List((12,21), (13,17), (14,20)), \
List((8,19), (14,21), (9,20)), List((7,18), (9,19), (15,20), (10,22)), \
List((8,21), (7,19), (10,18), (16,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
     (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
      3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
    (v^22*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (12,17), \
(16,21)), List((13,19), (15,21), (14,22)), List((13,21), (14,19), (16,22)), \
List((8,20), (15,22), (9,21)), List((10,17), (7,18), (9,20), (12,21)), \
List((7,20), (10,18), (11,17), (8,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*
    (1 + v + v^2)*(1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 
     3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - 
     v^26 + v^28))/(v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (12,17), \
(16,21)), List((13,19), (15,21), (14,22)), List((13,21), (14,19), (16,22)), \
List((8,20), (15,22), (9,21)), List((10,17), (7,18), (9,20), (12,21)), \
List((8,22), (7,20), (10,18), (11,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (12,17), \
(16,21)), List((13,19), (15,21), (14,22)), List((13,21), (14,19), (16,22)), \
List((8,20), (15,22), (9,21)), List((7,18), (9,20), (12,21), (10,17)), \
List((7,20), (10,18), (11,17), (8,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (12,17), \
(16,21)), List((13,19), (15,21), (14,22)), List((13,21), (14,19), (16,22)), \
List((8,20), (15,22), (9,21)), List((7,18), (9,20), (12,21), (10,17)), \
List((8,22), (7,20), (10,18), (11,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((11,22), (14,17), \
(16,21)), List((8,20), (15,22), (9,21)), List((7,17), (9,20), (14,21)), \
List((7,20), (11,17), (8,22)), List((10,18), (13,19), (16,22), (12,21)), \
List((10,19), (12,18), (15,21), (13,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d^2*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (13,20), \
(16,19)), List((8,21), (9,22), (15,18)), List((9,18), (10,22), (15,21)), \
List((7,22), (12,20), (11,17)), List((13,19), (7,20), (8,22), (14,21)), \
List((10,21), (11,22), (16,17), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (13,20), \
(16,19)), List((8,21), (9,22), (15,18)), List((9,18), (10,22), (15,21)), \
List((7,22), (12,20), (11,17)), List((7,20), (8,22), (14,21), (13,19)), \
List((10,21), (11,22), (16,17), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (13,21), \
(15,20)), List((9,17), (10,22), (16,19)), List((10,19), (11,22), (16,17)), \
List((7,22), (12,21), (11,17)), List((7,21), (8,22), (14,18), (13,20)), \
List((14,20), (8,18), (9,22), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (14,20), \
(13,21)), List((7,17), (11,22), (12,20)), List((7,22), (16,17), (8,19)), \
List((9,18), (10,22), (15,21)), List((11,20), (9,22), (15,18), (14,21)), \
List((8,22), (16,19), (13,17), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (14,20), \
(13,21)), List((7,17), (11,22), (12,20)), List((7,22), (16,17), (8,19)), \
List((9,18), (10,22), (15,21)), List((9,22), (15,18), (14,21), (11,20)), \
List((8,22), (16,19), (13,17), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (15,17), \
(16,18)), List((9,22), (11,17), (14,19)), List((9,17), (13,22), (10,19)), \
List((10,17), (11,19), (12,17)), List((8,17), (8,21), (16,17), (15,18)), \
List((7,22), (7,20), (14,22), (13,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (16,18), \
(13,21)), List((11,17), (15,19), (14,20)), List((8,18), (9,22), (16,21)), \
List((7,19), (10,22), (15,20)), List((7,22), (11,19), (13,17), (9,21)), \
List((10,20), (8,22), (12,18), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (16,18), \
(13,21)), List((11,17), (15,19), (14,20)), List((8,18), (9,22), (16,21)), \
List((7,19), (10,22), (15,20)), List((7,22), (11,19), (13,17), (9,21)), \
List((8,22), (12,18), (14,17), (10,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^10*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((12,17), (16,18), (13,21)), List((11,17), (15,19), (14,20)), \
List((8,18), (9,22), (16,21)), List((7,19), (10,22), (15,20)), List((9,21), \
(7,22), (11,19), (13,17)), List((10,20), (8,22), (12,18), \
(14,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^22*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((12,17), (16,18), (13,21)), List((11,17), (15,19), (14,20)), \
List((8,18), (9,22), (16,21)), List((7,19), (10,22), (15,20)), List((9,21), \
(7,22), (11,19), (13,17)), List((8,22), (12,18), (14,17), \
(10,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (16,21), \
(14,22)), List((10,18), (14,17), (15,22)), List((10,17), (15,18), (13,22)), \
List((7,19), (9,20), (11,21)), List((9,21), (8,20), (13,17), (16,22)), \
List((7,20), (11,19), (12,21), (8,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (16,21), \
(14,22)), List((10,18), (14,17), (15,22)), List((10,17), (15,18), (13,22)), \
List((7,19), (9,20), (11,21)), List((9,21), (8,20), (13,17), (16,22)), \
List((8,17), (7,20), (11,19), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (16,21), \
(15,18)), List((8,20), (9,22), (14,21)), List((7,22), (11,19), (10,17)), \
List((7,19), (8,22), (13,20)), List((16,18), (9,21), (10,22), (15,17)), \
List((11,17), (13,19), (14,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (16,21), \
(15,18)), List((8,20), (9,22), (14,21)), List((7,22), (11,19), (10,17)), \
List((7,19), (8,22), (13,20)), List((16,18), (9,21), (10,22), (15,17)), \
List((12,21), (11,17), (13,19), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (16,21), \
(15,18)), List((8,20), (9,22), (14,21)), List((7,22), (11,19), (10,17)), \
List((7,19), (8,22), (13,20)), List((9,21), (10,22), (15,17), (16,18)), \
List((11,17), (13,19), (14,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,17), (16,21), \
(15,18)), List((8,20), (9,22), (14,21)), List((7,22), (11,19), (10,17)), \
List((7,19), (8,22), (13,20)), List((9,21), (10,22), (15,17), (16,18)), \
List((12,21), (11,17), (13,19), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,18), (13,19), \
(16,17)), List((9,17), (11,20), (14,18)), List((9,20), (15,17), (10,19)), \
List((10,20), (12,19), (11,18)), List((8,17), (8,21), (14,17), (16,18)), \
List((7,17), (7,22), (13,17), (15,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^24*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,18), (15,17), \
(14,20)), List((11,19), (16,17), (13,21)), List((8,17), (9,22), (16,21)), \
List((7,17), (10,22), (15,20)), List((7,22), (11,17), (13,19), (9,21)), \
List((10,20), (8,22), (12,17), (14,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,18), (15,17), \
(14,20)), List((11,19), (16,17), (13,21)), List((8,17), (9,22), (16,21)), \
List((7,17), (10,22), (15,20)), List((7,22), (11,17), (13,19), (9,21)), \
List((8,22), (12,17), (14,18), (10,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,18), (15,17), \
(14,20)), List((11,19), (16,17), (13,21)), List((8,17), (9,22), (16,21)), \
List((7,17), (10,22), (15,20)), List((9,21), (7,22), (11,17), (13,19)), \
List((10,20), (8,22), (12,17), (14,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,18), (15,22), \
(13,21)), List((12,22), (13,18), (16,21)), List((7,20), (14,17), (9,22)), \
List((8,21), (9,20), (16,22)), List((10,17), (11,19), (15,21), (14,22)), \
List((10,19), (7,17), (8,20), (11,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,18), (15,22), \
(13,21)), List((12,22), (13,18), (16,21)), List((7,20), (14,17), (9,22)), \
List((8,21), (9,20), (16,22)), List((10,17), (11,19), (15,21), (14,22)), \
List((7,17), (8,20), (11,21), (10,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*
    (1 + v + v^2)*(1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 
     3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - 
     v^26 + v^28))/(v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,18), (15,22), \
(13,21)), List((12,22), (13,18), (16,21)), List((7,20), (14,17), (9,22)), \
List((8,21), (9,20), (16,22)), List((14,22), (10,17), (11,19), (15,21)), \
List((7,17), (8,20), (11,21), (10,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,18), (16,20), \
(14,17)), List((11,19), (15,21), (13,17)), List((8,20), (9,22), (16,17)), \
List((7,21), (10,22), (15,17)), List((7,22), (11,21), (13,19), (9,17)), \
List((10,17), (8,22), (12,20), (14,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,18), (16,20), \
(14,17)), List((11,19), (15,21), (13,17)), List((8,20), (9,22), (16,17)), \
List((7,21), (10,22), (15,17)), List((9,17), (7,22), (11,21), (13,19)), \
List((10,17), (8,22), (12,20), (14,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,20), (13,17), \
(14,21)), List((8,18), (10,22), (15,21)), List((7,19), (9,22), (16,20)), \
List((9,20), (11,22), (12,17)), List((11,17), (8,22), (15,18), (13,21)), \
List((7,22), (16,19), (14,20), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,20), (13,17), \
(14,21)), List((8,18), (10,22), (15,21)), List((7,19), (9,22), (16,20)), \
List((9,20), (11,22), (12,17)), List((8,22), (15,18), (13,21), (11,17)), \
List((7,22), (16,19), (14,20), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,20), (13,19), \
(14,21)), List((8,17), (10,22), (15,21)), List((7,18), (9,22), (16,20)), \
List((9,20), (11,22), (12,19)), List((11,19), (8,22), (15,17), (13,21)), \
List((10,21), (7,22), (16,18), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,20), (13,19), \
(14,21)), List((8,17), (10,22), (15,21)), List((7,18), (9,22), (16,20)), \
List((9,20), (11,22), (12,19)), List((11,19), (8,22), (15,17), (13,21)), \
List((7,22), (16,18), (14,20), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,20), (13,19), \
(14,21)), List((8,18), (10,22), (15,21)), List((7,17), (9,22), (16,20)), \
List((9,20), (11,22), (12,19)), List((11,19), (8,22), (15,18), (13,21)), \
List((7,22), (16,17), (14,20), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,20), (16,17), \
(13,19)), List((7,20), (8,22), (12,17)), List((9,21), (10,22), (15,18)), \
List((10,18), (11,22), (15,21)), List((16,19), (8,17), (9,22), (14,21)), \
List((11,21), (7,22), (13,20), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,20), (16,17), \
(13,19)), List((7,20), (8,22), (12,17)), List((9,21), (10,22), (15,18)), \
List((10,18), (11,22), (15,21)), List((8,17), (9,22), (14,21), (16,19)), \
List((11,21), (7,22), (13,20), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,21), (13,18), \
(15,22)), List((12,18), (16,21), (13,22)), List((7,17), (9,20), (14,21)), \
List((8,20), (16,22), (9,21)), List((10,19), (14,17), (15,21), (11,22)), \
List((8,22), (7,20), (10,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,21), (13,18), \
(15,22)), List((12,18), (16,21), (13,22)), List((7,17), (9,20), (14,21)), \
List((8,20), (16,22), (9,21)), List((11,22), (10,19), (14,17), (15,21)), \
List((8,22), (7,20), (10,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*
    (1 + v + v^2)*(1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 
     3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - 
     v^26 + v^28))/(v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,21), (14,20), \
(13,17)), List((7,21), (11,22), (12,20)), List((7,22), (16,21), (8,19)), \
List((9,18), (10,22), (15,17)), List((11,20), (9,22), (15,18), (14,17)), \
List((8,22), (16,19), (13,21), (10,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,21), (14,20), \
(13,17)), List((7,21), (11,22), (12,20)), List((7,22), (16,21), (8,19)), \
List((9,18), (10,22), (15,17)), List((9,22), (15,18), (14,17), (11,20)), \
List((10,17), (8,22), (16,19), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,21), (14,20), \
(13,17)), List((7,21), (11,22), (12,20)), List((7,22), (16,21), (8,19)), \
List((9,18), (10,22), (15,17)), List((9,22), (15,18), (14,17), (11,20)), \
List((8,22), (16,19), (13,21), (10,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,21), (14,20), \
(13,17)), List((8,19), (10,22), (15,17)), List((9,22), (12,20), (11,21)), \
List((10,17), (11,22), (13,21)), List((16,17), (7,18), (8,22), (15,19)), \
List((7,22), (16,18), (14,17), (9,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,21), (14,20), \
(13,17)), List((8,19), (10,22), (15,17)), List((9,22), (12,20), (11,21)), \
List((10,17), (11,22), (13,21)), List((16,17), (7,18), (8,22), (15,19)), \
List((9,20), (7,22), (16,18), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,21), (14,20), \
(13,17)), List((8,19), (10,22), (15,17)), List((9,22), (12,20), (11,21)), \
List((10,17), (11,22), (13,21)), List((7,18), (8,22), (15,19), (16,17)), \
List((7,22), (16,18), (14,17), (9,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,21), (15,17), \
(13,20)), List((7,21), (8,22), (12,17)), List((8,17), (9,22), (14,18)), \
List((9,18), (10,22), (14,17)), List((15,20), (10,17), (11,22), (16,19)), \
List((7,22), (13,21), (16,20), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*
    (1 + v + v^2)*(1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 
     3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - 
     v^26 + v^28))/(v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (13,17), \
(16,21)), List((8,20), (16,22), (9,21)), List((10,17), (15,18), (13,21)), \
List((11,19), (12,17), (14,22)), List((10,18), (7,17), (9,20), (15,21)), \
List((8,22), (7,20), (11,17), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (13,17), \
(16,21)), List((8,20), (16,22), (9,21)), List((10,17), (15,18), (13,21)), \
List((11,19), (12,17), (14,22)), List((7,17), (9,20), (15,21), (10,18)), \
List((7,20), (11,17), (14,19), (8,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (13,17), \
(16,21)), List((8,20), (16,22), (9,21)), List((10,17), (15,18), (13,21)), \
List((11,19), (12,17), (14,22)), List((7,17), (9,20), (15,21), (10,18)), \
List((8,22), (7,20), (11,17), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (13,18), \
(16,21)), List((7,19), (10,17), (15,22)), List((8,17), (14,20), (11,21)), \
List((7,17), (9,19), (8,20)), List((14,21), (9,20), (15,19), (16,22)), \
List((10,22), (11,17), (13,21), (12,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (13,18), \
(16,21)), List((7,19), (10,17), (15,22)), List((8,17), (14,20), (11,21)), \
List((7,17), (9,19), (8,20)), List((14,21), (9,20), (15,19), (16,22)), \
List((12,18), (10,22), (11,17), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (13,18), \
(16,21)), List((7,19), (10,17), (15,22)), List((8,17), (14,20), (11,21)), \
List((7,17), (9,19), (8,20)), List((9,20), (15,19), (16,22), (14,21)), \
List((10,22), (11,17), (13,21), (12,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (13,18), \
(16,21)), List((7,19), (10,17), (15,22)), List((8,17), (14,20), (11,21)), \
List((7,17), (9,19), (8,20)), List((9,20), (15,19), (16,22), (14,21)), \
List((12,18), (10,22), (11,17), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (14,17), \
(16,21)), List((12,17), (15,22), (13,20)), List((8,19), (15,20), (9,22)), \
List((7,21), (9,19), (16,22)), List((10,18), (14,21), (13,17), (11,20)), \
List((7,19), (10,21), (11,18), (8,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^22*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((12,22), (14,17), (16,21)), List((12,17), (15,22), (13,20)), \
List((8,19), (15,20), (9,22)), List((7,21), (9,19), (16,22)), List((10,18), \
(14,21), (13,17), (11,20)), List((8,20), (7,19), (10,21), \
(11,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (14,17), \
(16,21)), List((12,17), (15,22), (13,20)), List((8,19), (15,20), (9,22)), \
List((7,21), (9,19), (16,22)), List((11,20), (10,18), (14,21), (13,17)), \
List((7,19), (10,21), (11,18), (8,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((12,22), (14,17), \
(16,21)), List((12,17), (15,22), (13,20)), List((8,19), (15,20), (9,22)), \
List((7,21), (9,19), (16,22)), List((11,20), (10,18), (14,21), (13,17)), \
List((8,20), (7,19), (10,21), (11,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^10*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((13,17), (12,19), (16,17), (15,18)), List((9,19), (14,22), (10,22)), \
List((9,22), (13,19), (11,17)), List((10,19), (11,22), (12,17)), List((8,17), \
(8,20), (15,17), (16,18)), List((7,21), (14,22), (7,22))),ArrayBuffer((2,0), \
(1,0), (1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,17), (14,20), \
(15,21)), List((8,19), (9,22), (12,18)), List((10,21), (11,22), (15,17)), \
List((7,22), (13,20), (11,17)), List((14,21), (7,20), (8,22), (16,19)), \
List((12,19), (9,18), (10,22), (16,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,17), (14,20), \
(15,21)), List((8,19), (9,22), (12,18)), List((10,21), (11,22), (15,17)), \
List((7,22), (13,20), (11,17)), List((7,20), (8,22), (16,19), (14,21)), \
List((12,19), (9,18), (10,22), (16,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,17), (15,20), \
(14,18)), List((7,19), (8,22), (12,21)), List((10,17), (11,22), (16,21)), \
List((7,22), (12,19), (11,21)), List((8,21), (9,22), (13,20), (16,17)), \
List((15,18), (9,20), (10,22), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,17), (15,20), \
(14,18)), List((7,19), (8,22), (12,21)), List((10,17), (11,22), (16,21)), \
List((7,22), (12,19), (11,21)), List((8,21), (9,22), (13,20), (16,17)), \
List((9,20), (10,22), (14,17), (15,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,17), (15,20), \
(14,21)), List((7,17), (8,22), (13,20)), List((8,20), (9,22), (15,21)), \
List((10,19), (11,22), (12,18)), List((14,17), (9,21), (10,22), (16,19)), \
List((11,18), (7,22), (16,17), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,17), (15,20), \
(14,21)), List((7,17), (8,22), (13,20)), List((8,20), (9,22), (15,21)), \
List((10,19), (11,22), (12,18)), List((14,17), (9,21), (10,22), (16,19)), \
List((7,22), (16,17), (12,19), (11,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,17), (15,20), \
(14,21)), List((7,17), (8,22), (13,20)), List((8,20), (9,22), (15,21)), \
List((10,19), (11,22), (12,18)), List((9,21), (10,22), (16,19), (14,17)), \
List((11,18), (7,22), (16,17), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,17), (15,20), \
(14,21)), List((7,17), (8,22), (13,20)), List((8,20), (9,22), (15,21)), \
List((10,19), (11,22), (12,18)), List((9,21), (10,22), (16,19), (14,17)), \
List((7,22), (16,17), (12,19), (11,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,19), (14,17), \
(15,20)), List((8,22), (12,18), (10,17)), List((9,17), (10,22), (16,17)), \
List((7,21), (9,22), (11,17)), List((16,17), (13,17), (15,19), (14,20)), \
List((7,22), (11,21), (12,17), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,19), (14,20), \
(15,17)), List((11,19), (12,21), (13,20)), List((8,17), (10,22), (16,18)), \
List((9,22), (16,17), (10,18)), List((12,20), (7,21), (8,22), (14,17)), \
List((7,22), (11,21), (15,19), (9,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,19), (14,20), \
(15,17)), List((11,19), (12,21), (13,20)), List((8,17), (10,22), (16,18)), \
List((9,22), (16,17), (10,18)), List((12,20), (7,21), (8,22), (14,17)), \
List((9,17), (7,22), (11,21), (15,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,19), (14,20), \
(15,17)), List((11,19), (12,21), (13,20)), List((8,17), (10,22), (16,18)), \
List((9,22), (16,17), (10,18)), List((7,21), (8,22), (14,17), (12,20)), \
List((9,17), (7,22), (11,21), (15,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*
    (1 + v + v^2)*(1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 
     3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - 
     v^26 + v^28))/(v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (14,19), \
(16,17)), List((7,20), (8,22), (13,19)), List((9,21), (10,22), (12,18)), \
List((10,18), (11,22), (12,21)), List((14,17), (8,19), (9,22), (15,21)), \
List((11,21), (7,22), (16,20), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (14,19), \
(16,17)), List((7,20), (8,22), (13,19)), List((9,21), (10,22), (12,18)), \
List((10,18), (11,22), (12,21)), List((14,17), (8,19), (9,22), (15,21)), \
List((7,22), (16,20), (15,17), (11,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*
    (1 + v + v^2)*(1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 
     3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - 
     v^26 + v^28))/(v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (14,19), \
(16,17)), List((7,20), (8,22), (13,19)), List((9,21), (10,22), (12,18)), \
List((10,18), (11,22), (12,21)), List((8,19), (9,22), (15,21), (14,17)), \
List((11,21), (7,22), (16,20), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (14,19), \
(16,18)), List((7,20), (8,22), (13,19)), List((9,21), (10,22), (12,17)), \
List((10,17), (11,22), (12,21)), List((14,18), (8,19), (9,22), (15,21)), \
List((11,21), (7,22), (16,20), (15,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (14,19), \
(16,18)), List((7,20), (8,22), (13,19)), List((9,21), (10,22), (12,17)), \
List((10,17), (11,22), (12,21)), List((8,19), (9,22), (15,21), (14,18)), \
List((11,21), (7,22), (16,20), (15,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (14,21), \
(15,19)), List((8,21), (9,22), (14,19)), List((9,19), (10,22), (15,20)), \
List((7,22), (12,17), (11,18)), List((12,18), (7,17), (8,22), (16,21)), \
List((10,20), (11,22), (16,18), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (14,21), \
(15,19)), List((8,21), (9,22), (14,19)), List((9,19), (10,22), (15,20)), \
List((7,22), (12,17), (11,18)), List((12,18), (7,17), (8,22), (16,21)), \
List((13,21), (10,20), (11,22), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (14,21), \
(15,19)), List((8,21), (9,22), (14,19)), List((9,19), (10,22), (15,20)), \
List((7,22), (12,17), (11,18)), List((7,17), (8,22), (16,21), (12,18)), \
List((10,20), (11,22), (16,18), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (14,21), \
(15,19)), List((8,21), (9,22), (14,19)), List((9,19), (10,22), (15,20)), \
List((7,22), (12,17), (11,18)), List((7,17), (8,22), (16,21), (12,18)), \
List((13,21), (10,20), (11,22), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (15,17), \
(14,21)), List((7,20), (8,22), (13,17)), List((9,19), (10,22), (12,18)), \
List((7,22), (14,20), (11,21)), List((15,21), (8,17), (9,22), (16,19)), \
List((12,19), (10,18), (11,22), (16,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (15,17), \
(14,21)), List((7,20), (8,22), (13,17)), List((9,19), (10,22), (12,18)), \
List((7,22), (14,20), (11,21)), List((8,17), (9,22), (16,19), (15,21)), \
List((12,19), (10,18), (11,22), (16,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (15,17), \
(16,21)), List((7,20), (8,22), (13,17)), List((8,17), (9,22), (15,21)), \
List((10,18), (11,22), (14,19)), List((9,21), (10,22), (14,18), (12,19)), \
List((11,19), (7,22), (16,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (15,19), \
(16,21)), List((7,20), (8,22), (13,19)), List((8,19), (9,22), (15,21)), \
List((10,17), (11,22), (14,18)), List((9,21), (10,22), (14,17), (12,18)), \
List((11,18), (7,22), (16,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (15,19), \
(16,21)), List((7,20), (8,22), (13,19)), List((8,19), (9,22), (15,21)), \
List((10,18), (11,22), (14,17)), List((12,17), (9,21), (10,22), (14,18)), \
List((11,17), (7,22), (16,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (15,19), \
(16,21)), List((7,20), (8,22), (13,19)), List((8,19), (9,22), (15,21)), \
List((10,18), (11,22), (14,17)), List((9,21), (10,22), (14,18), (12,17)), \
List((11,17), (7,22), (16,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,20), (16,21), \
(14,17)), List((7,20), (8,22), (13,21)), List((9,18), (10,22), (15,19)), \
List((7,22), (14,20), (11,17)), List((8,21), (9,22), (15,18), (12,19)), \
List((10,19), (11,22), (16,17), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (14,20), \
(15,19)), List((7,17), (8,22), (12,18)), List((9,21), (10,22), (13,20)), \
List((10,20), (11,22), (14,19)), List((12,17), (8,18), (9,22), (16,21)), \
List((11,19), (7,22), (16,17), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (14,20), \
(15,19)), List((7,17), (8,22), (12,18)), List((9,21), (10,22), (13,20)), \
List((10,20), (11,22), (14,19)), List((12,17), (8,18), (9,22), (16,21)), \
List((7,22), (16,17), (15,21), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (14,20), \
(16,17)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (14,17)), \
List((9,17), (10,22), (12,18)), List((10,18), (11,22), (15,19), (12,17)), \
List((7,22), (16,21), (15,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (14,20), \
(16,17)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (14,17)), \
List((9,17), (10,22), (12,18)), List((12,17), (10,18), (11,22), (15,19)), \
List((11,19), (7,22), (16,21), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (14,20), \
(16,17)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (14,17)), \
List((9,17), (10,22), (12,18)), List((12,17), (10,18), (11,22), (15,19)), \
List((7,22), (16,21), (15,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (14,20), \
(16,19)), List((7,21), (8,22), (13,20)), List((9,17), (10,22), (12,18)), \
List((10,18), (11,22), (12,17)), List((14,19), (8,20), (9,22), (15,17)), \
List((11,17), (7,22), (16,21), (15,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (14,20), \
(16,19)), List((7,21), (8,22), (13,20)), List((9,17), (10,22), (12,18)), \
List((10,18), (11,22), (12,17)), List((8,20), (9,22), (15,17), (14,19)), \
List((11,17), (7,22), (16,21), (15,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (15,20), \
(14,18)), List((7,19), (8,22), (12,17)), List((10,21), (11,22), (16,17)), \
List((7,22), (12,19), (11,17)), List((8,17), (9,22), (13,20), (16,21)), \
List((15,18), (9,20), (10,22), (14,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (15,20), \
(16,17)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (15,17)), \
List((10,18), (11,22), (14,19)), List((9,17), (10,22), (14,18), (12,19)), \
List((11,19), (7,22), (16,21), (12,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (15,20), \
(16,17)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (15,17)), \
List((10,18), (11,22), (14,19)), List((9,17), (10,22), (14,18), (12,19)), \
List((7,22), (16,21), (12,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (15,20), \
(16,17)), List((7,21), (8,22), (13,20)), List((9,19), (10,22), (14,17)), \
List((10,17), (11,22), (12,18)), List((15,17), (8,20), (9,22), (14,19)), \
List((11,18), (7,22), (16,21), (12,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (15,20), \
(16,17)), List((7,21), (8,22), (13,20)), List((9,19), (10,22), (14,17)), \
List((10,17), (11,22), (12,18)), List((15,17), (8,20), (9,22), (14,19)), \
List((7,22), (16,21), (12,17), (11,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (15,20), \
(16,17)), List((7,21), (8,22), (13,20)), List((9,19), (10,22), (14,17)), \
List((10,17), (11,22), (12,18)), List((8,20), (9,22), (14,19), (15,17)), \
List((7,22), (16,21), (12,17), (11,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (16,20), \
(15,19)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (12,17)), \
List((7,22), (14,21), (11,18)), List((12,20), (9,17), (10,22), (16,19)), \
List((10,19), (11,22), (14,18), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (16,20), \
(15,19)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (12,17)), \
List((7,22), (14,21), (11,18)), List((9,17), (10,22), (16,19), (12,20)), \
List((10,19), (11,22), (14,18), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (16,20), \
(15,19)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (12,17)), \
List((7,22), (14,21), (11,18)), List((9,17), (10,22), (16,19), (12,20)), \
List((15,21), (10,19), (11,22), (14,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (16,20), \
(15,19)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (12,18)), \
List((7,22), (14,21), (11,17)), List((12,20), (9,18), (10,22), (16,19)), \
List((10,19), (11,22), (14,17), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (16,20), \
(15,19)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (12,18)), \
List((7,22), (14,21), (11,17)), List((9,18), (10,22), (16,19), (12,20)), \
List((10,19), (11,22), (14,17), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((13,21), (16,20), \
(15,19)), List((7,21), (8,22), (13,20)), List((8,20), (9,22), (12,18)), \
List((7,22), (14,21), (11,17)), List((9,18), (10,22), (16,19), (12,20)), \
List((15,21), (10,19), (11,22), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (15,18), \
(16,21)), List((7,22), (13,17), (11,20)), List((8,21), (9,22), (12,19)), \
List((10,17), (11,22), (13,20)), List((7,17), (8,22), (15,21), (14,18)), \
List((12,21), (9,19), (10,22), (16,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (15,20), \
(16,21)), List((8,17), (9,22), (14,20)), List((9,20), (10,22), (15,21)), \
List((10,21), (11,22), (16,17)), List((12,18), (7,19), (8,22), (13,17)), \
List((11,17), (7,22), (12,19), (13,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d^2*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (15,20), \
(16,21)), List((8,17), (9,22), (14,20)), List((9,20), (10,22), (15,21)), \
List((10,21), (11,22), (16,17)), List((7,19), (8,22), (13,17), (12,18)), \
List((11,17), (7,22), (12,19), (13,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
    (1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((14,17), (16,18), (15,21)), List((7,20), (8,22), (13,17)), List((8,17), \
(9,22), (12,19)), List((9,19), (10,22), (12,17)), List((10,17), (11,22), \
(16,21), (14,18)), List((7,22), (13,20), (15,17), \
(11,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  d*v^12, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), \
(16,20), (15,18)), List((7,21), (10,22), (13,19)), List((8,21), (11,22), \
(12,20)), List((8,22), (13,21), (10,19)), List((11,20), (9,22), (15,17), \
(16,18)), List((7,22), (12,21), (14,20), (9,17))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (16,20), \
(15,18)), List((8,17), (9,22), (14,20)), List((10,17), (11,22), (13,21)), \
List((7,22), (12,19), (11,21)), List((12,21), (7,19), (8,22), (13,17)), \
List((16,18), (9,20), (10,22), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (16,20), \
(15,18)), List((8,17), (9,22), (14,20)), List((10,17), (11,22), (13,21)), \
List((7,22), (12,19), (11,21)), List((12,21), (7,19), (8,22), (13,17)), \
List((9,20), (10,22), (15,17), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (16,20), \
(15,18)), List((8,17), (9,22), (14,20)), List((10,17), (11,22), (13,21)), \
List((7,22), (12,19), (11,21)), List((7,19), (8,22), (13,17), (12,21)), \
List((16,18), (9,20), (10,22), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (16,20), \
(15,21)), List((7,21), (8,22), (12,18)), List((9,17), (10,22), (14,20)), \
List((10,20), (11,22), (13,19)), List((12,21), (8,18), (9,22), (15,17)), \
List((7,22), (16,21), (13,20), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (16,20), \
(15,21)), List((7,21), (8,22), (12,18)), List((9,17), (10,22), (14,20)), \
List((10,20), (11,22), (13,19)), List((8,18), (9,22), (15,17), (12,21)), \
List((11,19), (7,22), (16,21), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (16,20), \
(15,21)), List((7,21), (8,22), (12,18)), List((9,17), (10,22), (14,20)), \
List((10,20), (11,22), (13,19)), List((8,18), (9,22), (15,17), (12,21)), \
List((7,22), (16,21), (13,20), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (16,21), \
(15,18)), List((7,19), (8,22), (12,20)), List((8,20), (9,22), (13,17)), \
List((9,17), (10,22), (14,21)), List((10,21), (11,22), (15,17), (16,18)), \
List((7,22), (12,19), (13,20), (11,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (16,21), \
(15,18)), List((7,19), (8,22), (12,20)), List((8,20), (9,22), (13,17)), \
List((9,17), (10,22), (14,21)), List((16,18), (10,21), (11,22), (15,17)), \
List((11,17), (7,22), (12,19), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,17), (16,21), \
(15,20)), List((7,19), (8,22), (13,17)), List((8,17), (9,22), (14,21)), \
List((9,21), (10,22), (12,18)), List((10,18), (11,22), (16,20), (12,21)), \
List((7,22), (13,19), (15,17), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,18), (15,20), \
(16,17)), List((9,20), (10,22), (15,17)), List((10,17), (11,22), (13,21)), \
List((7,22), (12,19), (11,21)), List((12,21), (7,19), (8,22), (13,17)), \
List((8,17), (9,22), (14,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,18), (15,20), \
(16,17)), List((9,20), (10,22), (15,17)), List((10,17), (11,22), (13,21)), \
List((7,22), (12,19), (11,21)), List((7,19), (8,22), (13,17), (12,21)), \
List((16,18), (8,17), (9,22), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,18), (15,21), \
(16,17)), List((7,19), (8,22), (12,20)), List((8,20), (9,22), (13,17)), \
List((10,21), (11,22), (15,17)), List((9,17), (10,22), (14,21), (16,18)), \
List((11,17), (7,22), (12,19), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,18), (16,20), \
(15,17)), List((7,19), (8,22), (12,21)), List((8,21), (9,22), (13,17)), \
List((7,22), (12,19), (11,21)), List((9,17), (10,22), (14,20), (15,18)), \
List((16,17), (10,20), (11,22), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,18), (16,20), \
(15,21)), List((7,19), (8,22), (12,17)), List((8,17), (9,22), (13,21)), \
List((7,22), (12,19), (11,17)), List((9,21), (10,22), (14,20), (15,18)), \
List((16,21), (10,20), (11,22), (13,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,19), (16,20), \
(15,17)), List((7,21), (10,22), (13,18)), List((8,21), (11,22), (12,20)), \
List((8,22), (13,21), (10,18)), List((11,20), (9,22), (15,19), (16,17)), \
List((7,22), (12,21), (14,20), (9,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,19), (16,20), \
(15,17)), List((7,21), (10,22), (13,18)), List((8,21), (11,22), (12,20)), \
List((8,22), (13,21), (10,18)), List((9,22), (15,19), (16,17), (11,20)), \
List((7,22), (12,21), (14,20), (9,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,19), (16,20), \
(15,18)), List((7,21), (10,22), (13,17)), List((8,21), (11,22), (12,20)), \
List((8,22), (13,21), (10,17)), List((11,20), (9,22), (15,19), (16,18)), \
List((7,22), (12,21), (14,20), (9,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,19), (16,20), \
(15,21)), List((7,21), (8,22), (12,17)), List((9,19), (10,22), (14,20)), \
List((10,20), (11,22), (13,18)), List((12,21), (8,17), (9,22), (15,19)), \
List((7,22), (16,21), (13,20), (11,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,19), (16,20), \
(15,21)), List((7,21), (8,22), (12,17)), List((9,19), (10,22), (14,20)), \
List((10,20), (11,22), (13,18)), List((8,17), (9,22), (15,19), (12,21)), \
List((7,22), (16,21), (13,20), (11,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,19), (16,20), \
(15,21)), List((7,21), (8,22), (12,18)), List((9,19), (10,22), (14,20)), \
List((10,20), (11,22), (13,17)), List((12,21), (8,18), (9,22), (15,19)), \
List((7,22), (16,21), (13,20), (11,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (15,17), \
(16,18)), List((8,21), (10,22), (13,19)), List((8,22), (12,21), (11,20)), \
List((7,22), (13,21), (10,19)), List((15,18), (9,17), (11,22), (16,20)), \
List((7,21), (9,22), (14,17), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (15,17), \
(16,18)), List((8,21), (10,22), (13,19)), List((8,22), (12,21), (11,20)), \
List((7,22), (13,21), (10,19)), List((9,17), (11,22), (16,20), (15,18)), \
List((7,21), (9,22), (14,17), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (15,17), \
(16,21)), List((7,20), (8,22), (14,17)), List((8,17), (10,22), (13,19)), \
List((9,22), (12,18), (11,21)), List((7,22), (16,20), (12,21), (9,18)), \
List((13,17), (10,19), (11,22), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (15,17), \
(16,21)), List((7,20), (8,22), (14,17)), List((8,17), (10,22), (13,19)), \
List((9,22), (12,18), (11,21)), List((9,18), (7,22), (16,20), (12,21)), \
List((10,19), (11,22), (15,21), (13,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (15,17), \
(16,21)), List((7,20), (8,22), (14,17)), List((8,17), (10,22), (13,19)), \
List((9,22), (12,18), (11,21)), List((9,18), (7,22), (16,20), (12,21)), \
List((13,17), (10,19), (11,22), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (15,19), \
(16,17)), List((8,21), (10,22), (13,18)), List((8,22), (12,21), (11,20)), \
List((7,22), (13,21), (10,18)), List((15,17), (9,19), (11,22), (16,20)), \
List((7,21), (9,22), (14,19), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (15,19), \
(16,18)), List((8,21), (10,22), (13,17)), List((8,22), (12,21), (11,20)), \
List((7,22), (13,21), (10,17)), List((15,18), (9,19), (11,22), (16,20)), \
List((7,21), (9,22), (14,19), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (15,21), \
(16,17)), List((7,20), (8,22), (14,21)), List((8,21), (10,22), (13,19)), \
List((9,22), (12,18), (11,17)), List((7,22), (16,20), (12,17), (9,18)), \
List((10,19), (11,22), (15,17), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (15,21), \
(16,17)), List((7,20), (8,22), (14,21)), List((8,21), (10,22), (13,19)), \
List((9,22), (12,18), (11,17)), List((7,22), (16,20), (12,17), (9,18)), \
List((13,21), (10,19), (11,22), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (16,21), \
(15,17)), List((7,19), (8,22), (13,20)), List((8,20), (9,22), (14,21)), \
List((9,21), (10,22), (12,18)), List((10,18), (11,22), (16,17), (12,21)), \
List((11,17), (7,22), (13,19), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (16,21), \
(15,17)), List((7,19), (8,22), (13,20)), List((8,20), (9,22), (14,21)), \
List((9,21), (10,22), (12,18)), List((10,18), (11,22), (16,17), (12,21)), \
List((7,22), (13,19), (15,20), (11,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,20), (16,21), \
(15,17)), List((7,19), (8,22), (13,20)), List((8,20), (9,22), (14,21)), \
List((9,21), (10,22), (12,18)), List((12,21), (10,18), (11,22), (16,17)), \
List((11,17), (7,22), (13,19), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,21), (15,17), \
(16,18)), List((7,20), (8,22), (13,17)), List((9,21), (10,22), (14,17)), \
List((10,17), (11,22), (12,19)), List((15,18), (8,17), (9,22), (16,21)), \
List((7,22), (13,20), (12,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,21), (15,17), \
(16,18)), List((7,20), (8,22), (13,17)), List((9,21), (10,22), (14,17)), \
List((10,17), (11,22), (12,19)), List((8,17), (9,22), (16,21), (15,18)), \
List((7,22), (13,20), (12,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,21), (15,18), \
(16,17)), List((8,17), (10,22), (13,20)), List((9,22), (12,19), (11,17)), \
List((10,20), (11,22), (13,17)), List((14,18), (7,21), (8,22), (15,17)), \
List((7,22), (16,21), (12,17), (9,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,21), (16,17), \
(15,20)), List((7,19), (8,22), (13,21)), List((8,21), (9,22), (14,17)), \
List((9,17), (10,22), (12,18)), List((10,18), (11,22), (16,20), (12,17)), \
List((7,22), (13,19), (15,21), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,21), (16,17), \
(15,20)), List((7,19), (8,22), (13,21)), List((8,21), (9,22), (14,17)), \
List((9,17), (10,22), (12,18)), List((12,17), (10,18), (11,22), (16,20)), \
List((11,20), (7,22), (13,19), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,21), (16,17), \
(15,20)), List((7,19), (8,22), (13,21)), List((8,21), (9,22), (14,17)), \
List((9,17), (10,22), (12,18)), List((12,17), (10,18), (11,22), (16,20)), \
List((7,22), (13,19), (15,21), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,21), (16,18), \
(15,17)), List((7,20), (8,22), (13,17)), List((8,17), (9,22), (15,21)), \
List((10,17), (11,22), (12,19)), List((14,18), (9,21), (10,22), (16,17)), \
List((7,22), (13,20), (12,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,21), (16,18), \
(15,17)), List((7,20), (8,22), (13,17)), List((8,17), (9,22), (15,21)), \
List((10,17), (11,22), (12,19)), List((9,21), (10,22), (16,17), (14,18)), \
List((7,22), (13,20), (12,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((14,21), (16,18), \
(15,17)), List((7,20), (8,22), (13,21)), List((9,17), (10,22), (12,19)), \
List((10,19), (11,22), (12,17)), List((8,21), (9,22), (16,17), (14,18)), \
List((7,22), (13,20), (15,21), (11,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (10,21), (8,22)), \
List((7,21), (8,17), (9,22)), List((10,22), (13,21), (12,20)), List((9,21), \
(14,22), (11,19)), List((12,22), (16,20), (15,18), (14,19)), List((11,21), \
(15,19), (16,18), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (10,21), (8,22)), \
List((7,21), (8,17), (9,22)), List((10,22), (13,21), (12,20)), List((9,21), \
(14,22), (11,19)), List((12,22), (16,20), (15,18), (14,19)), List((13,20), \
(11,21), (15,19), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(10,21), (8,22)), List((7,21), (8,17), (9,22)), List((10,22), (13,21), \
(12,20)), List((9,21), (14,22), (11,19)), List((14,19), (12,22), (16,20), \
(15,18)), List((13,20), (11,21), (15,19), (16,18))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (15,22), \
(11,18)), List((7,22), (10,17), (9,21)), List((8,21), (14,20), (9,22)), \
List((8,20), (13,21), (12,19)), List((11,17), (15,18), (14,22), (16,20)), \
List((10,21), (16,17), (12,20), (13,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (15,22), \
(11,18)), List((7,22), (10,17), (9,21)), List((8,21), (14,20), (9,22)), \
List((8,20), (13,21), (12,19)), List((11,17), (15,18), (14,22), (16,20)), \
List((13,19), (10,21), (16,17), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (15,22), \
(11,18)), List((7,22), (10,17), (9,21)), List((8,21), (14,20), (9,22)), \
List((8,20), (13,21), (12,19)), List((16,20), (11,17), (15,18), (14,22)), \
List((13,19), (10,21), (16,17), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((11,21), (8,17), (10,17), (9,22)), List((12,21), (15,17), (16,19)), \
List((13,17), (14,20), (16,21), (15,19)), List((11,17), (14,21), (13,20)), \
List((9,21), (10,22), (12,17))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((11,21), (8,17), (10,17), (9,22)), List((14,19), (16,21), (15,17)), \
List((12,21), (13,20), (16,17)), List((11,17), (14,21), (15,19)), \
List((9,21), (10,22), (13,17), (12,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((11,22), (8,17), (9,17), (10,21)), List((12,19), (14,17), (16,20)), \
List((13,22), (16,19), (15,20)), List((11,17), (15,22), (14,20)), \
List((10,22), (9,21), (12,17), (13,19))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (11,21), (9,22)), List((12,20), (14,19), (13,17)), \
List((11,22), (16,21), (15,19)), List((10,21), (14,17), (16,19)), \
List((9,17), (15,22), (12,19), (13,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22), (11,21)), List((12,22), (15,20), (14,17), \
(13,19)), List((11,17), (16,21), (14,19)), List((9,21), (13,22), (16,19)), \
List((10,22), (15,17), (12,20))),ArrayBuffer((1,0), (2,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22)), List((12,17), (14,21), (16,19)), List((14,19), \
(12,21), (13,17), (15,20)), List((9,17), (11,22), (15,19), (13,20)), \
List((10,22), (16,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), (2,0), \
(2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22)), List((13,17), (16,19), (14,20)), List((12,17), \
(15,21), (13,19)), List((9,17), (11,22), (15,19), (12,21)), List((10,22), \
(14,17), (16,20), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (8,17)), List((8,17), (10,17), (9,22)), List((13,17), (16,19), \
(14,20)), List((12,17), (15,21), (13,19)), List((9,17), (11,22), (15,19), \
(12,21)), List((11,19), (10,22), (14,17), (16,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22)), List((13,20), (16,17), (15,19)), List((14,19), \
(12,21), (13,17), (15,20)), List((9,17), (11,22), (16,19)), List((10,22), \
(12,17), (14,21), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), (2,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (8,17)), List((8,17), (10,17), (9,22)), List((13,20), (16,17), \
(15,19)), List((14,19), (12,21), (13,17), (15,20)), List((9,17), (11,22), \
(16,19)), List((11,19), (10,22), (12,17), (14,21))),ArrayBuffer((1,0), (1,0), \
(1,0), (2,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22)), List((13,21), (15,20), (16,17), (14,19)), \
List((11,22), (13,20), (12,21)), List((9,17), (12,22), (14,21), (16,19)), \
List((10,22), (15,17), (11,20))),ArrayBuffer((1,0), (1,0), (2,0), (1,0), \
(2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22)), List((14,17), (11,19), (13,22), (16,21)), \
List((12,22), (15,20), (16,17), (13,21)), List((9,17), (11,22), (14,19)), \
List((10,22), (15,17), (12,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), \
(1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22)), List((14,17), (13,21), (16,20), (15,19)), \
List((11,22), (13,20), (12,21)), List((9,17), (12,22), (14,21)), \
List((10,22), (15,17), (16,19), (11,20))),ArrayBuffer((1,0), (1,0), (2,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22)), List((14,17), (13,21), (16,20), (15,19)), \
List((11,22), (13,20), (12,21)), List((9,17), (12,22), (14,21)), \
List((11,20), (10,22), (15,17), (16,19))),ArrayBuffer((1,0), (1,0), (2,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22)), List((14,20), (15,21), (16,19)), List((12,20), \
(13,17), (14,21)), List((9,17), (11,22), (15,19), (13,21)), List((10,22), \
(12,17), (16,20), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (8,17)), List((8,17), (10,17), (9,22)), List((14,20), (15,21), \
(16,19)), List((12,20), (13,17), (14,21)), List((9,17), (11,22), (15,19), \
(13,21)), List((11,19), (10,22), (12,17), (16,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (10,17), (9,22)), List((15,17), (13,21), (14,19), (16,20)), \
List((12,21), (11,22), (14,20), (13,19)), List((9,17), (12,22), (15,21)), \
List((10,22), (16,17), (11,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), \
(1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (11,17), (10,21), (9,22)), List((12,17), (16,21), (15,20)), \
List((13,21), (14,19), (15,17), (16,20)), List((11,21), (14,17), (13,19)), \
List((9,17), (10,22), (12,21))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (11,17), (10,21), (9,22)), List((12,20), (16,21), (13,17)), \
List((14,19), (16,17), (15,21)), List((11,21), (14,17), (15,19)), \
List((9,17), (10,22), (12,21), (13,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (11,17), (10,21), (9,22)), List((12,20), (16,21), (14,19)), \
List((13,17), (14,20), (15,19)), List((11,21), (15,17), (16,19)), \
List((9,17), (10,22), (12,21), (13,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (11,17), (9,21), (10,22)), List((12,22), (14,19), (13,20)), \
List((16,19), (11,21), (15,17), (14,20)), List((9,22), (16,21), (12,19)), \
List((10,17), (13,22), (15,20))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (10,22), (11,21)), List((12,22), (14,19), (13,20)), \
List((11,17), (15,21), (14,20), (16,19)), List((9,22), (16,17), (12,19)), \
List((10,21), (13,22), (15,20))),ArrayBuffer((1,0), (2,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((8,17), (9,17), (11,21), (10,22)), List((12,20), (14,17), (13,19)), \
List((11,22), (15,21), (16,19)), List((10,17), (16,22), (14,19)), \
List((15,19), (9,21), (12,17), (13,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (8,17)), \
List((9,22), (8,17), (11,17), (10,21)), List((12,22), (15,19), (14,17), \
(13,20)), List((11,21), (15,17), (16,19)), List((10,22), (16,21), (12,19)), \
List((9,17), (13,22), (14,20))),ArrayBuffer((1,0), (2,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((10,17), (11,21), (15,19)), List((11,19), (13,21), (15,17)), \
List((12,21), (16,17), (14,20)), List((13,17), (14,21), (16,20)), \
List((8,17), (9,22), (12,17), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((10,17), (11,21), (15,20)), List((11,20), (13,21), (16,19)), \
List((12,21), (15,17), (14,20)), List((13,19), (14,21), (16,20)), \
List((10,21), (8,17), (9,22), (12,17))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((10,17), (11,21), (15,20)), List((11,20), (13,21), (16,19)), \
List((12,21), (15,17), (14,20)), List((13,19), (14,21), (16,20)), \
List((8,17), (9,22), (12,17), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((10,17), (15,21), (14,17)), List((11,21), (16,20), (15,17)), \
List((12,19), (16,17), (13,20)), List((10,21), (12,17), (13,19), (11,20)), \
List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (9,17), (8,22)), List((10,17), (15,21), (14,17)), List((11,21), \
(16,20), (15,17)), List((12,19), (16,17), (13,20)), List((11,20), (10,21), \
(12,17), (13,19)), List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((10,21), (14,17), (15,17)), List((11,20), (15,21), (16,17)), \
List((12,17), (13,19), (16,20)), List((10,17), (11,21), (13,20), (12,19)), \
List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (9,17), (8,22)), List((11,17), (12,21), (15,19)), List((12,19), \
(14,21), (16,20)), List((13,21), (16,19), (14,20)), List((11,21), (8,17), \
(10,22), (13,19)), List((9,22), (15,17), (10,19))),ArrayBuffer((2,0), (1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,17), (12,21), (15,20)), List((12,20), (14,21), (15,17)), \
List((13,21), (16,19), (14,17)), List((11,21), (8,17), (10,22), (13,19)), \
List((9,22), (16,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,17), (12,21), (16,19)), List((10,21), (16,17), (12,19)), \
List((11,21), (14,17), (13,20)), List((10,17), (13,21), (15,20)), \
List((14,20), (8,17), (9,22), (15,17))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,17), (12,21), (16,19)), List((10,21), (16,17), (12,19)), \
List((11,21), (14,17), (13,20)), List((10,17), (13,21), (15,20)), \
List((8,17), (9,22), (15,17), (14,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,17), (12,21), (16,19)), List((12,19), (13,21), (16,17)), \
List((10,21), (15,20), (13,17)), List((15,17), (10,20), (11,21), (14,17)), \
List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (9,17), (8,22)), List((11,17), (13,21), (16,20)), List((11,21), \
(14,17), (12,19)), List((12,21), (15,19), (16,17), (13,20)), List((8,17), \
(10,22), (14,19)), List((9,22), (15,17), (10,19))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,17), (13,21), (16,20)), List((11,21), (14,17), (12,19)), \
List((13,20), (12,21), (15,19), (16,17)), List((8,17), (10,22), (14,19)), \
List((9,22), (15,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,17), (14,21), (16,20)), List((13,21), (16,17), (14,20)), \
List((11,21), (15,17), (12,19)), List((8,17), (10,22), (15,19)), \
List((10,19), (9,22), (13,17), (12,21))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,17), (16,19), (13,21)), List((13,17), (16,21), (14,19)), \
List((12,20), (14,17), (15,19)), List((8,17), (10,22), (11,19)), \
List((10,19), (9,22), (12,17), (15,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,17), (16,19), (13,21)), List((13,17), (16,21), (14,19)), \
List((12,20), (14,17), (15,19)), List((8,17), (10,22), (11,19)), List((9,22), \
(12,17), (15,20), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,19), (12,21), (15,17)), List((12,17), (13,21), (16,20)), \
List((10,21), (16,17), (13,20)), List((14,17), (10,17), (11,21), (15,19)), \
List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (9,17), (8,22)), List((11,19), (12,21), (16,17)), List((12,17), \
(13,21), (14,17)), List((10,21), (15,20), (13,17)), List((10,20), (11,21), \
(16,19), (15,17)), List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,19), (12,21), (16,17)), List((12,17), (13,21), (14,17)), \
List((10,21), (15,20), (13,17)), List((15,17), (10,20), (11,21), (16,19)), \
List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (9,17), (8,22)), List((11,19), (12,21), (16,20)), List((12,20), \
(13,21), (15,17)), List((10,21), (14,17), (13,17)), List((10,17), (11,21), \
(16,19), (15,20)), List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,19), (13,21), (16,20)), List((11,21), (15,19), (12,17)), \
List((13,20), (12,21), (14,17), (16,19)), List((8,17), (10,22), (14,19)), \
List((9,22), (15,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,20), (14,17), (15,21)), List((12,17), (16,19), (14,21)), \
List((13,19), (15,20), (16,21)), List((10,17), (11,17), (13,20), (12,19)), \
List((8,17), (9,22), (10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (9,17), (8,22)), List((11,20), (14,17), (15,21)), List((12,17), \
(16,19), (14,21)), List((13,19), (15,20), (16,21)), List((12,19), (10,17), \
(11,17), (13,20)), List((8,17), (9,22), (10,17))),ArrayBuffer((2,0), (1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((11,21), (12,17), (14,20)), List((13,20), (16,21), (15,19)), \
List((14,21), (15,20), (16,19)), List((10,17), (11,17), (13,21), (12,20)), \
List((8,17), (9,22), (10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (9,17), (8,22)), List((12,17), (13,21), (16,20)), List((11,17), \
(12,21), (14,17)), List((10,21), (15,19), (13,20)), List((10,19), (11,21), \
(16,17), (15,20)), List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), \
(1,0), (1,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,17), (13,21), (16,20)), List((11,17), (12,21), (14,17)), \
List((10,21), (15,19), (13,20)), List((15,20), (10,19), (11,21), (16,17)), \
List((8,17), (9,22), (14,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (2,0), \
(1,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(7,18), (9,17), (8,22)), List((12,17), (13,22), (16,19)), List((10,21), \
(12,22), (14,17)), List((10,22), (14,21), (15,17), (11,20)), List((8,17), \
(11,22), (15,20)), List((9,22), (16,17), (13,19))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,17), (16,19), (14,20)), List((13,19), (14,17), (16,20)), \
List((11,17), (15,21), (12,19)), List((11,21), (8,17), (10,22), (15,19)), \
List((9,22), (13,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,17), (16,19), (14,20)), List((13,19), (14,17), (16,20)), \
List((11,17), (15,21), (12,19)), List((8,17), (10,22), (15,19), (11,21)), \
List((9,22), (13,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,21), (16,17), (13,20)), List((11,21), (15,19), (12,17)), \
List((14,17), (11,19), (13,21), (16,20)), List((8,17), (10,22), (14,19)), \
List((9,22), (15,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,21), (16,19), (13,20)), List((11,21), (14,17), (12,19)), \
List((11,17), (13,21), (16,20), (15,19)), List((8,17), (10,22), (14,19)), \
List((9,22), (15,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,21), (16,19), (13,20)), List((11,21), (14,17), (12,19)), \
List((15,19), (11,17), (13,21), (16,20)), List((8,17), (10,22), (14,19)), \
List((9,22), (15,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,21), (16,19), (13,20)), List((13,21), (16,20), (14,19)), \
List((11,21), (15,17), (12,19)), List((8,17), (10,22), (15,19)), List((9,22), \
(11,17), (14,21), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0), \
(2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,21), (16,20), (13,19)), List((14,17), (13,21), (16,19), \
(15,20)), List((10,22), (12,20), (11,21)), List((8,17), (11,22), (14,21)), \
List((9,22), (15,17), (10,20))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,21), (16,20), (14,17)), List((13,19), (14,21), (15,17)), \
List((10,22), (12,20), (11,21)), List((15,19), (8,17), (11,22), (13,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,21), (16,20), (14,17)), List((13,19), (14,21), (15,17)), \
List((10,22), (12,20), (11,21)), List((8,17), (11,22), (13,21), (15,19)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,21), (16,20), (14,19)), List((13,17), (14,21), (15,19)), \
List((10,22), (12,20), (11,21)), List((8,17), (11,22), (13,21)), \
List((10,20), (9,22), (15,17), (16,19))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((12,22), (16,17), (13,19)), List((10,22), (14,20), (12,17)), \
List((14,17), (10,20), (11,22), (15,21)), List((8,17), (13,22), (16,19)), \
List((9,22), (15,17), (11,21))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((13,17), (14,20), (16,19)), List((11,21), (15,17), (12,19)), \
List((11,17), (12,21), (14,19), (13,20)), List((8,17), (10,22), (15,19)), \
List((9,22), (16,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((13,17), (14,20), (16,19)), List((11,21), (15,17), (12,19)), \
List((13,20), (11,17), (12,21), (14,19)), List((8,17), (10,22), (15,19)), \
List((9,22), (16,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((13,19), (16,20), (15,17)), List((12,21), (15,19), (14,17)), \
List((10,22), (13,20), (12,19), (11,21)), List((8,17), (11,22), (14,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((13,19), (16,20), (15,17)), List((12,21), (15,19), (14,17)), \
List((11,21), (10,22), (13,20), (12,19)), List((8,17), (11,22), (14,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((13,21), (15,17), (16,20)), List((11,22), (16,21), (12,20)), \
List((10,22), (14,19), (13,17), (11,21)), List((8,17), (12,22), (15,20)), \
List((9,22), (14,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((13,21), (16,19), (14,17)), List((12,21), (15,20), (16,17), \
(13,19)), List((10,22), (12,20), (11,21)), List((8,17), (11,22), (14,21)), \
List((9,22), (15,17), (10,20))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,17), (15,19), (16,20)), List((13,17), (12,21), (15,20), \
(14,19)), List((10,22), (12,20), (11,21)), List((8,17), (11,22), (13,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,17), (16,19), (15,20)), List((10,17), (11,21), (14,19)), \
List((11,19), (13,21), (16,20)), List((12,21), (15,17), (13,20)), \
List((10,21), (8,17), (9,22), (12,17))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,17), (16,19), (15,20)), List((10,17), (11,21), (14,19)), \
List((11,19), (13,21), (16,20)), List((12,21), (15,17), (13,20)), \
List((8,17), (9,22), (12,17), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 
  (d*v^24*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,17), (16,20), (15,19)), List((12,21), (14,20), (13,17)), \
List((10,22), (12,20), (11,21)), List((8,17), (11,22), (13,21)), \
List((10,20), (9,22), (15,17), (16,19))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 
  -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,17), (16,21), (15,20)), List((10,21), (12,22), (16,20)), \
List((10,22), (14,21), (13,17), (11,19)), List((8,17), (11,22), (13,19)), \
List((9,22), (15,17), (12,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,19), (15,20), (16,21)), List((11,17), (16,19), (13,21)), \
List((12,20), (13,17), (15,21)), List((8,17), (10,22), (11,19)), \
List((10,19), (9,22), (12,17), (14,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 
  -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,19), (15,20), (16,21)), List((11,17), (16,19), (13,21)), \
List((12,20), (13,17), (15,21)), List((8,17), (10,22), (11,19)), List((9,22), \
(12,17), (14,20), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,19), (16,20), (15,17)), List((12,21), (14,20), (13,19)), \
List((10,22), (12,20), (11,21)), List((15,19), (8,17), (11,22), (13,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,19), (16,20), (15,17)), List((12,21), (14,20), (13,19)), \
List((10,22), (12,20), (11,21)), List((8,17), (11,22), (13,21), (15,19)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,20), (15,19), (16,21)), List((11,17), (16,20), (13,21)), \
List((12,19), (13,17), (15,21)), List((11,20), (8,17), (10,22), (14,19)), \
List((9,22), (12,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,20), (15,19), (16,21)), List((11,17), (16,20), (13,21)), \
List((12,19), (13,17), (15,21)), List((8,17), (10,22), (14,19), (11,20)), \
List((9,22), (12,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,21), (16,20), (15,17)), List((12,21), (13,19), (14,20)), \
List((10,22), (13,20), (12,19), (11,21)), List((8,17), (11,22), (15,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((14,21), (16,20), (15,17)), List((12,21), (13,19), (14,20)), \
List((11,21), (10,22), (13,20), (12,19)), List((8,17), (11,22), (15,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (7,18), (9,17), \
(8,22)), List((16,21), (13,19), (14,17), (15,20)), List((10,21), (12,22), \
(16,19)), List((10,22), (15,21), (11,20)), List((8,17), (11,22), (14,20)), \
List((9,22), (13,17), (12,19))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,18), (12,21)), \
List((7,18), (11,17), (8,21)), List((9,20), (10,19), (14,22)), List((9,19), \
(13,20), (10,22)), List((12,17), (16,21), (14,20), (15,22)), List((11,21), \
(15,17), (13,22), (16,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d^2, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,17), (8,18), (7,18)), List((8,18), (10,18), (9,22)), List((15,18), \
(13,21), (14,19), (16,20)), List((12,21), (11,22), (14,20), (13,19)), \
List((9,18), (12,22), (15,21)), List((10,22), (16,18), \
(11,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (1,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,18), (9,22)), \
List((7,18), (13,17), (8,22)), List((9,17), (14,22), (10,21)), List((10,17), \
(12,21), (11,20)), List((11,17), (12,20), (16,21), (15,19)), List((13,22), \
(15,17), (16,19), (14,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), \
(8,18), (9,22)), List((7,18), (13,17), (8,22)), List((9,17), (14,22), \
(10,21)), List((10,17), (12,21), (11,20)), List((11,17), (12,20), (16,21), \
(15,19)), List((14,21), (13,22), (15,17), (16,19))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,22), (11,21)), \
List((9,21), (15,20), (14,19)), List((8,21), (13,22), (9,20)), List((7,22), \
(10,17), (12,18)), List((11,17), (14,21), (15,19), (16,20)), List((10,18), \
(16,17), (13,20), (12,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,22), (11,21)), \
List((9,21), (15,20), (14,19)), List((8,21), (13,22), (9,20)), List((7,22), \
(10,17), (12,18)), List((11,17), (14,21), (15,19), (16,20)), List((12,22), \
(10,18), (16,17), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,22), (11,21)), \
List((9,21), (15,20), (14,19)), List((8,21), (13,22), (9,20)), List((7,22), \
(10,17), (12,18)), List((16,20), (11,17), (14,21), (15,19)), List((12,22), \
(10,18), (16,17), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,22), (13,18)), \
List((9,20), (10,22), (15,21)), List((10,21), (11,22), (14,19)), \
List((11,19), (12,22), (14,21)), List((13,17), (8,18), (9,22), (16,20)), \
List((12,21), (7,22), (16,17), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,22), (13,18)), \
List((9,20), (10,22), (15,21)), List((10,21), (11,22), (14,19)), \
List((11,19), (12,22), (14,21)), List((13,17), (8,18), (9,22), (16,20)), \
List((7,22), (16,17), (15,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,22), (13,21)), \
List((7,22), (13,17), (12,21)), List((8,21), (9,22), (15,19)), List((10,18), \
(11,22), (16,20)), List((9,19), (10,22), (16,18), (14,20)), List((11,20), \
(12,22), (15,21), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d/v^12, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,17), (8,22), (13,21)), List((8,21), (9,22), (14,18)), List((9,18), \
(10,22), (14,21)), List((11,20), (12,22), (15,19)), List((10,21), (11,22), \
(16,20), (13,17)), List((12,19), (7,22), (16,17), \
(15,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  d/v^12, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,22), \
(13,21)), List((8,21), (9,22), (14,18)), List((9,18), (10,22), (14,21)), \
List((11,20), (12,22), (15,19)), List((10,21), (11,22), (16,20), (13,17)), \
List((7,22), (16,17), (15,20), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,17), (8,22), (13,21)), \
List((9,19), (10,22), (15,18)), List((11,20), (12,22), (14,21)), List((7,22), \
(13,17), (12,21)), List((8,21), (9,22), (16,19), (14,20)), List((15,19), \
(10,18), (11,22), (16,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(10,21), (8,22)), List((7,21), (8,18), (9,22)), List((10,22), (13,21), \
(12,20)), List((9,21), (14,22), (11,19)), List((12,22), (16,20), (15,17), \
(14,19)), List((11,21), (15,19), (16,17), (13,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (10,21), (8,22)), \
List((7,21), (8,18), (9,22)), List((10,22), (13,21), (12,20)), List((9,21), \
(14,22), (11,19)), List((12,22), (16,20), (15,17), (14,19)), List((13,20), \
(11,21), (15,19), (16,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(10,21), (8,22)), List((7,21), (8,18), (9,22)), List((10,22), (13,21), \
(12,20)), List((9,21), (14,22), (11,19)), List((14,19), (12,22), (16,20), \
(15,17)), List((11,21), (15,19), (16,17), (13,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (10,21), (8,22)), \
List((7,21), (8,18), (9,22)), List((10,22), (13,21), (12,20)), List((9,21), \
(14,22), (11,19)), List((14,19), (12,22), (16,20), (15,17)), List((13,20), \
(11,21), (15,19), (16,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
    (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + 
     d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (14,17), \
(10,22)), List((8,19), (13,17), (9,21)), List((7,17), (10,18), (12,22)), \
List((8,17), (9,19), (11,21)), List((14,22), (11,17), (15,21), (16,20)), \
List((13,21), (12,17), (16,22), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,17), (9,18), \
(8,22)), List((12,21), (16,20), (13,19)), List((14,18), (13,21), (16,19), \
(15,20)), List((10,22), (12,20), (11,21)), List((8,18), (11,22), (14,21)), \
List((9,22), (15,18), (10,20))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,17), (9,18), \
(8,22)), List((12,21), (16,20), (14,18)), List((13,19), (14,21), (15,18)), \
List((10,22), (12,20), (11,21)), List((15,19), (8,18), (11,22), (13,21)), \
List((9,22), (16,18), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,17), (9,18), \
(8,22)), List((13,18), (16,20), (15,21), (14,19)), List((10,20), (12,22), \
(16,21)), List((11,22), (15,19), (12,21)), List((8,18), (10,22), (13,20)), \
List((9,22), (14,18), (11,19))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,17), (9,18), \
(8,22)), List((14,19), (16,20), (15,18)), List((12,21), (14,20), (13,19)), \
List((10,22), (12,20), (11,21)), List((15,19), (8,18), (11,22), (13,21)), \
List((9,22), (16,18), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((13,21), (8,18), (9,18), (10,22)), List((13,18), (15,21), (16,17)), \
List((9,22), (16,18), (12,17)), List((11,20), (12,22), (14,17)), \
List((15,17), (10,21), (11,22), (14,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((14,17), (8,18), (12,18), (11,21)), List((13,17), (16,18), (15,20)), \
List((14,18), (15,17), (16,20)), List((9,17), (10,22), (13,18)), \
List((10,18), (9,22), (11,17), (12,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((14,17), (8,18), (16,18), (15,20)), List((13,18), (15,17), (16,20)), \
List((9,17), (11,22), (14,18)), List((10,21), (13,17), (12,18)), \
List((11,18), (9,22), (10,17), (12,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((14,21), (8,18), (13,18), (15,17)), List((9,22), (16,20), (10,17)), \
List((10,22), (13,17), (12,18)), List((11,21), (12,22), (14,18)), \
List((16,17), (9,20), (11,22), (15,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((14,22), (8,18), (15,18), (12,20)), List((9,22), (13,17), (14,18)), \
List((10,17), (16,21), (13,18)), List((11,21), (15,20), (16,18)), \
List((9,17), (12,22), (11,20), (10,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((15,17), (8,18), (12,18), (11,20)), List((14,21), (15,18), (16,17)), \
List((10,17), (13,22), (16,21)), List((9,22), (14,18), (13,21)), List((9,18), \
(10,22), (11,17), (12,20))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((15,17), (8,18), (16,18), (14,21)), List((10,18), \
(13,22), (16,21)), List((9,22), (14,17), (13,21)), List((11,17), (12,20), \
(15,18)), List((9,17), (10,22), (12,18), (11,20))),ArrayBuffer((1,0), (2,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((15,21), (8,18), (13,18), (10,17)), List((9,20), (13,17), (14,18)), \
List((11,21), (16,22), (15,18)), List((12,22), (14,20), (16,18)), \
List((9,17), (12,20), (11,22), (10,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (10,18), (13,22), (15,21)), List((14,17), (15,18), (16,21)), \
List((9,22), (16,17), (13,21)), List((11,17), (12,20), (14,18)), List((9,17), \
(10,22), (12,18), (11,20))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (11,18), (10,22)), List((11,22), (16,18), \
(12,21)), List((9,17), (12,22), (15,21)), List((14,18), (13,20), (15,17), \
(16,21)), List((10,18), (9,22), (13,17), (14,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (11,18), (10,22)), List((13,18), (16,21), (14,17)), List((9,22), \
(13,21), (10,18)), List((11,22), (14,18), (15,17), (12,20)), List((16,17), \
(9,21), (12,22), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (11,18), (10,22)), List((13,18), (16,21), \
(14,17)), List((9,22), (13,21), (10,18)), List((12,20), (11,22), (14,18), \
(15,17)), List((16,17), (9,21), (12,22), (15,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (11,18), (10,22)), List((14,17), (15,18), (16,21)), List((9,17), \
(11,22), (14,18)), List((12,18), (13,20), (16,17), (15,21)), List((10,18), \
(9,22), (13,17), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (12,18), (11,22)), List((10,22), (16,17), \
(11,18)), List((9,21), (12,22), (15,18)), List((13,17), (14,20), (15,21), \
(16,18)), List((10,17), (9,22), (14,21), (13,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (12,18), (11,22)), List((10,22), (16,17), (11,18)), List((9,21), \
(12,22), (15,18)), List((16,18), (13,17), (14,20), (15,21)), List((10,17), \
(9,22), (14,21), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (12,18), (11,22)), List((10,22), (16,20), \
(11,18)), List((9,21), (12,22), (15,18)), List((13,17), (15,21), (16,18), \
(14,20)), List((10,20), (9,22), (13,21), (14,17))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (12,18), (11,22)), List((10,22), (16,21), (11,18)), List((9,17), \
(12,22), (15,18)), List((13,20), (15,17), (16,18), (14,21)), List((10,21), \
(9,22), (13,17), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (12,18), (11,22)), List((10,22), (16,21), \
(11,18)), List((9,17), (12,22), (15,18)), List((14,21), (13,20), (15,17), \
(16,18)), List((10,21), (9,22), (13,17), (14,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (13,18), (14,17)), List((9,22), (13,17), (11,18)), List((9,17), \
(10,22), (15,21)), List((12,20), (11,22), (14,18), (16,17)), List((15,17), \
(10,21), (12,22), (16,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (13,18), (14,17)), List((9,22), (15,17), \
(11,21)), List((9,17), (10,22), (14,18)), List((11,22), (15,21), (16,17), \
(12,20)), List((10,18), (12,22), (16,20), (13,17))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (13,18), (14,17)), List((9,22), (15,17), (11,21)), List((9,17), \
(10,22), (14,18)), List((11,22), (15,21), (16,17), (12,20)), List((13,17), \
(10,18), (12,22), (16,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (13,18), (15,17), (16,20)), List((14,17), \
(16,18), (15,20)), List((9,17), (11,22), (14,18)), List((10,21), (13,17), \
(12,18)), List((11,18), (9,22), (10,17), (12,21))),ArrayBuffer((1,0), (2,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (13,18), (15,21), (14,17)), List((9,20), (10,22), (16,17)), \
List((10,17), (12,22), (14,18)), List((11,22), (13,21), (12,18)), \
List((9,22), (16,20), (15,17), (11,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (13,18), (9,17), (10,22)), List((13,17), (16,18), (15,21)), \
List((10,18), (12,22), (16,21)), List((9,22), (14,17), (11,20)), \
List((11,22), (14,20), (15,17), (12,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (13,18), (9,20), (10,22)), List((9,22), (14,20), (11,17)), \
List((10,18), (12,22), (16,21)), List((11,22), (15,17), (12,21)), \
List((14,17), (13,20), (16,18), (15,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (13,18), (9,21), (10,22)), List((13,21), (15,18), (14,17)), \
List((10,18), (12,22), (15,17)), List((11,22), (16,20), (12,17)), \
List((9,22), (14,21), (16,17), (11,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (14,18), (11,17), (12,21)), List((13,18), (15,17), (16,20)), \
List((14,17), (16,18), (15,20)), List((9,18), (10,22), (13,17)), \
List((10,17), (9,22), (12,18), (11,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (14,18), (9,17), (10,22)), List((9,22), (16,17), (12,20)), \
List((11,22), (15,21), (13,17)), List((10,18), (13,22), (14,17)), \
List((15,17), (11,21), (12,22), (16,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (15,18), (10,20), (13,17)), List((9,17), (16,21), (13,18)), \
List((11,21), (14,22), (16,18)), List((12,22), (15,20), (14,18)), \
List((11,22), (9,21), (10,17), (12,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (15,18), (11,17), (12,20)), List((14,21), (15,17), (16,18)), \
List((10,18), (13,22), (16,21)), List((9,22), (14,17), (13,21)), List((9,17), \
(10,22), (12,18), (11,20))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (15,18), (13,21), (9,22)), List((14,18), \
(16,17), (15,21)), List((10,17), (13,22), (16,21)), List((11,18), (12,20), \
(14,17)), List((9,18), (10,22), (12,17), (11,20))),ArrayBuffer((1,0), (2,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (15,18), (16,17), (14,21)), List((10,17), (13,22), (16,21)), \
List((9,22), (14,18), (13,21)), List((11,20), (15,17), (12,18)), List((9,18), \
(10,22), (11,17), (12,20))),ArrayBuffer((1,0), (2,0), (1,0), (1,0), (1,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (16,18), (12,20), (15,22)), List((9,21), \
(13,17), (14,18)), List((10,17), (16,20), (13,18)), List((11,22), (14,21), \
(15,18)), List((9,17), (11,21), (12,22), (10,20))),ArrayBuffer((1,0), (2,0), \
(1,0), (1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (10,17)), List((10,18), (14,17), (11,22)), List((11,18), \
(13,22), (12,21)), List((16,20), (9,17), (12,18), (15,21)), List((13,21), \
(14,22), (16,17), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (9,18), (10,17)), List((10,18), (14,17), \
(11,22)), List((11,18), (13,22), (12,21)), List((9,17), (12,18), (15,21), \
(16,20)), List((13,21), (14,22), (16,17), (15,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (10,17)), List((9,17), (11,18), (14,21)), List((11,21), \
(13,18), (12,22)), List((14,17), (12,21), (15,22), (16,20)), List((10,18), \
(16,17), (15,20), (13,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (9,18), (10,17)), List((9,17), (14,18), \
(13,21)), List((10,18), (12,17), (11,22)), List((13,17), (14,21), (16,18), \
(15,20)), List((11,18), (12,22), (15,17), (16,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (10,20)), List((11,22), (12,21), (13,17)), List((11,21), \
(15,22), (14,18)), List((10,18), (16,20), (12,17), (14,21)), List((16,17), \
(9,20), (15,18), (13,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (9,18), (10,20)), List((11,22), (12,21), \
(13,17)), List((11,21), (15,22), (14,18)), List((10,18), (16,20), (12,17), \
(14,21)), List((9,20), (15,18), (13,22), (16,17))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (10,22), (13,17)), List((13,18), (14,17), (15,21)), \
List((9,22), (15,18), (11,21)), List((10,17), (12,22), (16,20)), \
List((11,22), (14,21), (16,17), (12,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (10,22), (13,20)), List((9,22), (14,18), (11,21)), \
List((10,20), (12,22), (16,17)), List((11,22), (15,21), (12,17)), \
List((13,18), (16,20), (15,17), (14,21))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (10,22), (14,17)), List((12,20), (13,22), (16,17)), \
List((9,22), (14,18), (13,17)), List((10,17), (11,22), (15,21)), \
List((15,17), (11,21), (12,22), (16,20))),ArrayBuffer((1,0), (2,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (10,22)), List((10,18), (13,22), (16,17)), List((12,22), \
(14,20), (13,17)), List((11,21), (9,22), (16,18), (15,17)), List((11,22), \
(15,21), (14,17), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (9,18), (10,22)), List((10,18), (13,22), \
(16,17)), List((12,22), (14,20), (13,17)), List((9,22), (16,18), (15,17), \
(11,21)), List((11,22), (15,21), (14,17), (12,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (10,22)), List((12,17), (13,20), (16,18)), List((14,21), \
(16,17), (15,18)), List((11,17), (9,22), (13,18), (12,20)), List((10,18), \
(11,22), (14,17), (15,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (9,18), (10,22)), List((12,17), (13,20), \
(16,18)), List((14,21), (16,17), (15,18)), List((9,22), (13,18), (12,20), \
(11,17)), List((10,18), (11,22), (14,17), (15,21))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (10,22)), List((12,21), (13,22), (15,17)), List((9,22), \
(14,18), (13,17)), List((16,17), (11,20), (12,22), (15,21)), List((10,18), \
(11,22), (16,20), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (9,18), (11,22)), List((10,22), (16,17), \
(12,21)), List((11,18), (12,22), (15,21)), List((13,17), (14,20), (15,18), \
(16,21)), List((10,17), (9,22), (14,18), (13,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (11,22)), List((10,22), (16,17), (12,21)), List((11,18), \
(12,22), (15,21)), List((13,17), (14,20), (15,18), (16,21)), List((9,22), \
(14,18), (13,20), (10,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (9,18), (11,22)), List((14,18), (15,17), \
(16,21)), List((10,22), (14,17), (11,18)), List((12,17), (13,20), (16,18), \
(15,21)), List((10,17), (9,22), (13,18), (12,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (7,19), (8,18)), \
List((8,18), (9,18), (11,22)), List((14,18), (15,17), (16,21)), List((10,22), \
(14,17), (11,18)), List((12,17), (13,20), (16,18), (15,21)), List((9,22), \
(13,18), (12,20), (10,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), \
(7,19), (8,18)), List((8,18), (9,18), (12,22)), List((13,21), (16,18), \
(14,17)), List((9,22), (13,18), (10,21)), List((10,22), (14,21), (15,17), \
(11,20)), List((12,18), (11,22), (15,20), (16,17))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (8,17), (9,22)), \
List((8,22), (10,17), (14,21)), List((7,17), (9,18), (13,22)), List((10,21), \
(11,17), (12,20)), List((13,17), (14,22), (16,21), (15,19)), List((12,21), \
(11,20), (15,17), (16,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^12, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,18), (8,17), (9,22)), List((8,22), (10,17), (14,21)), List((7,17), \
(9,18), (13,22)), List((10,21), (11,17), (12,20)), List((15,19), (13,17), \
(14,22), (16,21)), List((12,21), (11,20), (15,17), \
(16,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (8,19), (9,17), \
(7,19)), List((13,17), (14,21), (16,20)), List((11,22), (15,17), (12,20)), \
List((11,17), (12,22), (14,20), (13,21)), List((8,17), (10,19), (15,20)), \
List((9,19), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (8,19), (9,17), \
(7,19)), List((13,22), (16,20), (14,17)), List((12,22), (15,21), (16,17), \
(13,20)), List((10,19), (12,21), (11,22)), List((8,17), (11,19), (14,22)), \
List((9,19), (15,17), (10,21))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (8,19), (9,17), \
(7,19)), List((14,17), (15,20), (16,21)), List((13,17), (12,22), (15,21), \
(14,20)), List((10,19), (12,21), (11,22)), List((8,17), (11,19), (13,22)), \
List((9,19), (16,17), (10,21))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (8,19), (9,17), \
(7,19)), List((15,22), (13,21), (14,17), (16,20)), List((10,19), (16,22), \
(12,20)), List((10,22), (11,19), (15,21)), List((8,17), (12,19), (14,20)), \
List((9,19), (13,17), (11,21))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((10,20), (13,22), (15,17)), List((11,22), (14,21), (12,17)), \
List((10,22), (15,20), (14,17), (11,21)), List((8,19), (12,22), (16,17)), \
List((9,22), (16,19), (13,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((11,19), (13,17), (15,21)), List((12,17), (14,20), (13,21)), \
List((14,21), (16,20), (15,19)), List((8,19), (10,22), (11,17)), \
List((10,17), (9,22), (16,19), (12,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((11,19), (13,17), (16,20)), List((12,17), (15,21), (14,19)), \
List((13,20), (14,17), (16,19)), List((8,19), (10,22), (11,17)), \
List((10,17), (9,22), (15,19), (12,21))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((12,21), (16,17), (13,19)), List((14,17), (15,20), (16,19)), \
List((10,21), (11,22), (12,17)), List((8,19), (10,22), (13,21)), \
List((11,17), (9,22), (15,19), (14,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((12,21), (16,17), (14,20)), List((13,19), (14,21), (15,20)), \
List((10,21), (11,22), (12,17)), List((8,19), (10,22), (13,21)), \
List((11,17), (9,22), (15,19), (16,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((12,21), (16,19), (13,20)), List((14,17), (16,20), (15,19)), \
List((11,17), (10,22), (13,21), (14,20)), List((8,19), (11,22), (15,17)), \
List((9,22), (12,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((12,21), (16,20), (13,17)), List((14,19), (16,17), (15,20)), \
List((10,22), (13,21), (11,17)), List((8,19), (11,22), (14,17)), \
List((10,21), (9,22), (15,19), (12,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((12,21), (16,20), (14,17)), List((13,19), (14,21), (15,17)), \
List((10,22), (12,20), (11,21)), List((8,19), (11,22), (13,21)), \
List((10,20), (9,22), (15,19), (16,17))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((13,17), (12,21), (16,19), (14,20)), List((14,17), (16,20), \
(15,19)), List((10,22), (13,21), (11,17)), List((8,19), (11,22), (15,17)), \
List((9,22), (12,19), (10,21))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((13,17), (14,21), (16,19)), List((11,17), (12,22), (15,20)), \
List((10,22), (13,21), (15,17), (12,20)), List((8,19), (11,22), (16,17)), \
List((9,22), (14,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((13,17), (14,21), (16,19)), List((12,20), (13,21), (15,17)), \
List((11,17), (10,22), (12,21), (15,20)), List((8,19), (11,22), (16,17)), \
List((9,22), (14,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((13,17), (15,21), (16,19), (14,20)), List((10,22), (14,17), \
(12,20)), List((10,17), (11,22), (13,21)), List((8,19), (12,22), (16,20)), \
List((9,22), (15,19), (11,21))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((13,17), (16,20), (15,19)), List((12,21), (15,17), (14,19)), \
List((10,22), (13,20), (12,17), (11,21)), List((8,19), (11,22), (14,21)), \
List((9,22), (16,19), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((13,19), (12,21), (16,17), (14,20)), List((14,19), (16,20), \
(15,17)), List((10,21), (11,22), (12,17)), List((8,19), (10,22), (13,21)), \
List((9,22), (15,19), (11,17))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((13,19), (14,21), (16,20)), List((12,17), (13,21), (15,19)), \
List((10,22), (12,21), (11,17)), List((8,19), (11,22), (15,17)), \
List((10,21), (9,22), (16,19), (14,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((13,20), (16,17), (14,19)), List((11,21), (15,19), (12,17)), \
List((11,19), (12,21), (13,17), (14,20)), List((8,19), (10,22), (15,17)), \
List((9,22), (16,19), (10,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((13,21), (16,17), (14,19)), List((11,22), (15,17), (12,20)), \
List((13,17), (10,21), (12,22), (15,20)), List((8,19), (10,22), (14,21)), \
List((9,22), (16,19), (11,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,18), (9,19), (8,22), \
(7,19)), List((14,19), (16,20), (15,17)), List((12,21), (14,20), (13,19)), \
List((10,22), (12,20), (11,21)), List((8,19), (11,22), (13,21)), \
List((10,20), (9,22), (15,19), (16,17))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (16,21), \
(13,22)), List((8,22), (14,20), (15,21)), List((7,21), (12,19), (11,18)), \
List((8,20), (10,22), (9,17)), List((15,22), (11,21), (12,18), (13,19)), \
List((14,21), (9,20), (10,17), (16,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (16,21), \
(13,22)), List((8,22), (14,20), (15,21)), List((7,21), (12,19), (11,18)), \
List((8,20), (10,22), (9,17)), List((15,22), (11,21), (12,18), (13,19)), \
List((9,20), (10,17), (16,22), (14,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (8,19), \
(9,17)), List((12,17), (13,19), (16,20)), List((10,22), (12,19), (14,17)), \
List((10,19), (14,22), (15,17), (11,21)), List((8,17), (11,19), (15,21)), \
List((9,19), (16,17), (13,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (8,19), \
(9,17)), List((12,19), (16,17), (13,20)), List((10,19), (14,21), (12,17)), \
List((14,17), (10,21), (11,19), (15,22)), List((8,17), (13,19), (16,20)), \
List((9,19), (15,17), (11,22))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (8,19), \
(9,17)), List((13,17), (14,21), (16,20)), List((11,22), (15,17), (12,20)), \
List((11,17), (12,22), (14,20), (13,21)), List((8,17), (10,19), (15,20)), \
List((9,19), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (8,19), \
(9,17)), List((13,22), (15,17), (16,21)), List((11,19), (16,22), (12,21)), \
List((10,19), (14,20), (13,17), (11,22)), List((8,17), (12,19), (15,21)), \
List((9,19), (14,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (8,19), \
(9,17)), List((13,22), (16,20), (14,17)), List((12,22), (15,21), (16,17), \
(13,20)), List((10,19), (12,21), (11,22)), List((8,17), (11,19), (14,22)), \
List((9,19), (15,17), (10,21))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (8,19), \
(9,17)), List((14,17), (15,20), (16,21)), List((13,17), (12,22), (15,21), \
(14,20)), List((10,19), (12,21), (11,22)), List((8,17), (11,19), (13,22)), \
List((9,19), (16,17), (10,21))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (8,19), \
(9,17)), List((14,17), (16,22), (15,21)), List((10,22), (12,19), (16,21)), \
List((10,19), (14,22), (13,17), (11,20)), List((8,17), (11,19), (13,20)), \
List((9,19), (15,17), (12,21))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (8,19), \
(9,17)), List((15,22), (13,21), (14,17), (16,20)), List((10,19), (16,22), \
(12,20)), List((10,22), (11,19), (15,21)), List((8,17), (12,19), (14,20)), \
List((9,19), (13,17), (11,21))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((10,20), (13,22), (15,17)), List((11,22), (14,21), (12,17)), \
List((10,22), (15,20), (14,17), (11,21)), List((8,19), (12,22), (16,17)), \
List((9,22), (16,19), (13,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((11,20), (13,17), (15,19)), List((12,17), (16,19), (14,21)), \
List((13,19), (14,17), (16,21)), List((8,19), (10,22), (11,17), (15,20)), \
List((9,22), (12,19), (10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,17), (13,21), (16,20)), List((13,20), (14,21), (15,19), \
(16,17)), List((10,22), (12,21), (11,17)), List((8,19), (11,22), (15,17)), \
List((9,22), (14,19), (10,21))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,17), (13,21), (16,20)), List((16,17), (13,20), (14,21), \
(15,19)), List((10,22), (12,21), (11,17)), List((8,19), (11,22), (15,17)), \
List((9,22), (14,19), (10,21))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (13,17), (15,19)), List((11,20), (12,17), (16,21)), \
List((14,19), (16,20), (15,21)), List((8,19), (10,22), (11,17), (14,20)), \
List((9,22), (13,19), (10,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,17), (13,20)), List((14,19), (16,20), (15,17)), \
List((10,21), (11,22), (12,17)), List((14,20), (8,19), (10,22), (13,21)), \
List((9,22), (15,19), (11,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,17), (14,19)), List((13,20), (14,21), (15,19)), \
List((10,21), (11,22), (12,17)), List((15,20), (8,19), (10,22), (13,21)), \
List((9,22), (16,19), (11,17))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,17), (14,20)), List((13,19), (14,21), (16,20), \
(15,17)), List((10,21), (11,22), (12,17)), List((8,19), (10,22), (13,21)), \
List((9,22), (15,19), (11,17))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,17), (14,20)), List((15,17), (13,19), (14,21), \
(16,20)), List((10,21), (11,22), (12,17)), List((8,19), (10,22), (13,21)), \
List((9,22), (15,19), (11,17))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,19), (13,17)), List((14,20), (16,17), (15,19)), \
List((10,22), (13,21), (11,17)), List((15,20), (8,19), (11,22), (14,17)), \
List((9,22), (12,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,19), (13,17)), List((14,20), (16,17), (15,19)), \
List((10,22), (13,21), (11,17)), List((8,19), (11,22), (14,17), (15,20)), \
List((9,22), (12,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,19), (13,20)), List((14,17), (16,20), (15,19)), \
List((11,17), (10,22), (13,21), (14,20)), List((8,19), (11,22), (15,17)), \
List((9,22), (12,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,20), (13,17)), List((14,19), (13,21), (16,17), \
(15,20)), List((10,22), (12,20), (11,21)), List((8,19), (11,22), (14,21)), \
List((9,22), (15,19), (10,20))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,20), (13,19)), List((14,20), (15,17), (16,19)), \
List((10,21), (11,22), (14,17), (12,20)), List((8,19), (10,22), (13,21)), \
List((9,22), (15,19), (11,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((12,21), (16,20), (13,19)), List((14,20), (15,17), (16,19)), \
List((12,20), (10,21), (11,22), (14,17)), List((8,19), (10,22), (13,21)), \
List((9,22), (15,19), (11,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,17), (12,21), (16,19), (14,20)), List((14,17), (16,20), \
(15,19)), List((10,22), (13,21), (11,17)), List((8,19), (11,22), (15,17)), \
List((9,22), (12,19), (10,21))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,17), (14,21), (16,19)), List((11,17), (12,22), (15,20)), \
List((10,22), (13,21), (15,17), (12,20)), List((8,19), (11,22), (16,17)), \
List((9,22), (14,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,17), (14,21), (16,19)), List((12,20), (13,21), (15,17)), \
List((11,17), (10,22), (12,21), (15,20)), List((8,19), (11,22), (16,17)), \
List((9,22), (14,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,17), (15,21), (16,19), (14,20)), List((10,22), (14,17), \
(12,20)), List((10,17), (11,22), (13,21)), List((8,19), (12,22), (16,20)), \
List((9,22), (15,19), (11,21))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,17), (15,21), (16,20), (14,19)), List((10,17), (12,22), \
(13,21)), List((11,22), (15,20), (12,21)), List((8,19), (10,22), (14,17)), \
List((9,22), (16,19), (11,20))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,17), (16,20), (15,19)), List((12,21), (15,17), (14,19)), \
List((10,22), (13,20), (12,17), (11,21)), List((8,19), (11,22), (14,21)), \
List((9,22), (16,19), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,19), (12,21), (16,17), (14,20)), List((14,19), (16,20), \
(15,17)), List((10,21), (11,22), (12,17)), List((8,19), (10,22), (13,21)), \
List((9,22), (15,19), (11,17))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,20), (16,17), (14,19)), List((11,21), (15,19), (12,17)), \
List((11,19), (12,21), (13,17), (14,20)), List((8,19), (10,22), (15,17)), \
List((9,22), (16,19), (10,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,21), (16,17), (14,19)), List((11,22), (15,17), (12,20)), \
List((13,17), (10,21), (12,22), (15,20)), List((8,19), (10,22), (14,21)), \
List((9,22), (16,19), (11,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,21), (16,17), (14,19)), List((12,21), (15,20), (13,17)), \
List((10,21), (11,22), (15,17), (12,20)), List((8,19), (10,22), (14,21)), \
List((9,22), (16,19), (11,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^18*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,21), (16,17), (14,19)), List((12,21), (15,20), (13,17)), \
List((12,20), (10,21), (11,22), (15,17)), List((8,19), (10,22), (14,21)), \
List((9,22), (16,19), (11,17))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,21), (16,19), (14,20)), List((12,17), (14,21), (15,20)), \
List((10,22), (12,21), (11,17)), List((16,20), (8,19), (11,22), (15,17)), \
List((9,22), (13,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((13,21), (16,19), (14,20)), List((12,17), (14,21), (15,20)), \
List((10,22), (12,21), (11,17)), List((8,19), (11,22), (15,17), (16,20)), \
List((9,22), (13,19), (10,21))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), \
(2,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (7,18), (9,19), \
(8,22)), List((14,19), (13,17), (15,21), (16,20)), List((10,17), (12,22), \
(13,21)), List((11,22), (15,20), (12,21)), List((8,19), (10,22), (14,17)), \
List((9,22), (16,19), (11,20))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,17), (12,20)), \
List((7,17), (11,19), (8,20)), List((9,21), (10,18), (14,22)), List((9,18), \
(13,21), (10,22)), List((11,20), (16,19), (13,22), (15,21)), List((12,19), \
(15,20), (14,21), (16,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d^2, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,19), (8,17), (9,22)), List((9,19), (13,22), (10,21)), List((7,17), \
(10,19), (14,21)), List((8,22), (12,17), (11,20)), List((12,20), (14,17), \
(16,21), (15,18)), List((13,21), (11,22), (15,20), \
(16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 
     2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 
     2*v^24 - v^26 + v^28))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,19), (8,17), (9,22)), List((9,19), (13,22), (10,21)), List((7,17), \
(10,19), (14,21)), List((8,22), (12,17), (11,20)), List((15,18), (12,20), \
(14,17), (16,21)), List((11,22), (15,20), (16,18), \
(13,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
     (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
      3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
    (v^22*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,17), (9,22)), \
List((9,19), (13,22), (10,21)), List((7,17), (10,19), (14,21)), List((8,22), \
(12,17), (11,20)), List((15,18), (12,20), (14,17), (16,21)), List((13,21), \
(11,22), (15,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), \
(8,22), (13,20)), List((8,20), (9,22), (14,21)), List((11,21), (12,22), \
(14,20)), List((7,22), (13,19), (12,20)), List((9,21), (10,22), (15,17), \
(16,18)), List((10,17), (11,22), (16,21), (15,18))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), (13,20)), \
List((8,20), (9,22), (14,21)), List((11,21), (12,22), (14,20)), List((7,22), \
(13,19), (12,20)), List((9,21), (10,22), (15,17), (16,18)), List((15,18), \
(10,17), (11,22), (16,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d^2, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,19), (8,22), (13,20)), List((9,21), (10,22), (16,17)), List((10,17), \
(11,22), (16,21)), List((7,22), (13,19), (12,20)), List((8,20), (9,22), \
(14,21), (15,18)), List((11,21), (12,22), (15,20), \
(14,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), (15,17)), \
List((8,17), (9,22), (13,21)), List((9,21), (10,22), (16,20)), List((10,20), \
(11,22), (14,18)), List((11,18), (12,22), (16,21), (14,20)), List((7,22), \
(15,19), (13,17), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), \
(8,22), (15,17)), List((9,21), (10,22), (13,18)), List((10,18), (11,22), \
(13,21)), List((11,21), (12,22), (16,20)), List((14,20), (8,17), (9,22), \
(16,21)), List((7,22), (15,19), (14,17), (12,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), (15,17)), \
List((9,21), (10,22), (13,18)), List((10,18), (11,22), (13,21)), \
List((11,21), (12,22), (16,20)), List((8,17), (9,22), (16,21), (14,20)), \
List((12,20), (7,22), (15,19), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), (15,17)), \
List((9,21), (10,22), (13,18)), List((10,18), (11,22), (13,21)), \
List((11,21), (12,22), (16,20)), List((8,17), (9,22), (16,21), (14,20)), \
List((7,22), (15,19), (14,17), (12,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), (15,20)), \
List((8,20), (9,22), (13,17)), List((9,17), (10,22), (16,21)), List((10,21), \
(11,22), (14,18)), List((11,18), (12,22), (16,17), (14,21)), List((7,22), \
(15,19), (13,20), (12,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), \
(8,22), (15,20)), List((8,20), (9,22), (13,17)), List((9,17), (10,22), \
(16,21)), List((10,21), (11,22), (14,18)), List((14,21), (11,18), (12,22), \
(16,17)), List((12,17), (7,22), (15,19), (13,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), (15,20)), \
List((8,20), (9,22), (13,21)), List((9,21), (10,22), (16,17)), List((10,17), \
(11,22), (14,18)), List((11,18), (12,22), (16,21), (14,17)), List((7,22), \
(15,19), (13,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), \
(8,22), (15,20)), List((8,20), (9,22), (13,21)), List((9,21), (10,22), \
(16,17)), List((10,17), (11,22), (14,18)), List((14,17), (11,18), (12,22), \
(16,21)), List((12,21), (7,22), (15,19), (13,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), (15,20)), \
List((8,20), (9,22), (13,21)), List((9,21), (10,22), (16,17)), List((10,17), \
(11,22), (14,18)), List((14,17), (11,18), (12,22), (16,21)), List((7,22), \
(15,19), (13,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^12, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,19), (8,22), (15,20)), List((9,17), (10,22), (13,18)), List((10,18), \
(11,22), (13,17)), List((11,17), (12,22), (16,21)), List((8,20), (9,22), \
(16,17), (14,21)), List((12,21), (7,22), (15,19), \
(14,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  d/v^12, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), \
(15,20)), List((9,21), (10,22), (13,18)), List((10,18), (11,22), (13,21)), \
List((11,21), (12,22), (16,17)), List((8,20), (9,22), (16,21), (14,17)), \
List((12,17), (7,22), (15,19), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), (9,17)), \
List((9,19), (13,17), (10,21)), List((7,22), (10,19), (14,21)), List((8,17), \
(12,22), (11,20)), List((12,20), (14,22), (16,21), (15,18)), List((11,17), \
(15,20), (16,18), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), \
(8,22), (9,17)), List((9,19), (13,17), (10,21)), List((7,22), (10,19), \
(14,21)), List((8,17), (12,22), (11,20)), List((12,20), (14,22), (16,21), \
(15,18)), List((13,21), (11,17), (15,20), (16,18))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 
     2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 
     2*v^24 - v^26 + v^28))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,19), (8,22), (9,17)), List((9,19), (13,17), (10,21)), List((7,22), \
(10,19), (14,21)), List((8,17), (12,22), (11,20)), List((15,18), (12,20), \
(14,22), (16,21)), List((11,17), (15,20), (16,18), \
(13,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
     (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
      3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
    (v^22*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,19), (8,22), (9,17)), \
List((9,19), (13,17), (10,21)), List((7,22), (10,19), (14,21)), List((8,17), \
(12,22), (11,20)), List((15,18), (12,20), (14,22), (16,21)), List((13,21), \
(11,17), (15,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), \
(14,17), (9,21)), List((11,22), (13,19), (15,21)), List((11,19), (16,22), \
(13,21)), List((12,17), (15,22), (14,21)), List((10,22), (8,18), (9,20), \
(16,21)), List((12,22), (7,17), (8,20), (10,18))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), (14,17), (9,21)), \
List((11,22), (13,19), (15,21)), List((11,19), (16,22), (13,21)), \
List((12,17), (15,22), (14,21)), List((10,22), (8,18), (9,20), (16,21)), \
List((7,17), (8,20), (10,18), (12,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), (8,22), (15,17)), \
List((8,17), (9,22), (13,18)), List((10,21), (11,22), (14,19)), List((11,19), \
(12,22), (14,21)), List((13,17), (9,18), (10,22), (16,21)), List((12,21), \
(7,22), (15,20), (16,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), \
(8,22), (15,17)), List((8,17), (9,22), (13,18)), List((10,21), (11,22), \
(14,19)), List((11,19), (12,22), (14,21)), List((13,17), (9,18), (10,22), \
(16,21)), List((7,22), (15,20), (16,17), (12,21))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), (8,22), (15,17)), \
List((8,17), (9,22), (16,21)), List((9,21), (10,22), (14,18)), List((11,17), \
(12,22), (13,19)), List((10,18), (11,22), (16,17), (14,21)), List((7,22), \
(15,20), (13,17), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), \
(8,22), (15,17)), List((8,17), (9,22), (16,21)), List((9,21), (10,22), \
(14,18)), List((11,17), (12,22), (13,19)), List((14,21), (10,18), (11,22), \
(16,17)), List((7,22), (15,20), (13,17), (12,19))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), (9,19), (8,22)), \
List((7,19), (10,20), (11,21)), List((9,22), (11,19), (13,21)), List((8,20), \
(12,22), (10,21)), List((12,21), (14,22), (15,17), (16,18)), List((13,22), \
(16,21), (15,18), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d^2*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), (9,19), (8,22)), \
List((7,19), (10,20), (11,21)), List((9,22), (11,19), (13,21)), List((8,20), \
(12,22), (10,21)), List((12,21), (14,22), (15,17), (16,18)), List((14,17), \
(13,22), (16,21), (15,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
    (1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,20), (9,22), (11,21)), List((7,22), (10,20), (13,18)), List((8,17), \
(9,21), (14,22)), List((8,21), (12,17), (15,19)), List((10,18), (11,20), \
(15,21), (16,19)), List((12,19), (14,17), (13,22), \
(16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  -(d*v^6), HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), \
(9,22), (11,21)), List((7,22), (10,20), (13,18)), List((8,17), (9,21), \
(14,22)), List((8,21), (12,17), (15,19)), List((10,18), (11,20), (15,21), \
(16,19)), List((16,18), (12,19), (14,17), (13,22))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
      2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
      2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
      d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
      3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
      d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
     (1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), (9,22), (11,21)), \
List((7,22), (10,20), (13,18)), List((8,17), (9,21), (14,22)), List((8,21), \
(12,17), (15,19)), List((16,19), (10,18), (11,20), (15,21)), List((12,19), \
(14,17), (13,22), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + 
      d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + 
      d*v^20 + d*v^22 + v^24 - 2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 
      2*v^28 - 2*d*v^28 + 4*v^30 - d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + 
      d*v^34 - 4*v^36 + d*v^36 - v^38 - 3*v^40 + 2*d*v^40 - 2*v^42 + 
      2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + d*v^48 + 2*v^50 + 2*v^52 + 
      v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,20), (9,22), (11,21)), \
List((7,22), (10,20), (13,18)), List((8,17), (9,21), (14,22)), List((8,21), \
(12,17), (15,19)), List((16,19), (10,18), (11,20), (15,21)), List((16,18), \
(12,19), (14,17), (13,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (11,22), \
(14,17)), List((9,22), (15,18), (12,20)), List((10,19), (12,22), (16,20)), \
List((8,22), (14,21), (11,17)), List((8,21), (10,22), (16,19), (13,20)), \
List((7,22), (13,21), (15,20), (9,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (11,22), \
(14,19)), List((9,22), (15,17), (12,20)), List((10,18), (12,22), (16,20)), \
List((8,22), (14,21), (11,19)), List((8,21), (10,22), (16,18), (13,20)), \
List((7,22), (13,21), (15,20), (9,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (11,22), (8,20)), \
List((7,22), (9,21), (12,19)), List((9,19), (10,21), (14,17)), List((8,21), \
(13,20), (10,17)), List((12,22), (14,19), (16,17), (15,18)), List((11,20), \
(15,22), (16,18), (13,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), \
(11,22), (8,20)), List((7,22), (9,21), (12,19)), List((9,19), (10,21), \
(14,17)), List((8,21), (13,20), (10,17)), List((12,22), (14,19), (16,17), \
(15,18)), List((13,17), (11,20), (15,22), (16,18))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^10*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,21), (11,22), (8,20)), List((7,22), (9,21), (12,19)), List((9,19), \
(10,21), (14,17)), List((8,21), (13,20), (10,17)), List((15,18), (12,22), \
(14,19), (16,17)), List((11,20), (15,22), (16,18), \
(13,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^22*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,21), (11,22), (8,20)), List((7,22), (9,21), (12,19)), List((9,19), \
(10,21), (14,17)), List((8,21), (13,20), (10,17)), List((15,18), (12,22), \
(14,19), (16,17)), List((13,17), (11,20), (15,22), \
(16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (13,19), \
(16,22)), List((8,20), (14,22), (15,21)), List((7,19), (12,21), (11,18)), \
List((8,22), (10,20), (9,17)), List((11,19), (12,18), (14,21), (13,22)), \
List((16,21), (9,22), (10,17), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (13,22), \
(15,19)), List((9,22), (16,20), (11,17)), List((8,22), (15,21), (13,19)), \
List((11,22), (14,17), (12,18)), List((16,17), (10,20), (12,22), (14,18)), \
List((9,20), (7,22), (8,21), (10,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (8,22), (9,18)), \
List((9,21), (10,18), (14,20)), List((8,18), (13,22), (10,20)), List((7,22), \
(12,21), (11,19)), List((12,19), (14,21), (16,20), (15,17)), List((11,22), \
(15,19), (16,17), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), \
(8,22), (9,18)), List((9,21), (10,18), (14,20)), List((8,18), (13,22), \
(10,20)), List((7,22), (12,21), (11,19)), List((12,19), (14,21), (16,20), \
(15,17)), List((13,20), (11,22), (15,19), (16,17))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 
     2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 
     2*v^24 - v^26 + v^28))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,21), (8,22), (9,18)), List((9,21), (10,18), (14,20)), List((8,18), \
(13,22), (10,20)), List((7,22), (12,21), (11,19)), List((15,17), (12,19), \
(14,21), (16,20)), List((11,22), (15,19), (16,17), \
(13,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
     (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
      3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
    (v^22*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (8,22), (9,18)), \
List((9,21), (10,18), (14,20)), List((8,18), (13,22), (10,20)), List((7,22), \
(12,21), (11,19)), List((15,17), (12,19), (14,21), (16,20)), List((13,20), \
(11,22), (15,19), (16,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), \
(8,22), (9,19)), List((9,21), (10,19), (14,17)), List((8,19), (13,22), \
(10,17)), List((7,22), (12,21), (11,20)), List((12,20), (14,21), (16,17), \
(15,18)), List((11,22), (15,20), (16,18), (13,17))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (8,22), (9,19)), \
List((9,21), (10,19), (14,17)), List((8,19), (13,22), (10,17)), List((7,22), \
(12,21), (11,20)), List((12,20), (14,21), (16,17), (15,18)), List((13,17), \
(11,22), (15,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
    (1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (8,22), (9,19)), \
List((9,21), (10,19), (14,17)), List((8,19), (13,22), (10,17)), List((7,22), \
(12,21), (11,20)), List((15,18), (12,20), (14,21), (16,17)), List((11,22), \
(15,20), (16,18), (13,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
     (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
      3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
    (v^22*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (8,22), (9,19)), \
List((9,21), (10,19), (14,17)), List((8,19), (13,22), (10,17)), List((7,22), \
(12,21), (11,20)), List((15,18), (12,20), (14,21), (16,17)), List((13,17), \
(11,22), (15,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), \
(9,17), (10,19)), List((8,17), (10,21), (9,19)), List((7,17), (8,21), \
(13,17)), List((11,22), (14,17), (12,20)), List((12,22), (14,20), (16,17), \
(15,18)), List((13,17), (11,17), (15,22), (16,18))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,21), (9,17), (10,19)), \
List((8,17), (10,21), (9,19)), List((7,17), (8,21), (14,17)), List((11,22), \
(13,20), (12,17)), List((15,18), (12,22), (14,17), (16,17)), List((13,17), \
(11,20), (15,22), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,22), \
(11,20), (9,21)), List((8,21), (13,17), (9,22)), List((7,20), (14,22), \
(10,19)), List((8,17), (15,21), (12,18)), List((10,20), (16,19), (15,18), \
(11,21)), List((12,17), (16,18), (14,19), (13,22))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,22), (11,20), (9,21)), \
List((8,21), (13,17), (9,22)), List((7,20), (14,22), (10,19)), List((8,17), \
(15,21), (12,18)), List((10,20), (16,19), (15,18), (11,21)), List((13,22), \
(12,17), (16,18), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + 
      d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + 
      d*v^20 + d*v^22 + v^24 - 2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 
      2*v^28 - 2*d*v^28 + 4*v^30 - d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + 
      d*v^34 - 4*v^36 + d*v^36 - v^38 - 3*v^40 + 2*d*v^40 - 2*v^42 + 
      2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + d*v^48 + 2*v^50 + 2*v^52 + 
      v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,22), (11,20), (9,21)), \
List((8,21), (13,17), (9,22)), List((7,20), (14,22), (10,19)), List((8,17), \
(15,21), (12,18)), List((11,21), (10,20), (16,19), (15,18)), List((12,17), \
(16,18), (14,19), (13,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + 
      d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + 
      d*v^20 + d*v^22 + v^24 - 2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 
      2*v^28 - 2*d*v^28 + 4*v^30 - d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + 
      d*v^34 - 4*v^36 + d*v^36 - v^38 - 3*v^40 + 2*d*v^40 - 2*v^42 + 
      2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + d*v^48 + 2*v^50 + 2*v^52 + 
      v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,22), (13,17), (8,21)), \
List((7,17), (11,22), (14,18)), List((10,19), (12,22), (15,17)), List((8,22), \
(16,21), (9,20)), List((12,17), (9,22), (16,20), (13,21)), List((10,22), \
(15,19), (14,17), (11,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,22), \
(13,17), (8,21)), List((7,17), (11,22), (14,18)), List((10,19), (12,22), \
(15,17)), List((8,22), (16,21), (9,20)), List((9,22), (16,20), (13,21), \
(12,17)), List((10,22), (15,19), (14,17), (11,18))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,22), (13,17), (9,18)), \
List((10,21), (11,22), (15,19)), List((8,17), (9,22), (13,18)), List((7,17), \
(12,22), (14,20)), List((10,22), (16,21), (14,17), (12,20)), List((8,22), \
(16,17), (15,21), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^12, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((7,22), (16,19), (10,17)), List((7,19), (8,22), (14,21)), List((8,21), \
(9,22), (15,20)), List((9,20), (11,22), (13,18)), List((11,18), (12,22), \
(15,21), (13,20)), List((10,22), (16,17), (14,19), \
(12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,22), (16,19), \
(10,17)), List((7,19), (8,22), (14,21)), List((8,21), (9,22), (15,20)), \
List((9,20), (11,22), (13,18)), List((13,20), (11,18), (12,22), (15,21)), \
List((12,21), (10,22), (16,17), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((7,22), (16,19), \
(10,18)), List((7,19), (8,22), (14,21)), List((8,21), (9,22), (15,20)), \
List((9,20), (11,22), (13,17)), List((11,17), (12,22), (15,21), (13,20)), \
List((10,22), (16,18), (14,19), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (11,22), \
(13,18)), List((7,22), (13,17), (11,18)), List((9,22), (16,21), (12,19)), \
List((8,22), (15,17), (10,20)), List((7,17), (12,22), (16,19), (14,21)), \
List((14,17), (9,21), (10,22), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (12,22), \
(14,18)), List((7,17), (11,22), (13,19)), List((7,22), (16,17), (10,20)), \
List((8,22), (15,17), (9,21)), List((11,19), (9,22), (15,21), (13,17)), \
List((10,22), (16,20), (14,17), (12,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (12,22), \
(14,18)), List((7,17), (11,22), (13,19)), List((7,22), (16,17), (10,20)), \
List((8,22), (15,17), (9,21)), List((9,22), (15,21), (13,17), (11,19)), \
List((10,22), (16,20), (14,17), (12,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (12,22), \
(14,18)), List((7,17), (11,22), (13,19)), List((7,22), (16,17), (10,20)), \
List((8,22), (15,17), (9,21)), List((9,22), (15,21), (13,17), (11,19)), \
List((12,18), (10,22), (16,20), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (9,18), (13,21)), \
List((8,18), (11,17), (9,21)), List((7,17), (15,22), (12,20)), List((7,22), \
(10,17), (14,19)), List((11,21), (12,17), (16,20), (13,17)), List((14,22), \
(10,19), (16,17), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (9,18), (13,21)), \
List((8,18), (11,17), (9,21)), List((7,17), (15,22), (12,20)), List((7,22), \
(10,17), (14,19)), List((13,17), (11,21), (12,17), (16,20)), List((14,22), \
(10,19), (16,17), (15,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (9,18), (13,21)), \
List((8,18), (11,17), (9,21)), List((7,22), (12,17), (15,19)), List((7,17), \
(14,22), (10,20)), List((15,22), (12,19), (13,17), (16,21)), List((10,17), \
(14,20), (16,22), (11,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d*v^12, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((8,17), (9,18), (13,21)), List((8,18), (11,17), (9,21)), List((7,22), \
(12,17), (15,19)), List((7,17), (14,22), (10,20)), List((15,22), (12,19), \
(13,17), (16,21)), List((11,21), (10,17), (14,20), \
(16,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (9,20), (14,21)), \
List((11,19), (15,22), (13,21)), List((10,22), (14,17), (15,21)), \
List((11,22), (13,19), (16,21)), List((7,20), (12,18), (16,22), (9,21)), \
List((12,22), (7,18), (8,20), (10,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*
    (1 + v + v^2)*(1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 
     3*v^12 - 4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - 
     v^26 + v^28))/(v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (9,20), (14,21)), \
List((11,19), (15,22), (13,21)), List((10,22), (14,17), (15,21)), \
List((11,22), (13,19), (16,21)), List((7,20), (12,18), (16,22), (9,21)), \
List((7,18), (8,20), (10,17), (12,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (9,22), (13,21)), \
List((9,21), (10,22), (14,19)), List((10,19), (11,22), (14,21)), \
List((11,21), (12,22), (13,17)), List((15,18), (7,20), (8,22), (16,17)), \
List((12,17), (7,22), (15,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,17), (9,22), (13,21)), \
List((9,21), (10,22), (14,19)), List((10,19), (11,22), (14,21)), \
List((11,21), (12,22), (13,17)), List((7,20), (8,22), (16,17), (15,18)), \
List((12,17), (7,22), (15,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,18), (12,22), \
(14,21)), List((7,19), (11,22), (13,20)), List((8,22), (14,18), (10,21)), \
List((7,22), (13,19), (9,20)), List((12,21), (9,22), (15,20), (16,17)), \
List((11,20), (10,22), (16,21), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (11,22), \
(14,21)), List((7,20), (12,22), (13,21)), List((8,22), (16,19), (10,18)), \
List((7,22), (15,20), (9,17)), List((12,21), (10,22), (16,18), (14,19)), \
List((11,21), (9,22), (15,17), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (12,22), \
(13,18)), List((7,22), (9,21), (15,20)), List((9,20), (10,21), (11,17)), \
List((7,21), (8,22), (14,19)), List((12,18), (15,22), (16,20), (13,19)), \
List((10,17), (14,21), (16,19), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (12,22), \
(13,18)), List((7,22), (9,21), (15,20)), List((9,20), (10,21), (11,17)), \
List((7,21), (8,22), (14,19)), List((12,18), (16,22), (14,21), (13,19)), \
List((10,17), (16,21), (15,22), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (12,22), \
(13,18)), List((7,22), (9,21), (15,20)), List((9,20), (10,21), (11,17)), \
List((7,21), (8,22), (14,19)), List((13,19), (12,18), (15,22), (16,20)), \
List((10,17), (14,21), (16,19), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (12,22), \
(13,18)), List((7,22), (9,21), (15,20)), List((9,20), (10,21), (11,17)), \
List((7,21), (8,22), (14,19)), List((13,19), (12,18), (15,22), (16,20)), \
List((11,20), (10,17), (14,21), (16,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (12,22), \
(14,21)), List((7,20), (11,22), (13,17)), List((8,22), (14,19), (10,21)), \
List((7,22), (13,20), (9,17)), List((12,21), (9,22), (15,17), (16,18)), \
List((11,17), (10,22), (16,21), (15,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (14,18), \
(16,21)), List((8,18), (15,19), (13,22)), List((7,20), (10,17), (12,22)), \
List((7,17), (11,20), (9,21)), List((11,21), (12,20), (15,22), (16,19)), \
List((10,22), (9,17), (14,21), (13,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^10*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((8,19), (14,18), (16,21)), List((8,18), (15,19), (13,22)), List((7,20), \
(10,17), (12,22)), List((7,17), (11,20), (9,21)), List((11,21), (12,20), \
(15,22), (16,19)), List((9,17), (14,21), (13,18), \
(10,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (14,18), \
(16,21)), List((8,18), (15,19), (13,22)), List((7,20), (10,17), (12,22)), \
List((7,17), (11,20), (9,21)), List((16,19), (11,21), (12,20), (15,22)), \
List((10,22), (9,17), (14,21), (13,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (14,18), \
(16,21)), List((8,18), (15,19), (13,22)), List((7,20), (10,17), (12,22)), \
List((7,17), (11,20), (9,21)), List((16,19), (11,21), (12,20), (15,22)), \
List((9,17), (14,21), (13,18), (10,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^22*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((8,19), (9,22), (14,21)), List((9,21), (10,22), (15,18)), List((10,18), \
(11,22), (15,21)), List((7,22), (13,17), (12,20)), List((13,20), (7,17), \
(8,22), (16,19)), List((11,21), (12,22), (16,20), \
(14,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,19), (9,22), (14,21)), \
List((9,21), (10,22), (15,18)), List((10,18), (11,22), (15,21)), List((7,22), \
(13,17), (12,20)), List((7,17), (8,22), (16,19), (13,20)), List((11,21), \
(12,22), (16,20), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d/v^12, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((8,20), (10,22), (15,17)), List((9,22), (13,21), (11,18)), List((10,17), \
(12,22), (14,21)), List((11,22), (13,18), (12,21)), List((16,17), (7,19), \
(8,22), (15,20)), List((7,22), (16,19), (14,17), (9,21))),ArrayBuffer((1,0), \
(1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (10,22), \
(15,17)), List((9,22), (13,21), (11,18)), List((10,17), (12,22), (14,21)), \
List((11,22), (13,18), (12,21)), List((16,17), (7,19), (8,22), (15,20)), \
List((9,21), (7,22), (16,19), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(13,17)), List((7,21), (11,22), (14,17)), List((7,22), (16,21), (10,18)), \
List((8,22), (15,20), (9,19)), List((11,17), (9,22), (15,19), (13,20)), \
List((12,17), (10,22), (16,18), (14,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(14,18)), List((7,17), (11,22), (13,19)), List((8,22), (16,20), (9,21)), \
List((7,22), (15,17), (10,21)), List((10,22), (16,21), (14,20), (12,18)), \
List((11,19), (9,22), (15,21), (13,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(14,18)), List((7,17), (11,22), (13,19)), List((8,22), (16,20), (9,21)), \
List((7,22), (15,17), (10,21)), List((10,22), (16,21), (14,20), (12,18)), \
List((9,22), (15,21), (13,17), (11,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(14,18)), List((7,19), (11,22), (13,17)), List((7,22), (16,19), (10,21)), \
List((8,22), (15,20), (9,21)), List((10,22), (15,21), (14,20), (12,18)), \
List((11,17), (9,22), (16,21), (13,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(14,18)), List((7,19), (11,22), (13,17)), List((7,22), (16,19), (10,21)), \
List((8,22), (15,20), (9,21)), List((10,22), (15,21), (14,20), (12,18)), \
List((9,22), (16,21), (13,19), (11,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(14,18)), List((7,21), (11,22), (13,19)), List((7,22), (15,21), (10,17)), \
List((8,22), (16,20), (9,17)), List((9,22), (15,17), (13,21), (11,19)), \
List((10,22), (16,17), (14,20), (12,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(14,18)), List((7,21), (11,22), (13,19)), List((7,22), (15,21), (10,17)), \
List((8,22), (16,20), (9,17)), List((9,22), (15,17), (13,21), (11,19)), \
List((12,18), (10,22), (16,17), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(14,21)), List((7,17), (11,22), (13,21)), List((8,22), (16,20), (9,18)), \
List((7,22), (15,17), (10,19)), List((10,22), (15,19), (13,17), (12,21)), \
List((11,21), (9,22), (16,18), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(14,21)), List((7,17), (11,22), (13,21)), List((8,22), (16,20), (9,18)), \
List((7,22), (15,17), (10,19)), List((10,22), (15,19), (13,17), (12,21)), \
List((9,22), (16,18), (14,20), (11,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (12,22), \
(14,21)), List((7,17), (11,22), (13,21)), List((8,22), (16,20), (9,18)), \
List((7,22), (15,17), (10,19)), List((12,21), (10,22), (15,19), (13,17)), \
List((11,21), (9,22), (16,18), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (16,21), (9,22)), \
List((10,18), (15,17), (12,21)), List((7,17), (9,20), (14,22)), List((11,19), \
(14,17), (13,22)), List((11,17), (13,19), (16,22), (15,21)), List((7,20), \
(10,17), (12,18), (8,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (16,21), (9,22)), \
List((10,18), (15,17), (12,21)), List((7,17), (9,20), (14,22)), List((11,19), \
(14,17), (13,22)), List((11,17), (13,19), (16,22), (15,21)), List((8,21), \
(7,20), (10,17), (12,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (16,21), (9,22)), \
List((10,18), (15,17), (12,21)), List((7,17), (9,20), (14,22)), List((11,19), \
(14,17), (13,22)), List((15,21), (11,17), (13,19), (16,22)), List((7,20), \
(10,17), (12,18), (8,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (16,21), (9,22)), \
List((10,18), (15,17), (12,21)), List((7,17), (9,20), (14,22)), List((11,19), \
(14,17), (13,22)), List((15,21), (11,17), (13,19), (16,22)), List((8,21), \
(7,20), (10,17), (12,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,20), (9,22), (15,21)), \
List((9,21), (10,22), (16,17)), List((10,17), (11,22), (16,21)), \
List((11,21), (12,22), (15,20)), List((13,18), (7,19), (8,22), (14,20)), \
List((12,20), (7,22), (13,19), (14,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (10,17), (9,20)), \
List((9,21), (10,20), (11,17)), List((7,22), (11,21), (13,17)), List((7,21), \
(12,22), (8,17)), List((12,17), (14,22), (16,18), (15,19)), List((13,22), \
(15,17), (16,19), (14,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> d^2, HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((8,21), (10,17), (9,20)), List((9,21), (10,20), (11,17)), List((7,22), \
(11,21), (13,17)), List((7,21), (12,22), (8,17)), List((12,17), (14,22), \
(16,18), (15,19)), List((14,18), (13,22), (15,17), \
(16,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (10,22), \
(15,17)), List((9,22), (14,18), (11,17)), List((10,17), (12,22), (13,19)), \
List((11,22), (13,17), (12,19)), List((16,17), (7,20), (8,22), (15,21)), \
List((7,22), (16,20), (14,17), (9,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (10,22), \
(15,17)), List((9,22), (14,18), (11,17)), List((10,17), (12,22), (13,19)), \
List((11,22), (13,17), (12,19)), List((16,17), (7,20), (8,22), (15,21)), \
List((9,18), (7,22), (16,20), (14,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (10,22), \
(15,17)), List((9,22), (14,18), (11,17)), List((10,17), (12,22), (13,19)), \
List((11,22), (13,17), (12,19)), List((7,20), (8,22), (15,21), (16,17)), \
List((7,22), (16,20), (14,17), (9,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (12,17), \
(14,20)), List((7,19), (11,17), (9,22)), List((7,17), (9,19), (10,22)), \
List((8,17), (15,21), (13,18)), List((13,17), (15,18), (14,21), (16,20)), \
List((12,20), (10,17), (11,22), (16,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (9,20), (16,22)), \
List((10,17), (12,18), (15,21)), List((7,20), (14,17), (9,22)), List((11,17), \
(13,19), (14,22)), List((11,19), (15,17), (16,21), (13,22)), List((7,17), \
(8,20), (12,21), (10,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (9,20), (16,22)), \
List((10,17), (12,18), (15,21)), List((7,20), (14,17), (9,22)), List((11,17), \
(13,19), (14,22)), List((13,22), (11,19), (15,17), (16,21)), List((10,18), \
(7,17), (8,20), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (9,20), (16,22)), \
List((10,17), (12,18), (15,21)), List((7,20), (14,17), (9,22)), List((11,17), \
(13,19), (14,22)), List((13,22), (11,19), (15,17), (16,21)), List((7,17), \
(8,20), (12,21), (10,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (9,22), (13,17)), \
List((9,17), (10,22), (14,19)), List((10,19), (11,22), (14,17)), \
List((11,17), (12,22), (13,21)), List((15,18), (7,20), (8,22), (16,21)), \
List((12,21), (7,22), (15,20), (16,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (9,22), (14,18)), \
List((9,18), (10,22), (14,21)), List((10,21), (11,22), (16,17)), \
List((11,17), (12,22), (13,19)), List((15,17), (7,20), (8,22), (16,21)), \
List((7,22), (15,20), (13,17), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,21), (9,22), (14,18)), \
List((9,18), (10,22), (14,21)), List((10,21), (11,22), (16,17)), \
List((11,17), (12,22), (13,19)), List((7,20), (8,22), (16,21), (15,17)), \
List((7,22), (15,20), (13,17), (12,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (10,17), \
(12,20)), List((7,21), (9,17), (11,19)), List((8,17), (14,22), (9,19)), \
List((7,17), (13,21), (10,20)), List((12,22), (13,20), (15,21), (16,18)), \
List((11,21), (14,19), (16,22), (15,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^10*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((8,22), (10,17), (12,20)), List((7,21), (9,17), (11,19)), List((8,17), \
(14,22), (9,19)), List((7,17), (13,21), (10,20)), List((12,22), (13,20), \
(15,21), (16,18)), List((15,18), (11,21), (14,19), \
(16,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (10,17), \
(12,20)), List((7,21), (9,17), (11,19)), List((8,17), (14,22), (9,19)), \
List((7,17), (13,21), (10,20)), List((16,18), (12,22), (13,20), (15,21)), \
List((11,21), (14,19), (16,22), (15,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (10,17), \
(12,20)), List((7,21), (9,17), (11,19)), List((8,17), (14,22), (9,19)), \
List((7,17), (13,21), (10,20)), List((16,18), (12,22), (13,20), (15,21)), \
List((15,18), (11,21), (14,19), (16,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^22*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((8,22), (10,17), (9,21)), List((7,21), (13,19), (9,22)), List((8,17), \
(14,22), (10,21)), List((7,19), (12,21), (11,20)), List((12,20), (14,21), \
(15,22), (16,18)), List((13,22), (11,19), (16,20), \
(15,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (10,18), (9,21)), \
List((7,21), (13,19), (9,22)), List((8,18), (14,22), (10,21)), List((7,19), \
(12,21), (11,20)), List((12,20), (14,21), (15,22), (16,17)), List((11,19), \
(16,20), (15,17), (13,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), \
(10,18), (9,21)), List((7,21), (13,19), (9,22)), List((8,18), (14,22), \
(10,21)), List((7,19), (12,21), (11,20)), List((12,20), (14,21), (15,22), \
(16,17)), List((13,22), (11,19), (16,20), (15,17))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (10,20), \
(12,19)), List((7,21), (9,20), (11,18)), List((8,20), (14,22), (9,18)), \
List((7,20), (13,21), (10,19)), List((12,22), (13,19), (15,21), (16,17)), \
List((11,21), (14,18), (16,22), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^10*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((8,22), (10,20), (12,19)), List((7,21), (9,20), (11,18)), List((8,20), \
(14,22), (9,18)), List((7,20), (13,21), (10,19)), List((12,22), (13,19), \
(15,21), (16,17)), List((15,17), (11,21), (14,18), \
(16,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (10,20), \
(12,19)), List((7,21), (9,20), (11,18)), List((8,20), (14,22), (9,18)), \
List((7,20), (13,21), (10,19)), List((16,17), (12,22), (13,19), (15,21)), \
List((15,17), (11,21), (14,18), (16,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^22*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(17,Vector(List(), \
List((8,22), (10,21), (9,17)), List((7,19), (8,21), (14,22)), List((9,22), \
(10,17), (13,21)), List((7,21), (12,19), (11,20)), List((16,18), (12,20), \
(14,19), (15,22)), List((13,22), (11,21), (16,20), \
(15,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (10,21), (9,18)), \
List((7,19), (8,21), (14,22)), List((9,22), (10,18), (13,21)), List((7,21), \
(12,19), (11,20)), List((12,20), (14,19), (15,22), (16,17)), List((13,22), \
(11,21), (16,20), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
    (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + 
     d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (10,21), (9,18)), \
List((7,19), (8,21), (14,22)), List((9,22), (10,18), (13,21)), List((7,21), \
(12,19), (11,20)), List((16,17), (12,20), (14,19), (15,22)), List((13,22), \
(11,21), (16,20), (15,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), \
(11,19), (10,17)), List((8,19), (9,22), (15,21)), List((7,20), (9,21), \
(13,22)), List((7,21), (12,20), (14,18)), List((11,17), (15,19), (14,21), \
(16,18)), List((10,22), (16,17), (12,18), (13,20))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (11,19), \
(10,17)), List((8,19), (9,22), (15,21)), List((7,20), (9,21), (13,22)), \
List((7,21), (12,20), (14,18)), List((11,17), (15,19), (14,21), (16,18)), \
List((13,20), (10,22), (16,17), (12,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
      2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
      2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
      d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
      3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
      d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
     (1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (11,19), \
(10,17)), List((8,19), (9,22), (15,21)), List((7,20), (9,21), (13,22)), \
List((7,21), (12,20), (14,18)), List((16,18), (11,17), (15,19), (14,21)), \
List((10,22), (16,17), (12,18), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
      2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
      2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
      d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
      3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
      d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
     (1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (11,19), \
(10,17)), List((8,19), (9,22), (15,21)), List((7,20), (9,21), (13,22)), \
List((7,21), (12,20), (14,18)), List((16,18), (11,17), (15,19), (14,21)), \
List((13,20), (10,22), (16,17), (12,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (12,18), (9,21)), \
List((9,22), (14,21), (10,20)), List((7,17), (11,22), (16,19)), List((10,22), \
(15,20), (11,19)), List((13,21), (16,17), (15,19), (14,20)), List((8,18), \
(7,22), (13,17), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (12,18), (9,21)), \
List((9,22), (14,21), (10,20)), List((7,17), (11,22), (16,19)), List((10,22), \
(15,20), (11,19)), List((14,20), (13,21), (16,17), (15,19)), List((7,22), \
(13,17), (12,21), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (12,18), (9,21)), \
List((9,22), (14,21), (10,20)), List((7,17), (11,22), (16,19)), List((10,22), \
(15,20), (11,19)), List((14,20), (13,21), (16,17), (15,19)), List((8,18), \
(7,22), (13,17), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,17), (9,21)), \
List((9,22), (16,21), (11,19)), List((7,20), (10,22), (14,18)), List((10,18), \
(11,22), (15,19)), List((12,21), (14,20), (15,18), (16,19)), List((8,17), \
(7,22), (12,20), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,17), (9,21)), \
List((9,22), (16,21), (11,19)), List((7,20), (10,22), (14,18)), List((10,18), \
(11,22), (15,19)), List((16,19), (12,21), (14,20), (15,18)), List((7,22), \
(12,20), (13,21), (8,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,17), (9,21)), \
List((9,22), (16,21), (11,19)), List((7,20), (10,22), (14,18)), List((10,18), \
(11,22), (15,19)), List((16,19), (12,21), (14,20), (15,18)), List((8,17), \
(7,22), (12,20), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,18), (9,17)), \
List((9,22), (16,17), (11,20)), List((7,21), (10,22), (14,19)), List((10,19), \
(11,22), (15,20)), List((12,17), (14,21), (15,19), (16,20)), List((7,22), \
(12,21), (13,17), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,18), (9,17)), \
List((9,22), (16,17), (11,20)), List((7,21), (10,22), (14,19)), List((10,19), \
(11,22), (15,20)), List((12,17), (14,21), (15,19), (16,20)), List((8,18), \
(7,22), (12,21), (13,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,18), (9,17)), \
List((9,22), (16,17), (11,20)), List((7,21), (10,22), (14,19)), List((10,19), \
(11,22), (15,20)), List((16,20), (12,17), (14,21), (15,19)), List((7,22), \
(12,21), (13,17), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,18), (9,21)), \
List((9,22), (16,21), (11,17)), List((7,20), (10,22), (14,19)), List((10,19), \
(11,22), (15,17)), List((12,21), (14,20), (15,19), (16,17)), List((8,18), \
(7,22), (12,20), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,18), (9,21)), \
List((9,22), (16,21), (11,17)), List((7,20), (10,22), (14,19)), List((10,19), \
(11,22), (15,17)), List((16,17), (12,21), (14,20), (15,19)), List((7,22), \
(12,20), (13,21), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,18), (9,21)), \
List((9,22), (16,21), (11,19)), List((7,20), (10,22), (14,17)), List((10,17), \
(11,22), (15,19)), List((12,21), (14,20), (15,17), (16,19)), List((7,22), \
(12,20), (13,21), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,18), (9,21)), \
List((9,22), (16,21), (11,19)), List((7,20), (10,22), (14,17)), List((10,17), \
(11,22), (15,19)), List((12,21), (14,20), (15,17), (16,19)), List((8,18), \
(7,22), (12,20), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,18), (9,21)), \
List((9,22), (16,21), (11,19)), List((7,20), (10,22), (14,17)), List((10,17), \
(11,22), (15,19)), List((16,19), (12,21), (14,20), (15,17)), List((7,22), \
(12,20), (13,21), (8,18))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,21), \
(11,20)), List((9,20), (12,22), (14,18)), List((11,22), (14,20), (12,18)), \
List((7,21), (9,22), (13,20)), List((15,17), (8,21), (10,22), (16,19)), \
List((7,22), (15,21), (16,17), (10,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (13,21), \
(11,20)), List((9,20), (12,22), (14,18)), List((11,22), (14,20), (12,18)), \
List((7,21), (9,22), (13,20)), List((8,21), (10,22), (16,19), (15,17)), \
List((7,22), (15,21), (16,17), (10,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (14,19), (9,17)), \
List((9,22), (15,17), (10,20)), List((7,18), (11,22), (13,21)), List((10,22), \
(16,20), (11,21)), List((14,17), (12,19), (16,21), (15,20)), List((8,19), \
(7,22), (13,18), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (14,19), (9,20)), \
List((9,22), (15,20), (10,17)), List((7,18), (11,22), (13,21)), List((10,22), \
(16,17), (11,21)), List((12,19), (16,21), (15,17), (14,20)), List((7,22), \
(13,18), (12,21), (8,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (14,19), (9,20)), \
List((9,22), (15,20), (10,17)), List((7,18), (11,22), (13,21)), List((10,22), \
(16,17), (11,21)), List((12,19), (16,21), (15,17), (14,20)), List((8,19), \
(7,22), (13,18), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (14,19), (9,20)), \
List((9,22), (15,20), (10,17)), List((7,18), (11,22), (13,21)), List((10,22), \
(16,17), (11,21)), List((14,20), (12,19), (16,21), (15,17)), List((8,19), \
(7,22), (13,18), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (14,20), (9,17)), \
List((9,22), (16,17), (10,18)), List((10,22), (16,18), (11,17)), List((7,21), \
(11,22), (15,17)), List((12,19), (15,21), (14,17), (13,20)), List((7,22), \
(12,21), (13,19), (8,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (14,20), (9,17)), \
List((9,22), (16,17), (10,18)), List((10,22), (16,18), (11,17)), List((7,21), \
(11,22), (15,17)), List((12,19), (15,21), (14,17), (13,20)), List((8,20), \
(7,22), (12,21), (13,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), \
(14,20), (9,17)), List((9,22), (16,17), (10,18)), List((10,22), (16,18), \
(11,17)), List((7,21), (11,22), (15,17)), List((13,20), (12,19), (15,21), \
(14,17)), List((8,20), (7,22), (12,21), (13,19))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (14,20), (9,21)), \
List((9,22), (15,21), (10,17)), List((7,17), (11,22), (16,18)), List((10,22), \
(16,17), (11,18)), List((13,20), (12,19), (15,17), (14,21)), List((7,22), \
(12,17), (13,19), (8,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), \
(14,20), (9,21)), List((9,22), (15,21), (10,17)), List((7,17), (11,22), \
(16,18)), List((10,22), (16,17), (11,18)), List((13,20), (12,19), (15,17), \
(14,21)), List((8,20), (7,22), (12,17), (13,19))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (15,17), (9,18)), \
List((10,20), (11,22), (16,17)), List((9,22), (15,18), (11,17)), List((7,21), \
(10,22), (14,20)), List((12,19), (14,21), (16,20), (13,17)), List((8,17), \
(7,22), (12,21), (13,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> 0, HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), \
(15,17), (9,18)), List((10,20), (11,22), (16,17)), List((9,22), (15,18), \
(11,17)), List((7,21), (10,22), (14,20)), List((13,17), (12,19), (14,21), \
(16,20)), List((7,22), (12,21), (13,19), (8,17))),ArrayBuffer((1,0), (1,0), \
(1,0), (1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (15,17), (9,18)), \
List((10,20), (11,22), (16,17)), List((9,22), (15,18), (11,17)), List((7,21), \
(10,22), (14,20)), List((13,17), (12,19), (14,21), (16,20)), List((8,17), \
(7,22), (12,21), (13,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
    (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + 
     d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (16,17), (9,19)), \
List((9,22), (15,19), (10,20)), List((10,22), (14,20), (11,21)), List((7,18), \
(11,22), (13,21)), List((12,17), (14,21), (15,20), (16,19)), List((7,22), \
(13,18), (12,21), (8,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (16,17), (9,19)), \
List((9,22), (15,19), (10,20)), List((10,22), (14,20), (11,21)), List((7,18), \
(11,22), (13,21)), List((12,17), (14,21), (15,20), (16,19)), List((8,17), \
(7,22), (13,18), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (16,17), (9,19)), \
List((9,22), (15,19), (10,20)), List((10,22), (14,20), (11,21)), List((7,18), \
(11,22), (13,21)), List((16,19), (12,17), (14,21), (15,20)), List((8,17), \
(7,22), (13,18), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (16,18), (9,19)), \
List((7,17), (11,22), (12,21)), List((9,22), (15,19), (10,20)), List((10,22), \
(14,20), (11,21)), List((16,19), (13,18), (14,21), (15,20)), List((8,18), \
(7,22), (12,17), (13,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (16,19), (9,20)), \
List((9,22), (15,20), (10,21)), List((10,22), (14,21), (11,17)), List((7,18), \
(11,22), (12,17)), List((13,19), (14,17), (15,21), (16,20)), List((7,22), \
(12,18), (13,17), (8,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (16,19), (9,20)), \
List((9,22), (15,20), (10,21)), List((10,22), (14,21), (11,17)), List((7,18), \
(11,22), (12,17)), List((16,20), (13,19), (14,17), (15,21)), List((7,22), \
(12,18), (13,17), (8,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    ((1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (16,19), (9,20)), \
List((9,22), (15,20), (10,21)), List((10,22), (14,21), (11,17)), List((7,18), \
(11,22), (12,17)), List((16,20), (13,19), (14,17), (15,21)), List((8,19), \
(7,22), (12,18), (13,17))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((11,17), (16,19), (13,21)), List((13,17), (16,21), (14,19)), \
List((12,20), (14,17), (15,19)), List((8,17), (10,22), (11,19)), \
List((10,19), (9,22), (12,17), (15,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((12,21), (16,20), (14,19)), List((13,17), (14,21), (15,19)), \
List((10,22), (12,20), (11,21)), List((8,17), (11,22), (13,21)), \
List((10,20), (9,22), (15,17), (16,19))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((13,17), (14,20), (16,19)), List((11,21), (15,17), (12,19)), \
List((11,17), (12,21), (14,19), (13,20)), List((8,17), (10,22), (15,19)), \
List((9,22), (16,17), (10,19))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((13,19), (16,20), (15,17)), List((12,21), (15,19), (14,17)), \
List((11,21), (10,22), (13,20), (12,19)), List((8,17), (11,22), (14,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((13,21), (16,19), (14,17)), List((12,21), (15,20), (16,17), \
(13,19)), List((10,22), (12,20), (11,21)), List((8,17), (11,22), (14,21)), \
List((9,22), (15,17), (10,20))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((14,17), (15,19), (16,20)), List((13,17), (12,21), (15,20), \
(14,19)), List((10,22), (12,20), (11,21)), List((8,17), (11,22), (13,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (2,0), (1,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((14,17), (16,20), (15,19)), List((12,21), (14,20), (13,17)), \
List((10,22), (12,20), (11,21)), List((8,17), (11,22), (13,21)), \
List((10,20), (9,22), (15,17), (16,19))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((14,19), (15,20), (16,21)), List((11,17), (16,19), (13,21)), \
List((12,20), (13,17), (15,21)), List((8,17), (10,22), (11,19)), \
List((10,19), (9,22), (12,17), (14,20))),ArrayBuffer((2,0), (1,0), (1,0), \
(1,0), (1,0), (2,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((14,21), (16,20), (15,17)), List((12,21), (13,19), (14,20)), \
List((11,21), (10,22), (13,20), (12,19)), List((8,17), (11,22), (15,21)), \
List((9,22), (16,17), (10,20))),ArrayBuffer((2,0), (1,0), (1,0), (2,0), \
(1,0), (1,0)),0)"]] :> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
    (v^6*(1 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (7,17), (7,18), \
(9,17)), List((16,21), (13,19), (14,17), (15,20)), List((10,21), (12,22), \
(16,19)), List((10,22), (15,21), (11,20)), List((8,17), (11,22), (14,20)), \
List((9,22), (13,17), (12,19))),ArrayBuffer((2,0), (2,0), (1,0), (1,0), \
(1,0), (1,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((8,22), (9,17), (11,20)), \
List((9,20), (15,17), (14,19)), List((7,22), (12,21), (8,17)), List((7,21), \
(10,22), (13,18)), List((13,21), (10,18), (11,22), (16,20)), List((12,17), \
(16,21), (14,20), (15,19))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0)),0)"]] :> (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,17), (15,20), \
(14,19)), List((8,17), (11,22), (9,20)), List((7,21), (8,22), (13,17)), \
List((7,22), (12,21), (10,18)), List((13,21), (14,17), (15,19), (16,20)), \
List((11,20), (10,22), (12,18), (16,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,17), (15,20), \
(14,19)), List((8,17), (11,22), (9,20)), List((7,21), (8,22), (13,17)), \
List((7,22), (12,21), (10,18)), List((16,20), (13,21), (14,17), (15,19)), \
List((10,22), (12,18), (16,21), (11,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  (d*v^12*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,17), (15,20), \
(14,19)), List((8,17), (11,22), (9,20)), List((7,21), (8,22), (13,17)), \
List((7,22), (12,21), (10,18)), List((16,20), (13,21), (14,17), (15,19)), \
List((11,20), (10,22), (12,18), (16,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,19), (11,21), \
(10,17)), List((8,22), (9,21), (12,19)), List((7,20), (13,22), (15,18)), \
List((7,22), (14,20), (8,21)), List((11,17), (14,21), (15,20), (16,18)), \
List((10,19), (16,17), (13,18), (12,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,19), (11,21), \
(10,17)), List((8,22), (9,21), (12,19)), List((7,20), (13,22), (15,18)), \
List((7,22), (14,20), (8,21)), List((11,17), (14,21), (15,20), (16,18)), \
List((12,22), (10,19), (16,17), (13,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
      2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
      2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
      d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
      3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
      d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
     (1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,19), (11,21), \
(10,17)), List((8,22), (9,21), (12,19)), List((7,20), (13,22), (15,18)), \
List((7,22), (14,20), (8,21)), List((16,18), (11,17), (14,21), (15,20)), \
List((10,19), (16,17), (13,18), (12,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
      2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
      2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
      d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
      3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
      d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^16*(1 + v^4)*(1 + d*v^2 + v^4)*
     (1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,19), (11,21), \
(10,17)), List((8,22), (9,21), (12,19)), List((7,20), (13,22), (15,18)), \
List((7,22), (14,20), (8,21)), List((16,18), (11,17), (14,21), (15,20)), \
List((12,22), (10,19), (16,17), (13,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,20), (12,22), \
(16,17)), List((10,21), (13,22), (15,19)), List((7,22), (15,21), (13,19)), \
List((11,22), (14,18), (12,17)), List((8,22), (16,20), (14,17), (11,18)), \
List((10,22), (7,21), (9,22), (8,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,20), (12,22), \
(16,17)), List((10,21), (13,22), (15,19)), List((7,22), (15,21), (13,19)), \
List((11,22), (14,18), (12,17)), List((8,22), (16,20), (14,17), (11,18)), \
List((7,21), (9,22), (8,20), (10,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,20), (16,17), \
(11,17)), List((11,20), (14,17), (12,18)), List((9,17), (10,20), (13,19)), \
List((10,19), (12,20), (15,18), (13,17)), List((8,17), (8,21), (16,17)), \
List((7,17), (7,22), (15,17), (14,18))),ArrayBuffer((1,0), (1,0), (1,0), \
(2,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,20), (16,18), \
(13,17)), List((11,19), (14,20), (12,17)), List((9,18), (10,20), (15,17)), \
List((10,17), (11,20), (12,19)), List((7,17), (7,21), (16,17), (15,18)), \
List((8,17), (8,22), (14,17), (13,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,21), (11,22), \
(16,18)), List((10,22), (16,21), (11,18)), List((7,22), (15,17), (12,19)), \
List((8,17), (13,22), (14,20)), List((12,22), (15,19), (14,17), (13,20)), \
List((7,17), (9,22), (10,21), (8,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,21), (11,22), \
(16,18)), List((10,22), (16,21), (11,18)), List((7,22), (15,17), (12,19)), \
List((8,17), (13,22), (14,20)), List((12,22), (15,19), (14,17), (13,20)), \
List((8,22), (7,17), (9,22), (10,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,21), (12,22), \
(13,18)), List((11,22), (13,21), (12,18)), List((7,17), (8,22), (15,19)), \
List((10,22), (16,20), (11,21)), List((8,19), (9,22), (16,21), (14,20)), \
List((10,20), (7,22), (15,17), (14,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,21), (13,19), \
(12,18)), List((7,22), (14,21), (8,20)), List((7,21), (15,22), (9,19)), \
List((8,22), (11,20), (10,17)), List((12,21), (13,18), (15,19), (16,22)), \
List((10,22), (11,17), (14,20), (16,21))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,21), (13,19), \
(12,18)), List((7,22), (14,21), (8,20)), List((7,21), (15,22), (9,19)), \
List((8,22), (11,20), (10,17)), List((14,20), (12,21), (13,18), (16,19)), \
List((15,19), (10,22), (11,17), (16,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   (v^12*(1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,21), (13,19), \
(12,18)), List((7,22), (14,21), (8,20)), List((7,21), (15,22), (9,19)), \
List((8,22), (11,20), (10,17)), List((16,22), (12,21), (13,18), (15,19)), \
List((16,21), (10,22), (11,17), (14,20))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,22), (12,17), \
(14,19)), List((9,17), (13,22), (10,19)), List((10,17), (11,19), (16,18)), \
List((11,18), (12,19), (15,17)), List((8,17), (8,20), (16,17), (15,18)), \
List((7,22), (7,21), (14,22), (13,19))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(17,Vector(List(), List((9,22), (16,19), \
(10,18)), List((8,22), (15,17), (12,20)), List((7,17), (11,22), (14,21)), \
List((7,22), (8,17), (13,22)), List((14,17), (11,21), (12,22), (15,20)), \
List((16,18), (9,19), (13,22), (10,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((10,18), (11,24), \
(15,23)), List((9,24), (14,19), (11,23)), List((12,23), (13,22), (17,21), \
(15,18)), List((13,21), (7,22), (8,24), (16,20)), List((16,21), (8,20), \
(10,24), (17,18)), List((9,19), (7,24), (12,22), (14,23))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((10,22), (11,24), \
(17,23)), List((8,18), (10,24), (16,22)), List((15,23), (14,20), (16,18), \
(17,22)), List((12,19), (7,21), (8,24), (13,18)), List((7,24), (12,21), \
(13,19), (9,18)), List((11,23), (9,24), (14,18), (15,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28)*
    (1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^38*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((10,24), (14,23), \
(11,21)), List((7,24), (15,22), (10,23)), List((12,18), (14,21), (15,23), \
(13,22)), List((7,22), (8,24), (17,19), (13,18)), List((16,18), (9,20), \
(11,24), (12,21)), List((17,18), (8,19), (9,24), (16,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((10,24), (14,23), \
(11,21)), List((7,24), (15,22), (10,23)), List((13,22), (12,18), (14,21), \
(15,23)), List((7,22), (8,24), (17,19), (13,18)), List((16,18), (9,20), \
(11,24), (12,21)), List((17,18), (8,19), (9,24), (16,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((10,24), (17,23), \
(11,22)), List((9,24), (16,18), (10,23)), List((14,18), (15,20), (17,22), \
(16,23)), List((7,21), (8,24), (13,18), (12,19)), List((9,18), (7,24), \
(12,21), (13,19)), List((14,20), (8,18), (11,24), \
(15,22))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,18), (13,21), \
(14,22)), List((11,21), (12,18), (15,23)), List((16,18), (8,20), (9,24), \
(17,19)), List((14,18), (7,22), (8,24), (16,20)), List((9,19), (10,24), \
(12,23), (17,18)), List((10,23), (7,24), (13,22), \
(15,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,18), (13,21), \
(14,22)), List((11,21), (12,18), (15,23)), List((16,18), (8,20), (9,24), \
(17,19)), List((14,18), (7,22), (8,24), (16,20)), List((9,19), (10,24), \
(12,23), (17,18)), List((7,24), (13,22), (15,21), \
(10,23))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,18), (14,20), \
(17,21)), List((7,24), (11,20), (8,18)), List((13,21), (12,23), (16,22), \
(17,18)), List((8,24), (16,18), (15,22), (10,19)), List((12,22), (9,23), \
(10,24), (15,19)), List((7,20), (9,24), (13,23), (14,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,18), (15,22), \
(14,19)), List((7,24), (11,22), (8,18)), List((17,18), (12,21), (13,23), \
(16,20)), List((8,24), (16,18), (13,20), (9,23)), List((9,24), (12,23), \
(17,21), (10,18)), List((7,22), (10,24), (14,18), \
(15,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d*v^18), HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,18), \
(16,24), (13,22)), List((8,21), (15,23), (9,22)), List((11,24), (10,18), \
(14,20), (17,23)), List((14,23), (10,20), (13,18), (15,22)), List((12,24), \
(7,19), (9,21), (16,22)), List((8,23), (7,21), (12,19), \
(17,24))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,18), (16,24), \
(13,22)), List((8,21), (15,23), (9,22)), List((11,24), (10,18), (14,20), \
(17,23)), List((14,23), (10,20), (13,18), (15,22)), List((7,19), (9,21), \
(16,22), (12,24)), List((8,23), (7,21), (12,19), (17,24))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,18), (17,20), \
(16,23)), List((10,21), (15,18), (12,24)), List((14,23), (13,19), (15,24), \
(16,18)), List((8,22), (13,24), (14,19), (9,23)), List((7,18), (9,22), \
(17,23), (11,20)), List((8,24), (7,22), (10,18), (12,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,18), (17,20), \
(16,23)), List((10,21), (15,18), (12,24)), List((14,23), (13,19), (15,24), \
(16,18)), List((9,23), (8,22), (13,24), (14,19)), List((7,18), (9,22), \
(17,23), (11,20)), List((7,22), (10,18), (12,21), (8,24))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,19), (16,24), \
(13,22)), List((8,21), (15,23), (9,22)), List((11,24), (13,19), (15,22), \
(17,23)), List((14,23), (10,20), (12,18), (17,24)), List((12,24), (7,18), \
(9,21), (16,22)), List((8,23), (7,21), (10,18), (14,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,20), (14,18), \
(15,22)), List((7,24), (11,18), (8,20)), List((12,21), (13,23), (14,22), \
(16,18)), List((8,24), (15,20), (13,22), (9,23)), List((10,19), (9,24), \
(12,23), (17,21)), List((7,18), (10,24), (17,19), \
(16,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,22), (15,18), \
(12,19)), List((7,24), (11,18), (8,22)), List((16,23), (13,21), (17,18), \
(14,20)), List((8,24), (12,22), (15,19), (9,18)), List((7,18), (10,24), \
(14,23), (17,20)), List((10,23), (9,24), (13,18), \
(16,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 2*v^16 - 
     3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 4*v^26 + 
     2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - d^2*v^30 + 
     v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 2*d^2*v^36 + 3*v^38 - 
     6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 2*d^2*v^40 + v^42 + 2*d*v^42 - 
     v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 6*v^48 + 3*d*v^48 - d^2*v^48 + 
     4*d*v^50 - d^2*v^50 - 4*v^52 + 3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 
     4*v^58 - 2*d*v^58 + 4*v^60 - d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - 
     d*v^72 - 2*v^74))/(v^38*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,24), (13,18), \
(16,23)), List((8,21), (15,23), (9,22)), List((14,22), (10,19), (11,18), \
(17,24)), List((10,18), (14,19), (15,22), (13,23)), List((12,24), (7,20), \
(9,21), (17,22)), List((7,21), (12,20), (16,24), (8,23))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)^2*(1 + v)^2*(1 + v^2)^4*(1 - v + v^2)^2*(1 + v + v^2)^2*
    (1 - v^2 + v^4)^2*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28)^
     2)/(v^32*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,24), (13,18), \
(16,23)), List((8,21), (15,23), (9,22)), List((14,22), (10,19), (11,18), \
(17,24)), List((13,23), (10,18), (14,19), (15,22)), List((12,24), (7,20), \
(9,21), (17,22)), List((7,21), (12,20), (16,24), (8,23))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((11,24), (13,19), \
(16,23)), List((8,21), (15,23), (9,22)), List((11,19), (17,24), (15,22), \
(13,23)), List((12,24), (10,18), (14,20), (17,22)), List((7,18), (9,21), \
(14,22), (10,20)), List((7,21), (12,18), (16,24), (8,23))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,18), (13,23), \
(14,22)), List((7,24), (11,21), (8,20)), List((11,20), (16,21), (14,18), \
(17,22)), List((8,24), (17,20), (13,22), (9,23)), List((10,19), (9,24), \
(12,23), (15,18)), List((16,18), (7,21), (10,24), \
(15,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  d/v^12, HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,18), \
(13,23), (14,22)), List((7,24), (11,21), (8,20)), List((11,20), (16,21), \
(14,18), (17,22)), List((8,24), (17,20), (13,22), (9,23)), List((9,24), \
(12,23), (15,18), (10,19)), List((7,21), (10,24), (15,19), \
(16,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  d/v^12, HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,18), \
(13,23), (15,20)), List((7,24), (11,22), (8,21)), List((11,21), (17,22), \
(14,18), (16,19)), List((8,24), (16,21), (14,19), (10,18)), List((9,23), \
(10,24), (15,18), (13,20)), List((7,22), (9,24), (12,23), \
(17,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,19), (13,24), \
(17,23)), List((14,23), (15,21), (16,18)), List((16,23), (8,18), (12,24), \
(17,19)), List((7,24), (9,22), (14,21), (13,23)), List((15,18), (9,21), \
(10,22), (11,20)), List((10,20), (7,22), (8,24), (11,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,19), (13,24), \
(17,23)), List((14,23), (15,21), (16,18)), List((16,23), (8,18), (12,24), \
(17,19)), List((7,24), (9,22), (14,21), (13,23)), List((15,18), (9,21), \
(10,22), (11,20)), List((7,22), (8,24), (11,18), (10,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,20), (13,21), \
(15,23)), List((7,24), (11,18), (8,19)), List((12,21), (14,20), (16,22), \
(17,18)), List((8,24), (11,19), (16,18), (10,22)), List((15,20), (9,23), \
(10,24), (14,22)), List((7,18), (9,24), (13,23), (17,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d^2*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,20), (13,21), \
(15,23)), List((7,24), (11,18), (8,19)), List((17,18), (12,21), (14,20), \
(16,22)), List((8,24), (11,19), (16,18), (10,22)), List((9,23), (10,24), \
(14,22), (15,20)), List((7,18), (9,24), (13,23), (17,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^16*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,20), (13,23), \
(16,18)), List((7,24), (11,22), (8,21)), List((17,18), (11,21), (15,22), \
(14,19)), List((8,24), (17,21), (13,18), (9,23)), List((9,24), (12,23), \
(16,20), (10,18)), List((7,22), (10,24), (14,18), \
(15,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,21), (13,20), \
(16,23)), List((7,24), (11,19), (8,18)), List((12,20), (15,21), (14,18), \
(17,22)), List((8,24), (15,18), (16,21), (9,23)), List((10,22), (9,24), \
(13,23), (17,20)), List((11,18), (7,19), (10,24), \
(14,22))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -(d^2*v^6), HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,21), \
(13,20), (16,23)), List((7,24), (11,19), (8,18)), List((12,20), (15,21), \
(14,18), (17,22)), List((8,24), (15,18), (16,21), (9,23)), List((9,24), \
(13,23), (17,20), (10,22)), List((7,19), (10,24), (14,22), \
(11,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^28*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,22), (13,24), \
(14,23)), List((15,18), (17,23), (16,21)), List((8,24), (11,19), (17,21), \
(13,23)), List((10,18), (9,20), (14,22), (15,23)), List((10,20), (7,18), \
(12,24), (9,22)), List((8,19), (7,24), (16,18), (11,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,22), (13,24), \
(14,23)), List((15,18), (17,23), (16,21)), List((8,24), (11,19), (17,21), \
(13,23)), List((9,20), (14,22), (15,23), (10,18)), List((10,20), (7,18), \
(12,24), (9,22)), List((8,19), (7,24), (16,18), (11,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,22), (13,24), \
(14,23)), List((15,18), (17,23), (16,21)), List((8,24), (11,19), (17,21), \
(13,23)), List((9,20), (14,22), (15,23), (10,18)), List((7,18), (12,24), \
(9,22), (10,20)), List((7,24), (16,18), (11,21), (8,19))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,23), (13,24), \
(16,21)), List((14,18), (15,22), (17,23)), List((8,19), (12,24), (15,23), \
(9,22)), List((10,21), (11,20), (17,18), (16,23)), List((13,21), (7,24), \
(11,18), (10,20)), List((14,22), (7,18), (8,24), (9,19))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,23), (13,24), \
(16,21)), List((14,18), (15,22), (17,23)), List((9,22), (8,19), (12,24), \
(15,23)), List((10,21), (11,20), (17,18), (16,23)), List((13,21), (7,24), \
(11,18), (10,20)), List((14,22), (7,18), (8,24), (9,19))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)^2*(1 + v)^2*(1 + v^2)^4*(1 - v + v^2)^2*(1 + v + v^2)^2*
    (1 - v^2 + v^4)^2*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28)^
     2)/(v^32*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,23), (13,24), \
(17,19)), List((14,21), (15,23), (16,18)), List((13,19), (8,24), (15,18), \
(17,23)), List((9,21), (7,22), (12,24), (14,23)), List((9,22), (16,21), \
(10,18), (11,20)), List((7,24), (11,22), (10,20), (8,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((12,23), (16,18), \
(13,22)), List((7,24), (11,21), (8,20)), List((11,20), (14,21), (16,22), \
(17,18)), List((8,24), (17,20), (15,18), (10,19)), List((12,18), (9,23), \
(10,24), (15,19)), List((7,21), (9,24), (13,23), (14,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,18), (14,23), \
(15,22)), List((7,24), (12,19), (8,18)), List((8,24), (15,18), (17,22), \
(10,21)), List((14,22), (9,23), (10,24), (17,21)), List((11,20), (9,24), \
(13,23), (16,18)), List((12,18), (7,19), (11,24), \
(16,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,18), (14,23), \
(17,22)), List((7,24), (12,19), (8,23)), List((8,24), (13,23), (15,18), \
(9,20)), List((17,18), (10,22), (11,24), (16,21)), List((7,19), (10,24), \
(14,22), (12,23)), List((9,24), (15,20), (16,18), \
(11,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
     2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
     d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
     4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
     3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
     3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
     2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
     2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
   (v^32*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,18), (14,23), \
(17,22)), List((7,24), (12,19), (8,23)), List((9,20), (8,24), (13,23), \
(15,18)), List((17,18), (10,22), (11,24), (16,21)), List((7,19), (10,24), \
(14,22), (12,23)), List((9,24), (15,20), (16,18), \
(11,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  d/v^12, HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,18), \
(15,22), (14,23)), List((8,21), (15,23), (9,22)), List((12,24), (10,20), \
(14,18), (17,23)), List((10,18), (12,20), (16,24), (13,22)), List((11,24), \
(7,19), (9,21), (16,22)), List((8,23), (7,21), (11,19), \
(17,24))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,18), (15,22), \
(14,23)), List((8,21), (15,23), (9,22)), List((12,24), (10,20), (14,18), \
(17,23)), List((10,18), (12,20), (16,24), (13,22)), List((7,19), (9,21), \
(16,22), (11,24)), List((8,23), (7,21), (11,19), (17,24))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)^2*(1 + v)^2*(1 + v^2)^4*(1 - v + v^2)^2*(1 + v + v^2)^2*
     (1 - v^2 + v^4)^2*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
       4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
       v^28)^2)/(v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,18), (15,22), \
(14,23)), List((8,21), (15,23), (9,22)), List((12,24), (10,20), (14,18), \
(17,23)), List((13,22), (10,18), (12,20), (16,24)), List((11,24), (7,19), \
(9,21), (16,22)), List((8,23), (7,21), (11,19), (17,24))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,18), (16,19), \
(14,22)), List((12,18), (17,20), (15,21)), List((9,22), (7,24), (12,20), \
(14,18)), List((10,21), (8,23), (13,19), (15,18)), List((8,19), (11,23), \
(9,24), (16,22)), List((7,20), (11,24), (10,23), (17,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,18), (16,22), \
(17,23)), List((7,24), (12,23), (8,19)), List((8,24), (12,19), (16,23), \
(9,22)), List((17,18), (7,23), (10,24), (14,20)), List((11,21), (9,24), \
(13,22), (15,18)), List((14,18), (10,20), (11,24), \
(15,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,22), (14,23), \
(15,18)), List((7,24), (12,18), (8,19)), List((8,24), (12,19), (17,18), \
(10,21)), List((14,18), (9,23), (10,24), (17,21)), List((11,20), (9,24), \
(13,23), (16,22)), List((15,22), (7,18), (11,24), \
(16,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,22), (15,19), \
(17,23)), List((14,23), (16,18), (17,22)), List((13,19), (9,22), (10,24), \
(15,23)), List((8,21), (9,24), (16,22), (12,18)), List((10,23), (7,24), \
(11,20), (14,18)), List((11,18), (7,20), (8,24), (12,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,22), (15,19), \
(17,23)), List((14,23), (16,18), (17,22)), List((13,19), (9,22), (10,24), \
(15,23)), List((8,21), (9,24), (16,22), (12,18)), List((7,24), (11,20), \
(14,18), (10,23)), List((11,18), (7,20), (8,24), (12,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,22), (15,19), \
(17,23)), List((14,23), (16,18), (17,22)), List((9,22), (10,24), (15,23), \
(13,19)), List((8,21), (9,24), (16,22), (12,18)), List((7,24), (11,20), \
(14,18), (10,23)), List((11,18), (7,20), (8,24), (12,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,23), (14,22), \
(16,18)), List((7,24), (12,21), (8,19)), List((8,24), (12,19), (15,21), \
(10,23)), List((11,20), (10,24), (16,23), (17,18)), List((14,18), (9,22), \
(11,24), (17,20)), List((7,21), (9,24), (13,22), (15,23))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,18), \
(14,23)), List((15,18), (16,19), (17,23)), List((9,18), (10,20), (16,23), \
(15,19)), List((9,20), (7,18), (14,24), (10,23)), List((8,22), (7,24), \
(11,18), (12,21)), List((13,18), (8,24), (12,22), \
(11,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,18), \
(14,23)), List((15,20), (17,23), (16,18)), List((10,21), (15,23), (12,20), \
(11,22)), List((9,21), (7,19), (14,24), (10,23)), List((8,24), (12,22), \
(16,20), (13,18)), List((8,22), (7,24), (9,19), (11,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,18), \
(14,23)), List((15,20), (17,23), (16,18)), List((11,22), (10,21), (15,23), \
(12,20)), List((9,21), (7,19), (14,24), (10,23)), List((13,18), (8,24), \
(12,22), (16,20)), List((7,24), (9,19), (11,21), (8,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-2 - d*v^2 - 3*v^4 - v^6 - v^8 + 2*v^10 + 2*v^12 + d*v^12 + 4*v^14 + 
      5*v^16 - 2*d*v^16 + 2*v^18 - 2*d*v^18 + 2*v^20 - 3*v^22 - d*v^22 + 
      d^2*v^22 - v^24 - 8*v^26 + 3*d*v^26 - d^2*v^26 - 2*v^28 + 4*d*v^28 - 
      d^2*v^28 - 3*v^30 + 4*d*v^30 + 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      4*v^36 - 3*d*v^36 + 4*v^38 - 4*d*v^38 + d^2*v^38 + 2*v^40 - 4*d*v^40 + 
      d^2*v^40 + 4*v^42 - 2*d*v^42 - 4*d*v^44 + d^2*v^44 + d*v^46 - 3*v^48 + 
      2*d*v^48 - v^50 + 2*d*v^50 - 3*v^52 + 2*d*v^52 - 2*v^54 + 2*d*v^54 + 
      d*v^56 + v^60 + v^62 + 2*v^64 + v^68))/(v^22*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,19), \
(14,23)), List((15,20), (17,23), (16,19)), List((11,22), (10,21), (15,23), \
(12,20)), List((9,21), (7,18), (14,24), (10,23)), List((13,19), (8,24), \
(12,22), (16,20)), List((7,24), (9,18), (11,21), (8,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-2 - d*v^2 - 3*v^4 - v^6 - v^8 + 2*v^10 + 2*v^12 + d*v^12 + 4*v^14 + 
      5*v^16 - 2*d*v^16 + 2*v^18 - 2*d*v^18 + 2*v^20 - 3*v^22 - d*v^22 + 
      d^2*v^22 - v^24 - 8*v^26 + 3*d*v^26 - d^2*v^26 - 2*v^28 + 4*d*v^28 - 
      d^2*v^28 - 3*v^30 + 4*d*v^30 + 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      4*v^36 - 3*d*v^36 + 4*v^38 - 4*d*v^38 + d^2*v^38 + 2*v^40 - 4*d*v^40 + 
      d^2*v^40 + 4*v^42 - 2*d*v^42 - 4*d*v^44 + d^2*v^44 + d*v^46 - 3*v^48 + 
      2*d*v^48 - v^50 + 2*d*v^50 - 3*v^52 + 2*d*v^52 - 2*v^54 + 2*d*v^54 + 
      d*v^56 + v^60 + v^62 + 2*v^64 + v^68))/(v^22*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,19), \
(14,23)), List((15,20), (17,23), (16,19)), List((11,22), (10,21), (15,23), \
(12,20)), List((9,21), (7,18), (14,24), (10,23)), List((8,24), (12,22), \
(16,20), (13,19)), List((7,24), (9,18), (11,21), (8,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,20), \
(14,23)), List((15,18), (17,23), (16,20)), List((10,21), (15,23), (12,18), \
(11,22)), List((9,21), (7,19), (14,24), (10,23)), List((13,20), (8,24), \
(12,22), (16,18)), List((7,24), (9,19), (11,21), (8,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,20), \
(14,23)), List((15,18), (17,23), (16,20)), List((10,21), (15,23), (12,18), \
(11,22)), List((9,21), (7,19), (14,24), (10,23)), List((8,24), (12,22), \
(16,18), (13,20)), List((8,22), (7,24), (9,19), (11,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,20), \
(14,23)), List((15,18), (17,23), (16,20)), List((11,22), (10,21), (15,23), \
(12,18)), List((9,21), (7,19), (14,24), (10,23)), List((13,20), (8,24), \
(12,22), (16,18)), List((7,24), (9,19), (11,21), (8,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-2 - d*v^2 - 3*v^4 - v^6 - v^8 + 2*v^10 + 2*v^12 + d*v^12 + 4*v^14 + 
      5*v^16 - 2*d*v^16 + 2*v^18 - 2*d*v^18 + 2*v^20 - 3*v^22 - d*v^22 + 
      d^2*v^22 - v^24 - 8*v^26 + 3*d*v^26 - d^2*v^26 - 2*v^28 + 4*d*v^28 - 
      d^2*v^28 - 3*v^30 + 4*d*v^30 + 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      4*v^36 - 3*d*v^36 + 4*v^38 - 4*d*v^38 + d^2*v^38 + 2*v^40 - 4*d*v^40 + 
      d^2*v^40 + 4*v^42 - 2*d*v^42 - 4*d*v^44 + d^2*v^44 + d*v^46 - 3*v^48 + 
      2*d*v^48 - v^50 + 2*d*v^50 - 3*v^52 + 2*d*v^52 - 2*v^54 + 2*d*v^54 + 
      d*v^56 + v^60 + v^62 + 2*v^64 + v^68))/(v^22*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,20), \
(14,23)), List((15,18), (17,23), (16,20)), List((11,22), (10,21), (15,23), \
(12,18)), List((9,21), (7,19), (14,24), (10,23)), List((8,24), (12,22), \
(16,18), (13,20)), List((8,22), (7,24), (9,19), (11,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,20), \
(14,23)), List((15,21), (17,23), (16,20)), List((10,21), (9,22), (12,18), \
(15,23)), List((11,18), (8,19), (14,24), (12,23)), List((9,18), (7,22), \
(8,24), (11,19)), List((13,20), (7,24), (10,22), (16,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,20), \
(14,23)), List((15,21), (17,23), (16,20)), List((9,22), (12,18), (15,23), \
(10,21)), List((11,18), (8,19), (14,24), (12,23)), List((9,18), (7,22), \
(8,24), (11,19)), List((13,20), (7,24), (10,22), (16,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-2 - d*v^2 - 3*v^4 - v^6 - v^8 + 2*v^10 + 2*v^12 + d*v^12 + 4*v^14 + 
      5*v^16 - 2*d*v^16 + 2*v^18 - 2*d*v^18 + 2*v^20 - 3*v^22 - d*v^22 + 
      d^2*v^22 - v^24 - 8*v^26 + 3*d*v^26 - d^2*v^26 - 2*v^28 + 4*d*v^28 - 
      d^2*v^28 - 3*v^30 + 4*d*v^30 + 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      4*v^36 - 3*d*v^36 + 4*v^38 - 4*d*v^38 + d^2*v^38 + 2*v^40 - 4*d*v^40 + 
      d^2*v^40 + 4*v^42 - 2*d*v^42 - 4*d*v^44 + d^2*v^44 + d*v^46 - 3*v^48 + 
      2*d*v^48 - v^50 + 2*d*v^50 - 3*v^52 + 2*d*v^52 - 2*v^54 + 2*d*v^54 + 
      d*v^56 + v^60 + v^62 + 2*v^64 + v^68))/(v^22*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,20), \
(14,23)), List((15,21), (17,23), (16,20)), List((9,22), (12,18), (15,23), \
(10,21)), List((11,18), (8,19), (14,24), (12,23)), List((9,18), (7,22), \
(8,24), (11,19)), List((7,24), (10,22), (16,21), (13,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,21), \
(14,23)), List((15,18), (17,23), (16,21)), List((11,18), (9,22), (10,19), \
(15,23)), List((9,19), (7,22), (14,24), (10,23)), List((8,24), (12,20), \
(16,18), (13,21)), List((8,20), (7,24), (11,22), (12,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,21), \
(14,23)), List((15,18), (17,23), (16,21)), List((9,22), (10,19), (15,23), \
(11,18)), List((9,19), (7,22), (14,24), (10,23)), List((8,24), (12,20), \
(16,18), (13,21)), List((7,24), (11,22), (12,18), (8,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,21), \
(14,23)), List((15,18), (17,23), (16,21)), List((9,22), (10,19), (15,23), \
(11,18)), List((9,19), (7,22), (14,24), (10,23)), List((8,24), (12,20), \
(16,18), (13,21)), List((8,20), (7,24), (11,22), (12,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,18)), List((15,19), (17,18), (16,23)), List((11,23), (12,22), (15,18), \
(16,19)), List((9,21), (7,20), (14,24), (10,18)), List((7,24), (9,20), \
(10,21), (8,18)), List((13,23), (8,24), (12,18), (11,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,18)), List((15,20), (17,18), (16,23)), List((10,22), (9,21), (16,20), \
(11,23)), List((7,21), (14,24), (15,18), (9,20)), List((7,24), (10,21), \
(12,22), (8,19)), List((13,23), (8,24), (12,19), (11,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,18)), List((15,20), (17,18), (16,23)), List((10,22), (9,21), (16,20), \
(11,23)), List((9,20), (7,21), (14,24), (15,18)), List((8,19), (7,24), \
(10,21), (12,22)), List((13,23), (8,24), (12,19), \
(11,22))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,18)), List((15,20), (17,18), (16,23)), List((9,21), (16,20), (11,23), \
(10,22)), List((9,20), (7,21), (14,24), (15,18)), List((7,24), (10,21), \
(12,22), (8,19)), List((13,23), (8,24), (12,19), (11,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,19)), List((15,20), (17,19), (16,23)), List((10,22), (9,21), (16,20), \
(11,23)), List((7,21), (14,24), (15,19), (9,20)), List((7,24), (10,21), \
(12,22), (8,18)), List((13,23), (8,24), (12,18), (11,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,20)), List((15,18), (17,20), (16,23)), List((10,22), (9,21), (16,18), \
(11,23)), List((9,18), (7,21), (14,24), (15,20)), List((8,19), (7,24), \
(10,21), (12,22)), List((13,23), (8,24), (12,19), \
(11,22))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,20)), List((15,18), (17,20), (16,23)), List((9,21), (16,18), (11,23), \
(10,22)), List((9,18), (7,21), (14,24), (15,20)), List((7,24), (10,21), \
(12,22), (8,19)), List((13,23), (8,24), (12,19), (11,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,20)), List((15,21), (17,20), (16,23)), List((10,22), (12,18), (16,21), \
(11,23)), List((12,21), (7,18), (14,24), (15,20)), List((13,23), (8,24), \
(9,19), (11,22)), List((8,19), (7,24), (10,18), (9,22))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,20)), List((15,21), (17,20), (16,23)), List((9,18), (10,22), (16,21), \
(11,23)), List((10,21), (7,22), (14,24), (15,20)), List((8,19), (7,24), \
(9,22), (12,18)), List((13,23), (8,24), (12,19), (11,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,20)), List((15,21), (17,20), (16,23)), List((9,18), (10,22), (16,21), \
(11,23)), List((10,21), (7,22), (14,24), (15,20)), List((8,19), (7,24), \
(9,22), (12,18)), List((8,24), (12,19), (11,18), (13,23))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,20)), List((15,21), (17,20), (16,23)), List((9,18), (10,22), (16,21), \
(11,23)), List((7,22), (14,24), (15,20), (10,21)), List((7,24), (9,22), \
(12,18), (8,19)), List((13,23), (8,24), (12,19), (11,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,21)), List((15,18), (17,21), (16,23)), List((10,23), (11,20), (12,22), \
(16,18)), List((9,18), (7,19), (14,24), (15,21)), List((7,24), (9,19), \
(12,18), (8,22)), List((8,24), (11,22), (10,20), (13,23))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,21)), List((15,18), (17,21), (16,23)), List((16,18), (10,23), (11,20), \
(12,22)), List((9,18), (7,19), (14,24), (15,21)), List((7,24), (9,19), \
(12,18), (8,22)), List((13,23), (8,24), (11,22), (10,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,21)), List((15,18), (17,21), (16,23)), List((16,18), (10,23), (11,20), \
(12,22)), List((9,18), (7,19), (14,24), (15,21)), List((8,22), (7,24), \
(9,19), (12,18)), List((13,23), (8,24), (11,22), (10,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,22)), List((15,19), (17,22), (16,23)), List((10,18), (15,22), (16,19), \
(11,23)), List((9,18), (7,20), (14,24), (10,22)), List((7,24), (9,20), \
(12,18), (8,21)), List((13,23), (8,24), (12,21), (11,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d/v^12, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((13,24), (17,23), \
(14,22)), List((15,19), (17,22), (16,23)), List((11,23), (10,18), (15,22), \
(16,19)), List((9,18), (7,20), (14,24), (10,22)), List((7,24), (9,20), \
(12,18), (8,21)), List((13,23), (8,24), (12,21), (11,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,18), (16,20), \
(15,22)), List((7,24), (11,19), (8,18)), List((12,18), (13,23), (16,22), \
(14,20)), List((8,24), (15,18), (13,22), (9,23)), List((11,18), (7,19), \
(10,24), (17,21)), List((10,21), (9,24), (12,23), \
(17,18))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,18), (16,20), \
(15,22)), List((7,24), (11,19), (8,18)), List((14,20), (12,18), (13,23), \
(16,22)), List((8,24), (15,18), (13,22), (9,23)), List((11,18), (7,19), \
(10,24), (17,21)), List((9,24), (12,23), (17,18), \
(10,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,18), (16,24), \
(17,19)), List((15,24), (17,18), (16,19)), List((12,23), (10,21), (11,18), \
(13,20)), List((8,23), (9,22), (10,18), (12,21)), List((15,18), (7,24), \
(13,23), (11,20)), List((8,22), (7,23), (14,24), (9,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,18), (17,22), \
(16,20)), List((7,24), (11,18), (8,19)), List((12,23), (16,18), (17,20), \
(13,22)), List((8,24), (11,19), (15,18), (10,21)), List((12,18), (9,23), \
(10,24), (15,21)), List((14,22), (7,18), (9,24), (13,23))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,18), (17,22), \
(16,20)), List((7,24), (11,18), (8,19)), List((13,22), (12,23), (16,18), \
(17,20)), List((8,24), (11,19), (15,18), (10,21)), List((9,23), (10,24), \
(15,21), (12,18)), List((14,22), (7,18), (9,24), (13,23))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,20), (16,23), \
(15,22)), List((7,24), (12,18), (8,19)), List((8,24), (12,19), (13,18), \
(9,21)), List((7,18), (10,24), (16,22), (17,23)), List((9,24), (13,21), \
(17,18), (11,23)), List((10,22), (11,24), (14,23), \
(15,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  d*v^12, HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), \
(15,18), (17,22)), List((7,24), (12,19), (8,21)), List((8,24), (16,21), \
(17,23), (11,22)), List((13,18), (9,20), (11,24), (15,22)), List((9,24), \
(13,20), (14,18), (10,23)), List((7,19), (10,24), (16,23), \
(12,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (15,21), \
(17,22)), List((13,22), (16,20), (17,23)), List((13,20), (8,22), (9,24), \
(11,18)), List((14,21), (7,23), (10,24), (12,19)), List((10,19), (8,24), \
(15,22), (12,21)), List((9,18), (7,24), (16,23), (11,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (15,22), \
(17,18)), List((13,18), (16,21), (17,23)), List((14,22), (8,23), (10,24), \
(11,20)), List((13,21), (7,18), (9,24), (12,19)), List((9,19), (8,24), \
(16,23), (12,21)), List((10,20), (7,24), (15,18), \
(11,22))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (15,22), \
(17,18)), List((13,18), (16,21), (17,23)), List((14,22), (8,23), (10,24), \
(11,20)), List((7,18), (9,24), (12,19), (13,21)), List((9,19), (8,24), \
(16,23), (12,21)), List((7,24), (15,18), (11,22), \
(10,20))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)^2*(1 + v)^2*(1 + v^2)^4*(1 - v + v^2)^2*(1 + v + v^2)^2*
     (1 - v^2 + v^4)^2*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
       4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
       v^28)^2)/(v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (15,22), \
(17,18)), List((13,18), (16,21), (17,23)), List((16,23), (8,21), (10,24), \
(12,19)), List((15,18), (7,22), (9,24), (11,20)), List((10,19), (7,24), \
(14,22), (12,23)), List((8,24), (13,21), (11,18), (9,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (15,22), \
(17,18)), List((13,18), (16,21), (17,23)), List((16,23), (8,21), (10,24), \
(12,19)), List((15,18), (7,22), (9,24), (11,20)), List((10,19), (7,24), \
(14,22), (12,23)), List((9,20), (8,24), (13,21), (11,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (15,22), \
(17,24)), List((13,24), (16,21), (17,23)), List((15,24), (7,22), (9,18), \
(11,20)), List((16,23), (8,21), (10,18), (12,19)), List((9,20), (8,18), \
(13,21), (11,24)), List((10,19), (7,18), (14,22), \
(12,23))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d^2, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (15,22), \
(17,24)), List((13,24), (16,21), (17,23)), List((15,24), (7,22), (9,18), \
(11,20)), List((16,23), (8,21), (10,18), (12,19)), List((9,20), (8,18), \
(13,21), (11,24)), List((7,18), (14,22), (12,23), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (16,20), \
(15,22)), List((7,24), (12,19), (8,18)), List((8,24), (17,18), (15,23), \
(11,22)), List((9,21), (10,24), (17,23), (13,18)), List((14,20), (10,23), \
(11,24), (16,22)), List((12,18), (7,19), (9,24), (13,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (16,21), \
(17,24)), List((13,24), (15,22), (17,23)), List((13,22), (7,24), (9,18), \
(11,20)), List((14,21), (8,23), (10,18), (12,19)), List((9,20), (8,18), \
(15,23), (11,22)), List((10,19), (7,18), (16,24), \
(12,21))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((14,23), (16,21), \
(17,24)), List((13,24), (15,22), (17,23)), List((13,22), (7,24), (9,18), \
(11,20)), List((14,21), (8,23), (10,18), (12,19)), List((9,20), (8,18), \
(15,23), (11,22)), List((7,18), (16,24), (12,21), \
(10,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((15,23), (16,18), \
(17,24)), List((12,21), (14,19), (13,20)), List((17,23), (10,24), (14,20), \
(11,19)), List((9,23), (8,22), (16,24), (15,18)), List((12,19), (7,21), \
(9,22), (11,23)), List((8,24), (7,22), (13,21), (10,20))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d^2*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((15,23), (16,19), \
(17,24)), List((12,18), (14,20), (13,21)), List((17,23), (10,24), (14,21), \
(11,20)), List((8,22), (16,24), (15,19), (9,23)), List((7,18), (9,22), \
(11,23), (12,20)), List((8,24), (7,22), (13,18), (10,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^28*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((15,23), (16,19), \
(17,24)), List((12,18), (14,20), (13,21)), List((17,23), (10,24), (14,21), \
(11,20)), List((9,23), (8,22), (16,24), (15,19)), List((7,18), (9,22), \
(11,23), (12,20)), List((7,22), (13,18), (10,21), (8,24))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^16*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((15,23), (16,19), \
(17,24)), List((12,21), (14,18), (13,20)), List((17,23), (10,24), (14,20), \
(11,18)), List((9,23), (8,22), (16,24), (15,19)), List((7,21), (9,22), \
(11,23), (12,18)), List((7,22), (13,21), (10,20), (8,24))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^16*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((15,23), (16,19), \
(17,24)), List((12,21), (14,20), (13,18)), List((17,23), (10,24), (14,18), \
(11,20)), List((8,22), (16,24), (15,19), (9,23)), List((7,21), (9,22), \
(11,23), (12,20)), List((8,24), (7,22), (13,21), (10,18))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
      v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
      v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^28*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((10,21), (11,23), (17,18)), List((11,18), (12,23), (16,20)), \
List((12,20), (13,23), (15,22), (16,18)), List((10,23), (17,21), (14,18), \
(13,22)), List((8,18), (9,24), (15,18), (14,22))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((10,21), (11,23), (17,18)), List((11,18), (12,23), (16,20)), \
List((16,18), (12,20), (13,23), (15,22)), List((10,23), (17,21), (14,18), \
(13,22)), List((14,22), (8,18), (9,24), (15,18))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((10,22), (12,23), (16,21)), List((12,21), (13,23), (17,18)), \
List((15,18), (14,20), (16,22), (17,21)), List((10,23), (14,22), (15,20), \
(11,18)), List((8,18), (9,24), (13,18), (11,23))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((11,23), (13,18), (16,20)), List((15,22), (14,21), (16,23), \
(17,20)), List((11,18), (14,23), (15,21), (12,22)), List((8,18), (10,24), \
(13,20)), List((10,20), (9,24), (12,18), (17,22))),ArrayBuffer((2,0), (1,0), \
(2,0), (2,0), (1,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((11,23), (15,18), (17,22)), List((13,20), (17,23), (16,22)), \
List((11,18), (13,23), (14,20), (12,21)), List((8,18), (10,24), (16,20), \
(15,22)), List((9,24), (12,18), (14,21), (10,20))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((11,23), (17,21), (12,18)), List((10,22), (13,23), (16,18)), \
List((17,18), (14,21), (15,20), (16,22)), List((11,21), (10,23), (15,22), \
(14,20)), List((12,23), (8,18), (9,24), (13,18))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((11,23), (17,21), (13,22)), List((12,18), (13,23), (16,22)), \
List((15,21), (14,20), (16,18), (17,22)), List((11,21), (10,23), (14,18), \
(15,20)), List((12,23), (8,18), (9,24), (10,18))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((12,18), (16,22), (13,20)), List((16,20), (14,22), (15,21), \
(17,23)), List((11,18), (15,23), (14,21), (12,22)), List((11,23), (8,18), \
(10,24), (17,20)), List((9,24), (13,18), (10,20))),ArrayBuffer((2,0), (1,0), \
(2,0), (2,0), (2,0), (1,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((12,23), (16,22), (17,18), (14,21)), List((15,18), (13,20), \
(14,23), (17,21)), List((10,24), (12,22), (11,23)), List((15,20), (8,18), \
(11,24), (13,23)), List((9,24), (16,18), (10,22))),ArrayBuffer((2,0), (2,0), \
(2,0), (1,0), (2,0), (1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((14,18), (11,20), (13,23), (17,21)), List((12,22), (11,23), \
(15,20), (16,18)), List((12,23), (16,22), (17,18), (13,21)), List((8,18), \
(10,24), (14,20)), List((9,24), (15,18), (10,20))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0), (1,0), (1,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((14,20), (17,21), (15,23)), List((10,18), (14,21), (11,20)), \
List((11,18), (15,20), (16,23), (13,22)), List((17,23), (10,21), (12,18), \
(16,22)), List((12,22), (8,18), (9,24), (13,18))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((14,20), (17,21), (15,23)), List((10,18), (14,21), (11,20)), \
List((13,22), (11,18), (15,20), (16,23)), List((17,23), (10,21), (12,18), \
(16,22)), List((8,18), (9,24), (13,18), (12,22))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((14,22), (15,23), (16,20)), List((13,20), (12,18), (17,21), \
(16,22)), List((11,18), (14,23), (17,22), (12,21)), List((11,23), (8,18), \
(10,24), (15,20)), List((9,24), (13,18), (10,20))),ArrayBuffer((2,0), (1,0), \
(2,0), (2,0), (2,0), (1,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (7,19), (9,18), \
(8,24)), List((15,18), (16,22), (17,20)), List((11,23), (17,18), (13,20)), \
List((11,18), (13,23), (14,20), (12,21)), List((8,18), (10,24), (16,20), \
(15,22)), List((9,24), (12,18), (14,21), (10,20))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (8,24), (17,22)), \
List((8,22), (9,24), (16,23)), List((11,18), (13,20), (15,21), (12,19)), \
List((11,20), (17,18), (16,22), (14,23)), List((10,21), (7,24), (12,18), \
(15,19)), List((9,23), (10,24), (13,21), (14,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (8,24), (17,22)), \
List((8,22), (9,24), (16,23)), List((11,18), (13,20), (15,21), (12,19)), \
List((11,20), (17,18), (16,22), (14,23)), List((7,24), (12,18), (15,19), \
(10,21)), List((9,23), (10,24), (13,21), (14,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (8,24), (17,22)), \
List((8,22), (9,24), (16,23)), List((11,18), (13,20), (15,21), (12,19)), \
List((14,23), (11,20), (17,18), (16,22)), List((7,24), (12,18), (15,19), \
(10,21)), List((14,20), (9,23), (10,24), (13,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (8,24), (17,22)), \
List((8,22), (9,24), (16,23)), List((12,19), (11,18), (13,20), (15,21)), \
List((14,23), (11,20), (17,18), (16,22)), List((10,21), (7,24), (12,18), \
(15,19)), List((9,23), (10,24), (13,21), (14,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (8,24), (17,22)), \
List((8,22), (9,24), (16,23)), List((12,19), (11,18), (13,20), (15,21)), \
List((14,23), (11,20), (17,18), (16,22)), List((7,24), (12,18), (15,19), \
(10,21)), List((9,23), (10,24), (13,21), (14,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,18), (9,22), (15,23)), \
List((8,22), (17,24), (9,23)), List((12,24), (10,21), (15,18), (16,23)), \
List((13,23), (11,20), (14,19), (16,24)), List((11,19), (13,20), (17,23), \
(14,24)), List((8,24), (7,22), (10,18), (12,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28)*
    (1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^38*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,19), (8,24), (17,22)), \
List((8,22), (9,24), (13,23)), List((7,24), (17,19), (13,22), (10,23)), \
List((9,23), (11,24), (14,20), (15,18)), List((12,21), (10,24), (15,23), \
(16,18)), List((14,18), (11,20), (12,24), (16,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,19), (9,20), (8,24), \
(7,20)), List((13,18), (12,23), (17,22), (16,21)), List((14,20), (16,18), \
(17,21), (15,22)), List((10,24), (13,23), (11,18)), List((8,20), (11,24), \
(14,18)), List((10,23), (9,24), (15,20), (12,22))),ArrayBuffer((2,0), (2,0), \
(2,0), (1,0), (1,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,19), (9,20), (8,24), \
(7,20)), List((13,20), (12,23), (17,18), (14,21)), List((14,20), (17,21), \
(15,18), (16,22)), List((10,23), (11,24), (12,18)), List((8,20), (10,24), \
(13,23)), List((11,18), (9,24), (16,20), (15,22))),ArrayBuffer((2,0), (2,0), \
(2,0), (1,0), (1,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (7,19), (9,20), \
(8,24)), List((12,18), (14,21), (17,20)), List((15,23), (17,18), (16,20)), \
List((11,18), (13,22), (14,20), (12,21)), List((16,23), (8,20), (10,24), \
(15,18)), List((10,18), (9,24), (13,20), (11,22))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (7,19), (9,20), \
(8,24)), List((12,23), (15,22), (16,18), (14,21)), List((13,20), (14,23), \
(16,21), (17,18)), List((12,22), (10,23), (11,24), (15,18)), List((8,20), \
(10,24), (13,23)), List((9,24), (17,20), (11,18))),ArrayBuffer((2,0), (2,0), \
(2,0), (2,0), (1,0), (1,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (7,19), (9,20), \
(8,24)), List((13,18), (12,23), (17,20), (16,21)), List((15,20), (14,22), \
(16,18), (17,21)), List((10,24), (13,23), (11,18)), List((15,22), (8,20), \
(11,24), (14,18)), List((9,24), (12,20), (10,23))),ArrayBuffer((2,0), (2,0), \
(2,0), (1,0), (2,0), (1,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (7,19), (9,20), \
(8,24)), List((13,21), (12,23), (17,18), (14,22)), List((15,20), (14,21), \
(17,22), (16,18)), List((10,23), (11,24), (12,18)), List((15,21), (8,20), \
(10,24), (13,23)), List((9,24), (16,20), (11,18))),ArrayBuffer((2,0), (2,0), \
(2,0), (1,0), (2,0), (1,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (7,19), (9,20), \
(8,24)), List((13,23), (16,20), (17,22)), List((11,18), (17,23), (15,22)), \
List((13,20), (11,23), (12,18), (14,21)), List((16,22), (8,20), (10,24), \
(15,18)), List((10,18), (9,24), (14,20), (12,21))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (7,19), (9,20), \
(8,24)), List((14,20), (17,22), (16,23)), List((13,22), (15,18), (17,23)), \
List((12,20), (11,21), (13,18), (14,22)), List((12,21), (8,20), (10,24), \
(11,18)), List((10,18), (9,24), (16,20), (15,23))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (7,19), (9,20), \
(8,24)), List((15,18), (16,21), (17,20)), List((13,23), (17,18), (14,20)), \
List((12,20), (11,22), (13,18), (14,23)), List((12,22), (8,20), (10,24), \
(11,18)), List((10,18), (9,24), (16,20), (15,21))),ArrayBuffer((2,0), (1,0), \
(1,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (8,24), (11,18)), \
List((8,18), (9,24), (16,23)), List((12,22), (13,18), (15,19), (14,21)), \
List((15,21), (13,19), (16,18), (17,23)), List((7,24), (11,20), (12,18), \
(10,22)), List((17,21), (9,23), (10,24), (14,22))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (8,24), (11,18)), \
List((8,18), (9,24), (16,23)), List((14,21), (12,22), (13,18), (15,19)), \
List((15,21), (13,19), (16,18), (17,23)), List((10,22), (7,24), (11,20), \
(12,18)), List((9,23), (10,24), (14,22), (17,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (8,24), (11,18)), \
List((8,18), (9,24), (16,23)), List((14,21), (12,22), (13,18), (15,19)), \
List((15,21), (13,19), (16,18), (17,23)), List((7,24), (11,20), (12,18), \
(10,22)), List((9,23), (10,24), (14,22), (17,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (8,24), (12,21)), \
List((10,22), (11,24), (17,23)), List((14,18), (17,22), (16,23), (15,19)), \
List((7,24), (12,20), (13,21), (9,18)), List((8,21), (10,24), (14,22), \
(13,18)), List((11,23), (9,24), (15,18), (16,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (8,24), (12,21)), \
List((9,22), (10,24), (14,18)), List((15,23), (14,22), (17,18), (16,19)), \
List((7,24), (12,20), (13,21), (11,23)), List((10,18), (11,24), (16,23), \
(17,19)), List((8,21), (9,24), (15,22), (13,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (8,24), (12,22)), \
List((9,23), (10,24), (15,18)), List((14,23), (13,21), (17,22), (16,19)), \
List((11,21), (7,24), (12,20), (13,22)), List((15,23), (10,18), (11,24), \
(14,21)), List((8,22), (9,24), (16,23), (17,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,20), (8,24), (17,18)), \
List((8,18), (9,24), (13,23)), List((7,24), (17,20), (14,18), (10,21)), \
List((9,23), (11,24), (15,22), (16,19)), List((10,24), (14,21), (13,18), \
(12,23)), List((11,22), (12,24), (16,23), (15,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^10*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,21), (8,24), (12,22)), \
List((8,22), (11,24), (13,18)), List((14,23), (16,19), (17,18), (15,20)), \
List((7,24), (12,21), (13,22), (10,18)), List((9,23), (10,24), (16,18), \
(14,19)), List((11,18), (9,24), (15,23), (17,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 2*v^16 - 
     3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 4*v^26 + 
     2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - d^2*v^30 + 
     v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 2*d^2*v^36 + 3*v^38 - 
     6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 2*d^2*v^40 + v^42 + 2*d*v^42 - 
     v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 6*v^48 + 3*d*v^48 - d^2*v^48 + 
     4*d*v^50 - d^2*v^50 - 4*v^52 + 3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 
     4*v^58 - 2*d*v^58 + 4*v^60 - d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - 
     d*v^72 - 2*v^74))/(v^26*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,22), (15,18), (9,24)), \
List((8,23), (9,22), (17,24)), List((11,20), (14,19), (17,23), (13,24)), \
List((14,23), (11,19), (13,20), (16,24)), List((15,24), (10,18), (12,21), \
(16,23)), List((7,18), (8,22), (12,23), (10,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,23), (8,24), (15,18)), \
List((7,24), (14,23), (9,21)), List((11,18), (12,20), (14,21), (15,23)), \
List((11,20), (16,18), (13,19), (17,22)), List((8,18), (10,24), (13,22), \
(16,19)), List((10,22), (9,24), (12,21), (17,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,23), (8,24), (15,18)), \
List((7,24), (14,23), (9,21)), List((11,18), (12,20), (14,21), (15,23)), \
List((11,20), (16,18), (13,19), (17,22)), List((8,18), (10,24), (13,22), \
(16,19)), List((9,24), (12,21), (17,20), (10,22))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,23), (8,24), (15,18)), \
List((7,24), (14,23), (9,21)), List((11,18), (12,20), (14,21), (15,23)), \
List((17,22), (11,20), (16,18), (13,19)), List((8,18), (10,24), (13,22), \
(16,19)), List((9,24), (12,21), (17,20), (10,22))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,23), (8,24), (15,18)), \
List((7,24), (14,23), (9,21)), List((15,23), (11,18), (12,20), (14,21)), \
List((17,22), (11,20), (16,18), (13,19)), List((8,18), (10,24), (13,22), \
(16,19)), List((9,24), (12,21), (17,20), (10,22))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-2 - d*v^2 - 3*v^4 - v^6 - v^8 + 2*v^10 + 2*v^12 + d*v^12 + 4*v^14 + 
      5*v^16 - 2*d*v^16 + 2*v^18 - 2*d*v^18 + 2*v^20 - 3*v^22 - d*v^22 + 
      d^2*v^22 - v^24 - 8*v^26 + 3*d*v^26 - d^2*v^26 - 2*v^28 + 4*d*v^28 - 
      d^2*v^28 - 3*v^30 + 4*d*v^30 + 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      4*v^36 - 3*d*v^36 + 4*v^38 - 4*d*v^38 + d^2*v^38 + 2*v^40 - 4*d*v^40 + 
      d^2*v^40 + 4*v^42 - 2*d*v^42 - 4*d*v^44 + d^2*v^44 + d*v^46 - 3*v^48 + 
      2*d*v^48 - v^50 + 2*d*v^50 - 3*v^52 + 2*d*v^52 - 2*v^54 + 2*d*v^54 + 
      d*v^56 + v^60 + v^62 + 2*v^64 + v^68))/(v^22*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,23), (8,24), (17,18)), \
List((8,18), (9,24), (13,20)), List((10,21), (11,24), (17,23), (14,18)), \
List((7,24), (15,23), (16,19), (12,22)), List((13,18), (9,20), (10,24), \
(14,21)), List((15,19), (11,23), (12,24), (16,22))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - d*v^20 + 
     v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - 
     v^36 + d*v^36 - v^38 + v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,23), (8,24), (17,22)), \
List((8,22), (9,24), (13,19)), List((9,19), (10,24), (17,23), (13,22)), \
List((7,24), (14,23), (15,18), (11,20)), List((14,18), (10,23), (12,24), \
(16,21)), List((11,24), (15,20), (16,18), (12,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 - 2*v^4 - v^8 + v^10 + v^12 - 2*d*v^12 + v^14 - 2*d*v^14 + 2*v^16 - 
     3*d*v^16 - 2*d*v^18 - 2*v^22 - v^24 + 6*d*v^24 - 2*d^2*v^24 - 4*v^26 + 
     2*d*v^26 - d^2*v^26 - v^28 + 5*d*v^28 - 2*d^2*v^28 - 2*v^30 - d^2*v^30 + 
     v^34 - 6*d*v^34 + 2*d^2*v^34 + v^36 - 5*d*v^36 + 2*d^2*v^36 + 3*v^38 - 
     6*d*v^38 + 2*d^2*v^38 + v^40 - 5*d*v^40 + 2*d^2*v^40 + v^42 + 2*d*v^42 - 
     v^44 - v^46 + 6*d*v^46 - 2*d^2*v^46 - 6*v^48 + 3*d*v^48 - d^2*v^48 + 
     4*d*v^50 - d^2*v^50 - 4*v^52 + 3*d*v^52 + 2*v^54 + d^2*v^54 + v^56 + 
     4*v^58 - 2*d*v^58 + 4*v^60 - d*v^60 + 2*v^62 + 3*v^64 - v^66 - 3*v^70 - 
     d*v^72 - 2*v^74))/(v^38*(1 + d*v^2 + v^4)^2), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (11,20), (9,18)), \
List((9,24), (14,18), (10,23)), List((12,18), (15,22), (16,21), (17,19)), \
List((13,21), (14,23), (17,18), (16,19)), List((7,20), (8,24), (12,22), \
(11,18)), List((15,21), (8,22), (10,24), (13,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (11,20), (9,18)), \
List((9,24), (14,18), (10,23)), List((12,18), (15,22), (16,21), (17,19)), \
List((16,19), (13,21), (14,23), (17,18)), List((11,18), (7,20), (8,24), \
(12,22)), List((8,22), (10,24), (13,23), (15,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (11,20), (9,18)), \
List((9,24), (14,18), (10,23)), List((12,18), (15,22), (16,21), (17,19)), \
List((16,19), (13,21), (14,23), (17,18)), List((7,20), (8,24), (12,22), \
(11,18)), List((15,21), (8,22), (10,24), (13,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (11,20), (9,18)), \
List((9,24), (14,18), (10,23)), List((17,19), (12,18), (15,22), (16,21)), \
List((13,21), (14,23), (17,18), (16,19)), List((11,18), (7,20), (8,24), \
(12,22)), List((15,21), (8,22), (10,24), (13,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (12,20), (9,21)), \
List((10,18), (11,24), (14,22)), List((14,18), (17,22), (16,23), (15,19)), \
List((7,20), (8,24), (13,23), (12,21)), List((16,19), (8,23), (10,24), \
(15,18)), List((11,22), (9,24), (13,21), (17,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (12,20), (9,21)), \
List((10,23), (11,24), (14,22)), List((14,23), (17,22), (16,18), (15,19)), \
List((7,20), (8,24), (13,18), (12,21)), List((16,19), (8,18), (10,24), \
(15,23)), List((11,22), (9,24), (13,21), (17,18))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (12,20), (9,22)), \
List((10,18), (11,24), (14,23)), List((15,19), (13,22), (16,21), (17,23)), \
List((12,22), (7,20), (8,24), (13,21)), List((16,23), (8,21), (10,24), \
(14,18)), List((11,23), (9,24), (15,22), (17,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (12,21), (9,22)), \
List((9,24), (13,22), (10,18)), List((17,23), (14,20), (16,18), (15,19)), \
List((7,21), (8,24), (13,18), (12,22)), List((16,19), (8,18), (11,24), \
(15,23)), List((10,24), (14,18), (17,20), (11,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,22), (9,23)), \
List((9,24), (15,23), (10,18)), List((14,22), (12,20), (16,21), (13,23)), \
List((7,22), (8,24), (17,19), (14,20)), List((10,24), (15,18), (16,23), \
(11,21)), List((17,20), (8,19), (11,24), (12,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,22), (9,23)), \
List((9,24), (15,23), (10,19)), List((12,18), (16,21), (13,23), (14,22)), \
List((14,18), (7,22), (8,24), (17,20)), List((10,24), (15,19), (16,23), \
(11,21)), List((8,20), (11,24), (12,21), (17,18))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,22), (9,23)), \
List((9,24), (15,23), (10,19)), List((12,18), (16,21), (13,23), (14,22)), \
List((7,22), (8,24), (17,20), (14,18)), List((10,24), (15,19), (16,23), \
(11,21)), List((8,20), (11,24), (12,21), (17,18))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,22), (9,23)), \
List((9,24), (15,23), (10,19)), List((12,18), (16,21), (13,23), (14,22)), \
List((7,22), (8,24), (17,20), (14,18)), List((11,21), (10,24), (15,19), \
(16,23)), List((17,18), (8,20), (11,24), (12,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,22), (9,23)), \
List((9,24), (15,23), (10,19)), List((12,20), (16,21), (13,23), (14,22)), \
List((7,22), (8,24), (17,18), (14,20)), List((11,21), (10,24), (15,19), \
(16,23)), List((17,20), (8,18), (11,24), (12,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,23), (9,18)), \
List((9,24), (15,18), (10,19)), List((12,21), (16,22), (13,18), (14,23)), \
List((7,23), (8,24), (17,20), (14,21)), List((10,24), (15,19), (16,18), \
(11,22)), List((8,20), (11,24), (12,22), (17,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,23), (9,18)), \
List((9,24), (15,18), (10,19)), List((14,23), (12,21), (16,22), (13,18)), \
List((7,23), (8,24), (17,20), (14,21)), List((10,24), (15,19), (16,18), \
(11,22)), List((17,21), (8,20), (11,24), (12,22))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^18), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,23), (9,18)), \
List((9,24), (15,18), (10,20)), List((12,19), (16,22), (13,18), (14,23)), \
List((7,23), (8,24), (12,22), (14,19)), List((10,24), (15,20), (17,18), \
(11,21)), List((16,18), (8,22), (11,24), (17,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,23), (9,18)), \
List((9,24), (15,18), (10,20)), List((12,19), (16,22), (13,18), (14,23)), \
List((7,23), (8,24), (12,22), (14,19)), List((10,24), (15,20), (17,18), \
(11,21)), List((8,22), (11,24), (17,21), (16,18))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,23), (9,18)), \
List((9,24), (15,18), (10,20)), List((14,23), (12,19), (16,22), (13,18)), \
List((14,19), (7,23), (8,24), (12,22)), List((10,24), (15,20), (17,18), \
(11,21)), List((16,18), (8,22), (11,24), (17,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (13,23), (9,22)), \
List((10,20), (11,24), (15,18)), List((16,18), (12,19), (13,22), (14,23)), \
List((7,23), (8,24), (17,21), (14,18)), List((17,18), (8,21), (10,24), \
(15,20)), List((11,18), (9,24), (12,22), (16,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (14,23), (9,22)), \
List((8,18), (10,24), (17,21)), List((12,19), (13,18), (14,22), (15,23)), \
List((7,23), (8,24), (12,18), (15,19)), List((17,18), (10,21), (11,24), \
(16,20)), List((9,24), (13,22), (16,18), (11,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (14,23), (9,22)), \
List((8,21), (10,24), (16,18)), List((11,19), (12,20), (16,21), (17,18)), \
List((11,20), (13,19), (14,22), (15,23)), List((7,23), (8,24), (12,21), \
(15,20)), List((10,18), (9,24), (13,22), (17,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (14,23), (9,22)), \
List((8,21), (10,24), (16,18)), List((17,18), (11,19), (12,20), (16,21)), \
List((11,20), (13,19), (14,22), (15,23)), List((7,23), (8,24), (12,21), \
(15,20)), List((9,24), (13,22), (17,19), (10,18))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (14,23), (9,22)), \
List((8,21), (10,24), (16,18)), List((17,18), (11,19), (12,20), (16,21)), \
List((15,23), (11,20), (13,19), (14,22)), List((15,20), (7,23), (8,24), \
(12,21)), List((10,18), (9,24), (13,22), (17,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (14,23), (9,22)), \
List((8,21), (10,24), (16,18)), List((17,18), (11,19), (12,20), (16,21)), \
List((15,23), (11,20), (13,19), (14,22)), List((7,23), (8,24), (12,21), \
(15,20)), List((10,18), (9,24), (13,22), (17,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,18), (9,23)), \
List((9,24), (14,23), (10,21)), List((12,23), (15,22), (13,20), (14,21)), \
List((17,23), (7,18), (8,24), (12,22)), List((10,24), (13,21), (16,20), \
(11,19)), List((8,22), (11,24), (16,19), (15,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,19), (9,23)), \
List((9,24), (14,23), (10,21)), List((14,21), (12,23), (15,22), (13,20)), \
List((17,23), (7,19), (8,24), (12,22)), List((10,24), (13,21), (16,20), \
(11,18)), List((15,20), (8,22), (11,24), (16,18))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,20), (9,18)), \
List((9,24), (14,18), (10,22)), List((12,18), (15,23), (13,21), (14,22)), \
List((17,18), (7,20), (8,24), (12,23)), List((8,23), (11,24), (16,19), \
(15,21)), List((10,24), (13,22), (16,21), (11,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,20), (9,18)), \
List((9,24), (14,18), (10,22)), List((12,18), (15,23), (13,21), (14,22)), \
List((7,20), (8,24), (12,23), (17,18)), List((15,21), (8,23), (11,24), \
(16,19)), List((10,24), (13,22), (16,21), (11,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,20), (9,23)), \
List((9,24), (14,23), (10,21)), List((12,23), (15,22), (13,18), (14,21)), \
List((7,20), (8,24), (12,22), (17,23)), List((15,18), (8,22), (11,24), \
(16,19)), List((10,24), (13,21), (16,18), (11,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(1 + 2*v^4 + v^6 + v^8 + d*v^12 - 2*v^14 + 2*d*v^14 - 3*v^16 + 
      2*d*v^16 - v^18 + 2*d*v^18 - 3*v^20 + 2*d*v^20 + d*v^22 - 4*d*v^24 + 
      d^2*v^24 + 4*v^26 - 2*d*v^26 + 2*v^28 - 4*d*v^28 + d^2*v^28 + 4*v^30 - 
      4*d*v^30 + d^2*v^30 + 4*v^32 - 3*d*v^32 + v^34 + 2*d*v^34 - d^2*v^34 + 
      3*d*v^36 - 3*v^38 + 4*d*v^38 - 2*v^40 + 4*d*v^40 - d^2*v^40 - 8*v^42 + 
      3*d*v^42 - d^2*v^42 - v^44 - 3*v^46 - d*v^46 + d^2*v^46 + 2*v^48 + 
      2*v^50 - 2*d*v^50 + 5*v^52 - 2*d*v^52 + 4*v^54 + 2*v^56 + d*v^56 + 
      2*v^58 - v^60 - v^62 - 3*v^64 - d*v^66 - 2*v^68))/
    (v^38*(1 + d*v^2 + v^4)^2)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,20), (9,23)), \
List((9,24), (14,23), (10,21)), List((14,21), (12,23), (15,22), (13,18)), \
List((17,23), (7,20), (8,24), (12,22)), List((15,18), (8,22), (11,24), \
(16,19)), List((10,24), (13,21), (16,18), (11,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,20), (9,23)), \
List((9,24), (14,23), (10,21)), List((14,21), (12,23), (15,22), (13,18)), \
List((7,20), (8,24), (12,22), (17,23)), List((15,18), (8,22), (11,24), \
(16,19)), List((10,24), (13,21), (16,18), (11,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d/v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,21), (9,18)), \
List((10,20), (11,24), (14,23)), List((12,18), (16,22), (15,23), (13,19)), \
List((17,18), (7,21), (8,24), (12,22)), List((8,22), (10,24), (14,20), \
(16,23)), List((11,23), (9,24), (13,18), (15,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,21), (9,18)), \
List((10,20), (11,24), (14,23)), List((12,18), (16,22), (15,23), (13,19)), \
List((7,21), (8,24), (12,22), (17,18)), List((16,23), (8,22), (10,24), \
(14,20)), List((11,23), (9,24), (13,18), (15,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,21), (9,18)), \
List((9,24), (14,18), (10,22)), List((12,18), (15,23), (13,19), (14,22)), \
List((17,18), (7,21), (8,24), (16,20)), List((8,20), (11,24), (12,23), \
(16,18)), List((10,24), (13,22), (15,19), (11,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 
      4*v^14 + d*v^14 + 3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + 
      v^28))/(v^22*(1 + d*v^2 + v^4))), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,21), (9,18)), \
List((9,24), (14,18), (10,22)), List((14,22), (12,18), (15,23), (13,19)), \
List((17,18), (7,21), (8,24), (16,20)), List((16,18), (8,20), (11,24), \
(12,23)), List((10,24), (13,22), (15,19), (11,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,21), (9,18)), \
List((9,24), (14,18), (10,22)), List((14,22), (12,18), (15,23), (13,19)), \
List((17,18), (7,21), (8,24), (16,20)), List((8,20), (11,24), (12,23), \
(16,18)), List((10,24), (13,22), (15,19), (11,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,21), (9,23)), \
List((10,20), (11,24), (14,18)), List((12,23), (16,22), (15,18), (13,19)), \
List((7,21), (8,24), (12,22), (17,23)), List((16,18), (8,22), (10,24), \
(14,20)), List((11,18), (9,24), (13,23), (15,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((7,24), (17,21), (9,23)), \
List((10,20), (11,24), (14,18)), List((13,19), (12,23), (16,22), (15,18)), \
List((17,23), (7,21), (8,24), (12,22)), List((16,18), (8,22), (10,24), \
(14,20)), List((11,18), (9,24), (13,23), (15,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,19), (9,22), (16,23)), \
List((10,18), (14,21), (12,24)), List((11,20), (13,18), (17,23), (15,24)), \
List((9,23), (7,22), (12,18), (17,24)), List((7,18), (8,22), (16,19), \
(13,23)), List((14,24), (10,21), (11,18), (15,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,20), (11,24), \
(16,23)), List((10,24), (17,18), (11,23)), List((12,21), (13,22), (17,23), \
(15,18)), List((13,23), (7,22), (8,24), (16,20)), List((10,18), (9,24), \
(14,19), (15,21)), List((9,19), (7,24), (12,22), (14,21))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,20), (9,24), (15,22)), \
List((10,18), (11,24), (14,19)), List((13,22), (7,23), (8,24), (15,20)), \
List((9,22), (10,24), (17,18), (13,23)), List((14,18), (11,19), (12,24), \
(16,21)), List((12,21), (7,24), (17,23), (16,18))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,21), (10,24), \
(17,22)), List((7,18), (9,24), (16,23)), List((11,19), (13,20), (17,21), \
(14,22)), List((11,20), (12,19), (16,18), (15,23)), List((9,23), (8,24), \
(13,21), (15,20)), List((10,22), (7,24), (12,18), \
(14,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,21), (10,24), \
(17,22)), List((7,18), (9,24), (16,23)), List((11,19), (13,20), (17,21), \
(14,22)), List((11,20), (12,19), (16,18), (15,23)), List((9,23), (8,24), \
(13,21), (15,20)), List((7,24), (12,18), (14,19), \
(10,22))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,21), (10,24), \
(17,22)), List((7,18), (9,24), (16,23)), List((11,19), (13,20), (17,21), \
(14,22)), List((15,23), (11,20), (12,19), (16,18)), List((8,24), (13,21), \
(15,20), (9,23)), List((10,22), (7,24), (12,18), (14,19))),ArrayBuffer((1,0), \
(1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,21), (10,24), \
(17,22)), List((7,18), (9,24), (16,23)), List((14,22), (11,19), (13,20), \
(17,21)), List((15,23), (11,20), (12,19), (16,18)), List((9,23), (8,24), \
(13,21), (15,20)), List((10,22), (7,24), (12,18), \
(14,19))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,21), (10,24), \
(17,22)), List((7,18), (9,24), (16,23)), List((14,22), (11,19), (13,20), \
(17,21)), List((15,23), (11,20), (12,19), (16,18)), List((9,23), (8,24), \
(13,21), (15,20)), List((7,24), (12,18), (14,19), \
(10,22))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,21), (9,24), (17,22)), \
List((7,20), (10,24), (16,23)), List((11,18), (13,19), (17,21), (14,22)), \
List((11,19), (12,18), (16,20), (15,23)), List((10,23), (8,24), (13,21), \
(15,19)), List((9,22), (7,24), (12,20), (14,18))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,21), (9,24), (17,22)), \
List((7,20), (10,24), (16,23)), List((11,18), (13,19), (17,21), (14,22)), \
List((15,23), (11,19), (12,18), (16,20)), List((8,24), (13,21), (15,19), \
(10,23)), List((9,22), (7,24), (12,20), (14,18))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 0, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,22), (16,19), (9,23)), \
List((11,21), (12,18), (15,24)), List((12,24), (7,18), (9,22), (17,23)), \
List((10,18), (14,20), (17,24), (13,23)), List((7,22), (13,18), (16,23), \
(8,19)), List((14,24), (10,20), (11,18), (15,21))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^12, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,22), (17,24), (9,23)), \
List((7,19), (9,22), (12,23)), List((11,20), (15,18), (17,23), (14,24)), \
List((15,23), (10,18), (13,21), (16,24)), List((13,24), (10,21), (11,18), \
(14,20)), List((8,24), (7,22), (12,19), (16,23))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> -(d*v^6), 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,22), (9,24), (14,19)), \
List((7,24), (15,18), (12,20)), List((13,23), (7,18), (8,24), (17,22)), \
List((14,22), (9,19), (10,24), (17,23)), List((13,18), (10,23), (11,24), \
(16,21)), List((16,18), (11,21), (12,24), (15,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> d*v^24, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,22), (9,24), (14,19)), \
List((7,24), (15,18), (12,20)), List((7,18), (8,24), (17,22), (13,23)), \
List((9,19), (10,24), (17,23), (14,22)), List((13,18), (10,23), (11,24), \
(16,21)), List((16,18), (11,21), (12,24), (15,20))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> d, 
 HoldPattern[ev["PlanarGraph(18,Vector(List(), List((8,22), (9,24), (17,20)), \
List((7,24), (15,23), (11,19)), List((12,22), (16,21), (14,23), (13,18)), \
List((7,23), (8,24), (13,22), (14,18)), List((9,20), (10,24), (12,21), \
(17,22)), List((16,23), (10,21), (11,24), (15,19))),ArrayBuffer((1,0), (1,0), \
(2,0), (2,0), (2,0), (2,0)),0)"]] :> 
  (d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
    (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
     3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
   (v^16*(1 + d*v^2 + v^4)), 
 HoldPattern[ev["PlanarGraph(19,Vector(List(), List((12,19), (14,22), \
(16,20)), List((13,22), (16,19), (14,20)), List((12,22), (15,19), (13,19)), \
List((11,24), (18,23), (17,19)), List((10,23), (15,19), (18,19)), \
List((8,19), (9,21), (17,24)), List((9,24), (8,21), (10,19), \
(11,23))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(19,Vector(List(), List((13,20), (15,19), \
(14,21)), List((16,19), (18,22), (17,23)), List((8,19), (10,24), (16,22)), \
List((9,24), (15,21), (11,19)), List((10,22), (12,24), (18,23)), \
List((11,24), (17,19), (12,23)), List((8,24), (13,19), (14,20), \
(9,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(19,Vector(List(), List((8,19), (8,20), (9,19)), \
List((9,19), (11,19), (10,24)), List((15,23), (17,19), (18,22)), \
List((13,24), (18,23), (14,22)), List((12,24), (16,21), (15,19), (13,23)), \
List((10,19), (14,24), (17,22)), List((11,24), (16,19), \
(12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (1,0), (1,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(19,Vector(List(), List((8,20), (8,21), (9,20)), \
List((9,20), (17,20), (16,19)), List((15,23), (17,19), (18,20)), \
List((11,20), (14,24), (18,23)), List((10,24), (15,19), (14,23)), \
List((12,19), (13,22), (16,20)), List((10,19), (11,24), (13,20), \
(12,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] \
:> 0, HoldPattern[ev["PlanarGraph(19,Vector(List(), List((8,21), (8,20), \
(10,21), (9,24)), List((14,23), (17,19), (16,22)), List((14,19), (15,23), \
(18,21)), List((11,24), (16,23), (12,22)), List((12,24), (17,22), (13,19)), \
List((9,21), (13,24), (18,19)), List((10,24), (15,21), \
(11,23))),ArrayBuffer((2,0), (1,0), (1,0), (1,0), (1,0), (1,0), (1,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(19,Vector(List(), List((9,23), (10,24), \
(16,20)), List((10,20), (11,24), (16,23)), List((11,23), (12,24), (17,22)), \
List((12,22), (13,24), (15,19)), List((13,19), (14,24), (18,21)), \
List((8,24), (18,19), (14,21)), List((8,19), (9,24), (17,23), \
(15,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (1,0), (1,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((11,22), (12,20), \
(13,21)), List((8,24), (9,23), (14,25)), List((8,23), (16,24), (10,26)), \
List((9,25), (10,23), (15,26)), List((11,20), (19,22), (15,25), (17,26)), \
List((13,22), (18,21), (14,24), (19,25)), List((12,21), (17,20), (16,26), \
(18,24))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> (d^2*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
   ((1 + v^4)*(1 + d*v^8 + v^16)), 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((12,24), (16,23), \
(13,20)), List((9,22), (10,26), (17,21)), List((8,26), (14,25), (11,23)), \
List((8,25), (9,26), (15,22)), List((10,21), (11,26), (12,23), (19,24)), \
List((13,24), (16,20), (14,23), (18,25)), List((15,25), (17,22), (19,21), \
(18,24))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> (d*(1 + 2*v^4 + 2*v^6 + v^8 + d*v^8 + v^10 + v^12 + d*v^12 - 2*v^14 + 
     2*d*v^14 - 3*v^16 + 2*d*v^16 - v^18 - 4*v^20 + d*v^20 + d*v^22 + v^24 - 
     2*d*v^24 + d^2*v^24 + 4*v^26 - d*v^26 + 2*v^28 - 2*d*v^28 + 4*v^30 - 
     d*v^30 + v^32 - 2*d*v^32 + d^2*v^32 + d*v^34 - 4*v^36 + d*v^36 - v^38 - 
     3*v^40 + 2*d*v^40 - 2*v^42 + 2*d*v^42 + v^44 + d*v^44 + v^46 + v^48 + 
     d*v^48 + 2*v^50 + 2*v^52 + v^56))/(v^10*(1 + v^4)*(1 + d*v^2 + v^4)*
    (1 + d*v^8 + v^16)), HoldPattern[ev["PlanarGraph(20,Vector(List(), \
List((13,25), (15,20), (16,24)), List((8,24), (9,26), (16,25)), List((8,26), \
(15,24), (10,20)), List((10,26), (17,20), (11,23)), List((13,20), (18,25), \
(14,22), (17,23)), List((9,25), (12,26), (19,21), (18,22)), List((11,26), \
(14,23), (19,22), (12,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), \
(2,0), (2,0)),0)"]] :> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((13,25), (16,24), \
(15,20)), List((13,24), (17,25), (14,23)), List((8,26), (19,22), (10,20)), \
List((10,26), (16,20), (12,24)), List((8,22), (9,26), (15,25), (19,20)), \
List((17,23), (9,25), (11,26), (18,21)), List((18,23), (11,21), (12,26), \
(14,24))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> -((d*(-1 + v)*(1 + v)*(1 + v^2)^2*(1 - v + v^2)*(1 + v + v^2)*
     (1 - v^2 + v^4)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
     (1 - v^2 + 2*v^4 - v^6 + v^8 - 2*v^10 + 3*v^12 - 4*v^14 + d*v^14 + 
      3*v^16 - 2*v^18 + v^20 - v^22 + 2*v^24 - v^26 + v^28))/
    (v^22*(1 + v^4)*(1 + d*v^2 + v^4)*(1 + d*v^8 + v^16))), 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((14,22), (18,20), \
(19,25)), List((8,24), (9,26), (16,20)), List((8,26), (15,24), (10,23)), \
List((11,26), (17,25), (12,21)), List((14,20), (13,22), (15,23), (16,24)), \
List((9,20), (12,26), (17,21), (18,25)), List((10,26), (13,23), (19,22), \
(11,25))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((14,24), (16,20), \
(17,25)), List((8,26), (13,22), (10,24)), List((10,26), (17,24), (12,25)), \
List((11,23), (12,26), (18,25)), List((19,20), (15,21), (18,23), (16,25)), \
List((8,22), (9,26), (14,20), (13,24)), List((19,21), (9,20), (11,26), \
(15,23))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((16,20), (18,25), \
(17,23)), List((8,26), (13,22), (10,24)), List((9,25), (12,26), (18,23)), \
List((11,26), (17,20), (12,23)), List((14,24), (16,25), (19,20), (15,21)), \
List((13,24), (8,22), (9,26), (14,25)), List((11,20), (10,26), (15,24), \
(19,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((16,25), (18,23), \
(17,24)), List((9,25), (10,26), (16,23)), List((10,23), (11,26), (18,24)), \
List((12,20), (13,26), (14,21)), List((15,20), (8,22), (9,26), (19,25)), \
List((11,24), (12,26), (19,20), (17,25)), List((8,26), (15,22), (14,20), \
(13,21))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((17,25), (19,21), \
(18,24)), List((8,20), (9,26), (14,25)), List((10,24), (11,26), (18,25)), \
List((8,26), (16,20), (13,22)), List((9,25), (10,26), (19,24), (17,21)), \
List((11,25), (12,26), (15,23), (14,20)), List((15,20), (12,23), (13,26), \
(16,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((8,20), (11,26), \
(15,23)), List((10,26), (16,25), (12,21)), List((9,26), (14,24), (10,25)), \
List((8,26), (13,20), (9,24)), List((11,23), (12,26), (16,21), (19,25)), \
List((15,20), (19,23), (18,25), (17,22)), List((14,25), (13,24), (17,20), \
(18,22))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(20,Vector(List(), List((9,26), (17,21), \
(10,24)), List((8,25), (12,26), (16,22)), List((11,26), (18,23), (12,22)), \
List((10,26), (19,24), (11,23)), List((13,20), (15,25), (17,24), (14,21)), \
List((19,23), (15,24), (16,25), (18,22)), List((9,21), (8,26), (13,25), \
(14,20))),ArrayBuffer((1,0), (1,0), (1,0), (1,0), (2,0), (2,0), (2,0)),0)"]] \
:> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(21,Vector(List(), List((14,26), (17,27), \
(15,21)), List((8,28), (13,25), (9,26)), List((14,27), (13,26), (18,25), \
(16,22)), List((10,23), (9,28), (15,26), (19,21)), List((8,25), (11,28), \
(16,27), (18,22)), List((10,28), (19,23), (20,21), (12,24)), List((17,21), \
(11,27), (12,28), (20,24))),ArrayBuffer((1,0), (1,0), (2,0), (2,0), (2,0), \
(2,0), (2,0)),0)"]] :> EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(22,Vector(List(), List((14,22), (21,24), \
(15,25)), List((15,22), (20,25), (16,26)), List((16,22), (19,26), (17,27)), \
List((10,24), (13,28), (21,25)), List((12,28), (20,26), (13,25)), \
List((9,28), (18,27), (11,23)), List((9,27), (10,28), (14,24), (17,22)), \
List((11,28), (18,23), (19,27), (12,26))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(22,Vector(List(), List((14,26), (18,25), \
(19,22)), List((15,27), (19,26), (21,22)), List((10,28), (20,27), (11,23)), \
List((12,28), (17,24), (13,22)), List((9,25), (13,28), (18,22)), \
List((11,28), (16,23), (12,24)), List((16,24), (20,23), (21,27), (17,22)), \
List((9,28), (14,25), (15,26), (10,27))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(22,Vector(List(), List((14,27), (21,22), \
(17,26)), List((15,25), (16,27), (20,24)), List((10,28), (18,25), (11,26)), \
List((9,22), (13,28), (19,23)), List((12,28), (19,22), (13,23)), \
List((11,28), (21,26), (12,22)), List((20,25), (16,24), (17,27), (18,26)), \
List((9,28), (14,22), (15,27), (10,25))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
           119*v^12 + 22*d*v^12 - 179*v^14 + 100*d*v^14 - 590*v^16 + 
           276*d*v^16 - 986*v^18 + 472*d*v^18 - 836*v^20 + 616*d*v^20 + 
           d^2*v^20 - 25*v^22 + 431*d*v^22 + 27*d^2*v^22 + 1764*v^24 - 
           52*d*v^24 + 140*d^2*v^24 + 3547*v^26 - 915*d*v^26 + 346*d^2*v^26 + 
           4794*v^28 - 1331*d*v^28 + 602*d^2*v^28 + 3687*v^30 - 1094*d*v^30 + 
           725*d^2*v^30 + 772*v^32 + 770*d*v^32 + 675*d^2*v^32 + 
           23*d^3*v^32 - 4215*v^34 + 3292*d*v^34 + 280*d^2*v^34 + 
           96*d^3*v^34 - 7761*v^36 + 6383*d*v^36 - 149*d^2*v^36 + 
           240*d^3*v^36 - 8967*v^38 + 7166*d*v^38 - 343*d^2*v^38 + 
           355*d^3*v^38 - 4491*v^40 + 6111*d*v^40 + 183*d^2*v^40 + 
           450*d^3*v^40 + d^4*v^40 + 2784*v^42 + 1421*d*v^42 + 
           1341*d^2*v^42 + 415*d^3*v^42 + 9*d^4*v^42 + 12236*v^44 - 
           2970*d*v^44 + 2983*d^2*v^44 + 365*d^3*v^44 + 37*d^4*v^44 + 
           17031*v^46 - 7114*d*v^46 + 4272*d^2*v^46 + 236*d^3*v^46 + 
           72*d^4*v^46 + 16831*v^48 - 5688*d*v^48 + 4595*d^2*v^48 + 
           321*d^3*v^48 + 100*d^4*v^48 + 8204*v^50 - 1600*d*v^50 + 
           3551*d^2*v^50 + 499*d^3*v^50 + 98*d^4*v^50 - 2491*v^52 + 
           6832*d*v^52 + 1867*d^2*v^52 + 843*d^3*v^52 + 102*d^4*v^52 + 
           d^5*v^52 - 13542*v^54 + 12496*d*v^54 + 153*d^2*v^54 + 
           1083*d^3*v^54 + 88*d^4*v^54 + 3*d^5*v^54 - 16712*v^56 + 
           16270*d*v^56 - 578*d^2*v^56 + 1308*d^3*v^56 + 76*d^4*v^56 + 
           6*d^5*v^56 - 13542*v^58 + 12496*d*v^58 + 153*d^2*v^58 + 
           1083*d^3*v^58 + 88*d^4*v^58 + 3*d^5*v^58 - 2491*v^60 + 
           6832*d*v^60 + 1867*d^2*v^60 + 843*d^3*v^60 + 102*d^4*v^60 + 
           d^5*v^60 + 8204*v^62 - 1600*d*v^62 + 3551*d^2*v^62 + 
           499*d^3*v^62 + 98*d^4*v^62 + 16831*v^64 - 5688*d*v^64 + 
           4595*d^2*v^64 + 321*d^3*v^64 + 100*d^4*v^64 + 17031*v^66 - 
           7114*d*v^66 + 4272*d^2*v^66 + 236*d^3*v^66 + 72*d^4*v^66 + 
           12236*v^68 - 2970*d*v^68 + 2983*d^2*v^68 + 365*d^3*v^68 + 
           37*d^4*v^68 + 2784*v^70 + 1421*d*v^70 + 1341*d^2*v^70 + 
           415*d^3*v^70 + 9*d^4*v^70 - 4491*v^72 + 6111*d*v^72 + 
           183*d^2*v^72 + 450*d^3*v^72 + d^4*v^72 - 8967*v^74 + 7166*d*v^74 - 
           343*d^2*v^74 + 355*d^3*v^74 - 7761*v^76 + 6383*d*v^76 - 
           149*d^2*v^76 + 240*d^3*v^76 - 4215*v^78 + 3292*d*v^78 + 
           280*d^2*v^78 + 96*d^3*v^78 + 772*v^80 + 770*d*v^80 + 
           675*d^2*v^80 + 23*d^3*v^80 + 3687*v^82 - 1094*d*v^82 + 
           725*d^2*v^82 + 4794*v^84 - 1331*d*v^84 + 602*d^2*v^84 + 
           3547*v^86 - 915*d*v^86 + 346*d^2*v^86 + 1764*v^88 - 52*d*v^88 + 
           140*d^2*v^88 - 25*v^90 + 431*d*v^90 + 27*d^2*v^90 - 836*v^92 + 
           616*d*v^92 + d^2*v^92 - 986*v^94 + 472*d*v^94 - 590*v^96 + 
           276*d*v^96 - 179*v^98 + 100*d*v^98 + 119*v^100 + 22*d*v^100 + 
           195*v^102 + d*v^102 + 165*v^104 + 90*v^106 + 35*v^108 + 8*v^110 + 
           v^112))/((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*
          (1 + d*v^8 + v^16)^5), Subscript[p, 59] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 94*v^6 + 169*v^8 + 208*v^10 + d*v^10 + 
           113*v^12 + 18*d*v^12 - 178*v^14 + 96*d*v^14 - 645*v^16 + 
           271*d*v^16 - 1000*v^18 + 498*d*v^18 - 881*v^20 + 638*d*v^20 + 
           d^2*v^20 + 106*v^22 + 523*d*v^22 + 19*d^2*v^22 + 1879*v^24 - 
           24*d*v^24 + 124*d^2*v^24 + 3852*v^26 - 861*d*v^26 + 340*d^2*v^26 + 
           4725*v^28 - 1536*d*v^28 + 604*d^2*v^28 + 3374*v^30 - 1339*d*v^30 + 
           756*d^2*v^30 - 606*v^32 + 21*d*v^32 + 702*d^2*v^32 + 10*d^3*v^32 - 
           6097*v^34 + 2472*d*v^34 + 281*d^2*v^34 + 79*d^3*v^34 - 
           10663*v^36 + 4853*d*v^36 - 360*d^2*v^36 + 208*d^3*v^36 - 
           11400*v^38 + 5581*d*v^38 - 832*d^2*v^38 + 331*d^3*v^38 - 
           6711*v^40 + 3485*d*v^40 - 773*d^2*v^40 + 383*d^3*v^40 + 
           2414*v^42 - 1165*d*v^42 - 133*d^2*v^42 + 371*d^3*v^42 + 
           2*d^4*v^42 + 12490*v^44 - 6719*d*v^44 + 1003*d^2*v^44 + 
           218*d^3*v^44 + 26*d^4*v^44 + 18600*v^46 - 10472*d*v^46 + 
           2010*d^2*v^46 + 36*d^3*v^46 + 57*d^4*v^46 + 17132*v^48 - 
           9852*d*v^48 + 2143*d^2*v^48 - 78*d^3*v^48 + 77*d^4*v^48 + 
           7687*v^50 - 4673*d*v^50 + 1210*d^2*v^50 - 9*d^3*v^50 + 
           69*d^4*v^50 - 5963*v^52 + 3226*d*v^52 - 292*d^2*v^52 + 
           65*d^3*v^52 + 74*d^4*v^52 - 18004*v^54 + 10219*d*v^54 - 
           1823*d^2*v^54 + 280*d^3*v^54 + 52*d^4*v^54 + 3*d^5*v^54 - 
           22726*v^56 + 13158*d*v^56 - 2480*d^2*v^56 + 352*d^3*v^56 + 
           46*d^4*v^56 + 5*d^5*v^56 - 18004*v^58 + 10219*d*v^58 - 
           1823*d^2*v^58 + 280*d^3*v^58 + 52*d^4*v^58 + 3*d^5*v^58 - 
           5963*v^60 + 3226*d*v^60 - 292*d^2*v^60 + 65*d^3*v^60 + 
           74*d^4*v^60 + 7687*v^62 - 4673*d*v^62 + 1210*d^2*v^62 - 
           9*d^3*v^62 + 69*d^4*v^62 + 17132*v^64 - 9852*d*v^64 + 
           2143*d^2*v^64 - 78*d^3*v^64 + 77*d^4*v^64 + 18600*v^66 - 
           10472*d*v^66 + 2010*d^2*v^66 + 36*d^3*v^66 + 57*d^4*v^66 + 
           12490*v^68 - 6719*d*v^68 + 1003*d^2*v^68 + 218*d^3*v^68 + 
           26*d^4*v^68 + 2414*v^70 - 1165*d*v^70 - 133*d^2*v^70 + 
           371*d^3*v^70 + 2*d^4*v^70 - 6711*v^72 + 3485*d*v^72 - 
           773*d^2*v^72 + 383*d^3*v^72 - 11400*v^74 + 5581*d*v^74 - 
           832*d^2*v^74 + 331*d^3*v^74 - 10663*v^76 + 4853*d*v^76 - 
           360*d^2*v^76 + 208*d^3*v^76 - 6097*v^78 + 2472*d*v^78 + 
           281*d^2*v^78 + 79*d^3*v^78 - 606*v^80 + 21*d*v^80 + 702*d^2*v^80 + 
           10*d^3*v^80 + 3374*v^82 - 1339*d*v^82 + 756*d^2*v^82 + 4725*v^84 - 
           1536*d*v^84 + 604*d^2*v^84 + 3852*v^86 - 861*d*v^86 + 
           340*d^2*v^86 + 1879*v^88 - 24*d*v^88 + 124*d^2*v^88 + 106*v^90 + 
           523*d*v^90 + 19*d^2*v^90 - 881*v^92 + 638*d*v^92 + d^2*v^92 - 
           1000*v^94 + 498*d*v^94 - 645*v^96 + 271*d*v^96 - 178*v^98 + 
           96*d*v^98 + 113*v^100 + 18*d*v^100 + 208*v^102 + d*v^102 + 
           169*v^104 + 94*v^106 + 35*v^108 + 8*v^110 + v^112))/
         ((1 - v + v^2)^3*(1 + v + v^2)^3*(1 + v^4)^5*(1 + d*v^8 + v^16)^5), 
       Subscript[p, 60] -> d/v^12, Subscript[p, 61] -> 
        (d*(-1 + v)*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + 
           d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + 
           v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 
           6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - 
           d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + 
           v^36))/(v^2*(1 + v^4)^2*(1 + d*v^8 + v^16)^2), 
       Subscript[p, 62] -> -(d/v^6), Subscript[p, 63] -> -(d*v^6), 
       Subscript[p, 64] -> -(d*v^6), Subscript[p, 65] -> -(d/v^6), 
       Subscript[p, 66] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^
            2)/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 67] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 68] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 69] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 70] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 71] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 72] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 
            12*v^8 + d*v^8 - 14*v^10 - d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 
            6*d*v^14 + v^16 - 6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + 
            v^20 - 6*d*v^20 - 6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 
            14*v^26 - d*v^26 - 12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 
            3*v^34 + v^36))/((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       Subscript[p, 73] -> -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          (v^6*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 74] -> 
        -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
          ((1 + v^4)^2*(1 + d*v^8 + v^16)^2)), Subscript[p, 75] -> 
        (d*(1 + 10*v^2 + 54*v^4 + 191*v^6 + 470*v^8 + 838*v^10 + d*v^10 + 
           1032*v^12 + 19*d*v^12 + 566*v^14 + 144*d*v^14 - 996*v^16 + 
           588*d*v^16 - 3579*v^18 + 1567*d*v^18 - 5814*v^20 + 2950*d*v^20 + 
           d^2*v^20 - 5419*v^22 + 4064*d*v^22 + 19*d^2*v^22 + 335*v^24 + 
           3595*d*v^24 + 183*d^2*v^24 + 11601*v^26 + 272*d*v^26 + 
           850*d^2*v^26 + 25092*v^28 - 5925*d*v^28 + 2295*d^2*v^28 + 
           31801*v^30 - 12347*d*v^30 + 4353*d^2*v^30 + 22531*v^32 - 
           14126*d*v^32 + 6043*d^2*v^32 + 8*d^3*v^32 - 8857*v^34 - 
           6632*d*v^34 + 6089*d^2*v^34 + 120*d^3*v^34 - 55355*v^36 + 
           11355*d*v^36 + 2736*d^2*v^36 + 659*d^3*v^36 - 98421*v^38 + 
           33177*d*v^38 - 3679*d^2*v^38 + 1766*d^3*v^38 - 109169*v^40 + 
           45778*d*v^40 - 11005*d^2*v^40 + 3216*d^3*v^40 - 67316*v^42 + 
           34510*d*v^42 - 14585*d^2*v^42 + 4326*d^3*v^42 + d^4*v^42 + 
           27930*v^44 - 5381*d*v^44 - 11470*d^2*v^44 + 4516*d^3*v^44 + 
           43*d^4*v^44 + 144627*v^46 - 63942*d*v^46 + 31*d^2*v^46 + 
           2818*d^3*v^46 + 291*d^4*v^46 + 229886*v^48 - 113640*d*v^48 + 
           14862*d^2*v^48 - 326*d^3*v^48 + 737*d^4*v^48 + 228897*v^50 - 
           122067*d*v^50 + 25047*d^2*v^50 - 3762*d^3*v^50 + 1227*d^4*v^50 + 
           119475*v^52 - 70420*d*v^52 + 22550*d^2*v^52 - 5488*d^3*v^52 + 
           1500*d^4*v^52 - 71045*v^54 + 32068*d*v^54 + 6503*d^2*v^54 - 
           5194*d^3*v^54 + 1606*d^4*v^54 + 6*d^5*v^54 - 267019*v^56 + 
           144628*d*v^56 - 17881*d^2*v^56 - 1706*d^3*v^56 + 1150*d^4*v^56 + 
           68*d^5*v^56 - 376710*v^58 + 213916*d*v^58 - 37503*d^2*v^58 + 
           2210*d^3*v^58 + 596*d^4*v^58 + 146*d^5*v^58 - 336074*v^60 + 
           194909*d*v^60 - 40117*d^2*v^60 + 5263*d^3*v^60 - 22*d^4*v^60 + 
           204*d^5*v^60 - 146239*v^62 + 86990*d*v^62 - 21840*d^2*v^62 + 
           4724*d^3*v^62 - 61*d^4*v^62 + 194*d^5*v^62 + 120185*v^64 - 
           71991*d*v^64 + 9158*d^2*v^64 + 3268*d^3*v^64 - 249*d^4*v^64 + 
           216*d^5*v^64 + 349711*v^66 - 209273*d*v^66 + 38635*d^2*v^66 - 
           168*d^3*v^66 + 224*d^4*v^66 + 168*d^5*v^66 + 6*d^6*v^66 + 
           439768*v^68 - 265350*d*v^68 + 50730*d^2*v^68 - 980*d^3*v^68 + 
           234*d^4*v^68 + 160*d^5*v^68 + 10*d^6*v^68 + 349711*v^70 - 
           209273*d*v^70 + 38635*d^2*v^70 - 168*d^3*v^70 + 224*d^4*v^70 + 
           168*d^5*v^70 + 6*d^6*v^70 + 120185*v^72 - 71991*d*v^72 + 
           9158*d^2*v^72 + 3268*d^3*v^72 - 249*d^4*v^72 + 216*d^5*v^72 - 
           146239*v^74 + 86990*d*v^74 - 21840*d^2*v^74 + 4724*d^3*v^74 - 
           61*d^4*v^74 + 194*d^5*v^74 - 336074*v^76 + 194909*d*v^76 - 
           40117*d^2*v^76 + 5263*d^3*v^76 - 22*d^4*v^76 + 204*d^5*v^76 - 
           376710*v^78 + 213916*d*v^78 - 37503*d^2*v^78 + 2210*d^3*v^78 + 
           596*d^4*v^78 + 146*d^5*v^78 - 267019*v^80 + 144628*d*v^80 - 
           17881*d^2*v^80 - 1706*d^3*v^80 + 1150*d^4*v^80 + 68*d^5*v^80 - 
           71045*v^82 + 32068*d*v^82 + 6503*d^2*v^82 - 5194*d^3*v^82 + 
           1606*d^4*v^82 + 6*d^5*v^82 + 119475*v^84 - 70420*d*v^84 + 
           22550*d^2*v^84 - 5488*d^3*v^84 + 1500*d^4*v^84 + 228897*v^86 - 
           122067*d*v^86 + 25047*d^2*v^86 - 3762*d^3*v^86 + 1227*d^4*v^86 + 
           229886*v^88 - 113640*d*v^88 + 14862*d^2*v^88 - 326*d^3*v^88 + 
           737*d^4*v^88 + 144627*v^90 - 63942*d*v^90 + 31*d^2*v^90 + 
           2818*d^3*v^90 + 291*d^4*v^90 + 27930*v^92 - 5381*d*v^92 - 
           11470*d^2*v^92 + 4516*d^3*v^92 + 43*d^4*v^92 - 67316*v^94 + 
           34510*d*v^94 - 14585*d^2*v^94 + 4326*d^3*v^94 + d^4*v^94 - 
           109169*v^96 + 45778*d*v^96 - 11005*d^2*v^96 + 3216*d^3*v^96 - 
           98421*v^98 + 33177*d*v^98 - 3679*d^2*v^98 + 1766*d^3*v^98 - 
           55355*v^100 + 11355*d*v^100 + 2736*d^2*v^100 + 659*d^3*v^100 - 
           8857*v^102 - 6632*d*v^102 + 6089*d^2*v^102 + 120*d^3*v^102 + 
           22531*v^104 - 14126*d*v^104 + 6043*d^2*v^104 + 8*d^3*v^104 + 
           31801*v^106 - 12347*d*v^106 + 4353*d^2*v^106 + 25092*v^108 - 
           5925*d*v^108 + 2295*d^2*v^108 + 11601*v^110 + 272*d*v^110 + 
           850*d^2*v^110 + 335*v^112 + 3595*d*v^112 + 183*d^2*v^112 - 
           5419*v^114 + 4064*d*v^114 + 19*d^2*v^114 - 5814*v^116 + 
           2950*d*v^116 + d^2*v^116 - 3579*v^118 + 1567*d*v^118 - 996*v^120 + 
           588*d*v^120 + 566*v^122 + 144*d*v^122 + 1032*v^124 + 19*d*v^124 + 
           838*v^126 + d*v^126 + 470*v^128 + 191*v^130 + 54*v^132 + 
           10*v^134 + v^136))/((1 - v + v^2)^4*(1 + v + v^2)^4*(1 + v^4)^6*
          (1 + d*v^8 + v^16)^6), Subscript[p, 76] -> 
        (d*(-1 + v)*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
          (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
           d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 6*d*v^16 + 
           6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 6*v^22 - 
           6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 12*v^28 + 
           d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
         (v^2*(1 + v^4)^3*(1 + d*v^8 + v^16)^3), Subscript[p, 77] -> 
        -((d*(-1 + v)*v^4*(1 + v)*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)*
           (1 - 3*v^2 - 5*v^4 - 8*v^6 - d*v^6 - 12*v^8 + d*v^8 - 14*v^10 - 
            d*v^10 - 5*v^12 - 4*d*v^12 - 6*v^14 - 6*d*v^14 + v^16 - 
            6*d*v^16 + 6*v^18 - 12*d*v^18 + d^2*v^18 + v^20 - 6*d*v^20 - 
            6*v^22 - 6*d*v^22 - 5*v^24 - 4*d*v^24 - 14*v^26 - d*v^26 - 
            12*v^28 + d*v^28 - 8*v^30 - d*v^30 - 5*v^32 - 3*v^34 + v^36))/
          ((1 + v^4)^3*(1 + d*v^8 + v^16)^3)), Subscript[p, 78] -> 
        (d*(1 + 20*v^2 + 209*v^4 + 1483*v^6 + 7926*v^8 + 33573*v^10 + 
           d*v^10 + 115943*v^12 + 37*d*v^12 + 331386*v^14 + 528*d*v^14 + 
           787391*v^16 + 4682*d*v^16 + 1539487*v^18 + 29654*d*v^18 + 
           2379618*v^20 + 143635*d*v^20 + d^2*v^20 + 2525985*v^22 + 
           552599*d*v^22 + 37*d^2*v^22 + 461733*v^24 + 1730217*d*v^24 + 
           657*d^2*v^24 - 5566212*v^26 + 4471323*d*v^26 + 7043*d^2*v^26 - 
           15821670*v^28 + 9570086*d*v^28 + 52410*d^2*v^28 - 26205354*v^30 + 
           16728612*d*v^30 + 288591*d^2*v^30 - 25783088*v^32 + 
           22650402*d*v^32 + 1226600*d^2*v^32 + 16*d^3*v^32 + 1771881*v^34 + 
           19303510*d*v^34 + 4149879*d^2*v^34 + 428*d^3*v^34 + 
           68956839*v^36 - 5060329*d*v^36 + 11435322*d^2*v^36 + 
           5993*d^3*v^36 + 166489765*v^38 - 58892500*d*v^38 + 
           26006456*d^2*v^38 + 54331*d^3*v^38 + 244299460*v^40 - 
           133092611*d*v^40 + 48828287*d^2*v^40 + 347621*d^3*v^40 + 
           208402738*v^42 - 185057227*d*v^42 + 73994955*d^2*v^42 + 
           1645532*d^3*v^42 + d^4*v^42 - 43565339*v^44 - 135153984*d*v^44 + 
           83441988*d^2*v^44 + 6005021*d^3*v^44 + 134*d^4*v^44 - 
           540295640*v^46 + 104778963*d*v^46 + 46945018*d^2*v^46 + 
           17481021*d^3*v^46 + 2946*d^4*v^46 - 1130306731*v^48 + 
           561894596*d*v^48 - 64495261*d^2*v^48 + 41592649*d^3*v^48 + 
           35359*d^4*v^48 - 1425115721*v^50 + 1110748207*d*v^50 - 
           248174473*d^2*v^50 + 81826526*d^3*v^50 + 273774*d^4*v^50 - 
           882233590*v^52 + 1422012902*d*v^52 - 430765932*d^2*v^52 + 
           132407026*d^3*v^52 + 1470623*d^4*v^52 + 900786430*v^54 + 
           1034660746*d*v^54 - 449790643*d^2*v^54 + 169875488*d^3*v^54 + 
           5803478*d^4*v^54 + 13*d^5*v^54 + 3748272973*v^56 - 
           390719812*d*v^56 - 93532146*d^2*v^56 + 151413749*d^3*v^56 + 
           17735898*d^4*v^56 + 795*d^5*v^56 + 6528848953*v^58 - 
           2693798743*d*v^58 + 774055235*d^2*v^58 + 30354107*d^3*v^58 + 
           43620011*d^4*v^58 + 14594*d^5*v^58 + 7209618041*v^60 - 
           4908041044*d*v^60 + 2034206611*d^2*v^60 - 205066374*d^3*v^60 + 
           88381712*d^4*v^60 + 146190*d^5*v^60 + 3598808966*v^62 - 
           5342473710*d*v^62 + 3176686879*d^2*v^62 - 481506923*d^3*v^62 + 
           148635535*d^4*v^62 + 915552*d^5*v^62 - 5207955590*v^64 - 
           2270290933*d*v^64 + 3360498075*d^2*v^64 - 609979548*d^3*v^64 + 
           204683216*d^4*v^64 + 3927308*d^5*v^64 - 17286778304*v^66 + 
           4828893545*d*v^66 + 1771223409*d^2*v^66 - 323860353*d^3*v^66 + 
           218624574*d^4*v^66 + 12515804*d^5*v^66 + 89*d^6*v^66 - 
           27190556310*v^68 + 14057744811*d*v^68 - 1765751565*d^2*v^68 + 
           591375401*d^3*v^68 + 147201031*d^4*v^68 + 31445286*d^5*v^68 + 
           3644*d^6*v^68 - 27231181979*v^70 + 20777583127*d*v^70 - 
           6216215969*d^2*v^70 + 2096977186*d^3*v^70 - 26417772*d^4*v^70 + 
           64603966*d^5*v^70 + 52924*d^6*v^70 - 10970704961*v^72 + 
           19062404833*d*v^72 - 9239334813*d^2*v^72 + 3744065972*d^3*v^72 - 
           252869321*d^4*v^72 + 110670342*d^5*v^72 + 403251*d^6*v^72 + 
           21937272603*v^74 + 4875324375*d*v^74 - 7957214662*d^2*v^74 + 
           4691028088*d^3*v^74 - 392424260*d^4*v^74 + 158246898*d^5*v^74 + 
           1893358*d^6*v^74 + 62116482896*v^76 - 20072398468*d*v^76 - 
           521726972*d^2*v^76 + 4025660003*d^3*v^76 - 242105160*d^4*v^76 + 
           185424171*d^5*v^76 + 6243351*d^6*v^76 + d^7*v^76 + 
           90796739949*v^78 - 46251828805*d*v^78 + 12112518427*d^2*v^78 + 
           1313374663*d^3*v^78 + 373691553*d^4*v^78 + 167492256*d^5*v^78 + 
           15803470*d^6*v^78 + 467*d^7*v^78 + 86150860841*v^80 - 
           58096557663*d*v^80 + 25381584010*d^2*v^80 - 2833293694*d^3*v^80 + 
           1467151906*d^4*v^80 + 94829312*d^5*v^80 + 32385664*d^6*v^80 + 
           12567*d^7*v^80 + 34374249534*v^82 - 40788897638*d*v^82 + 
           32200788625*d^2*v^82 - 6600784227*d^3*v^82 + 2784557657*d^4*v^82 - 
           8161794*d^5*v^82 + 55456263*d^6*v^82 + 124400*d^7*v^82 - 
           58676528151*v^84 + 10389664347*d*v^84 + 26244775706*d^2*v^84 - 
           7468598556*d^3*v^84 + 3815964056*d^4*v^84 - 72435962*d^5*v^84 + 
           80341628*d^6*v^84 + 646843*d^7*v^84 - 162307471557*v^86 + 
           82324302324*d*v^86 + 6083814031*d^2*v^86 - 3415437635*d^3*v^86 + 
           3983818754*d^4*v^86 - 1379456*d^5*v^86 + 98659927*d^6*v^86 + 
           2183795*d^7*v^86 - 227517021634*v^88 + 144220301883*d*v^88 - 
           21895325623*d^2*v^88 + 5732739085*d^3*v^88 + 2957762583*d^4*v^88 + 
           287572282*d^5*v^88 + 101804002*d^6*v^88 + 5473065*d^7*v^88 + 
           24*d^8*v^88 - 206518540570*v^90 + 157929780146*d*v^90 - 
           44408318944*d^2*v^90 + 17489907592*d^3*v^90 + 962340836*d^4*v^90 + 
           803476352*d^5*v^90 + 87494676*d^6*v^90 + 10957914*d^7*v^90 + 
           1784*d^8*v^90 - 78411010292*v^92 + 97246608878*d*v^92 - 
           46496712114*d^2*v^92 + 27248714217*d^3*v^92 - 1133302123*d^4*
            v^92 + 1448482335*d^5*v^92 + 64926885*d^6*v^92 + 
           18363349*d^7*v^92 + 25780*d^8*v^92 + 130508077023*v^94 - 
           33266499625*d*v^94 - 19811154509*d^2*v^94 + 30152898875*d^3*v^94 - 
           2065368496*d^4*v^94 + 2026582013*d^5*v^94 + 56562954*d^6*v^94 + 
           26309097*d^7*v^94 + 151662*d^8*v^94 + 345443069518*v^96 - 
           189630750408*d*v^96 + 30694606249*d^2*v^96 + 23714950738*d^3*
            v^96 - 730425522*d^4*v^96 + 2324271163*d^5*v^96 + 
           90557059*d^6*v^96 + 32742274*d^7*v^96 + 517722*d^8*v^96 + 
           466377265020*v^98 - 300028991667*d*v^98 + 85446933987*d^2*v^98 + 
           9702087465*d^3*v^98 + 3184076931*d^4*v^98 + 2217856388*d^5*v^98 + 
           187919840*d^6*v^98 + 35941501*d^7*v^98 + 1253262*d^8*v^98 + 
           411528377605*v^100 - 294215749780*d*v^100 + 117502057250*d^2*
            v^100 - 5863928243*d^3*v^100 + 8864625882*d^4*v^100 + 
           1771695880*d^5*v^100 + 347494054*d^6*v^100 + 36043968*d^7*v^100 + 
           2380084*d^8*v^100 + 116*d^9*v^100 + 162164773569*v^102 - 
           141686017445*d*v^102 + 105364922187*d^2*v^102 - 
           15119233058*d^3*v^102 + 14538524491*d^4*v^102 + 
           1244784847*d^5*v^102 + 542014023*d^6*v^102 + 35398043*d^7*v^102 + 
           3787934*d^8*v^102 + 3194*d^9*v^102 - 212780764711*v^104 + 
           122779851366*d*v^104 + 46444398060*d^2*v^104 - 
           12158592621*d^3*v^104 + 18218513942*d^4*v^104 + 
           1004467335*d^5*v^104 + 724779406*d^6*v^104 + 38443174*d^7*v^104 + 
           5205946*d^8*v^104 + 22714*d^9*v^104 - 571225208616*v^106 + 
           400220084845*d*v^106 - 37750551817*d^2*v^106 + 
           3618394505*d^3*v^106 + 18587186676*d^4*v^106 + 
           1361920224*d^5*v^106 + 850239499*d^6*v^106 + 49564947*d^7*v^106 + 
           6331956*d^8*v^106 + 77498*d^9*v^106 - 750473851510*v^108 + 
           564095951299*d*v^108 - 107970963405*d^2*v^108 + 
           26633013657*d^3*v^108 + 15733130697*d^4*v^108 + 
           2412158470*d^5*v^108 + 897022692*d^6*v^108 + 70798624*d^7*v^108 + 
           7024944*d^8*v^108 + 174524*d^9*v^108 - 640828442031*v^110 + 
           516568097720*d*v^110 - 125323898439*d^2*v^110 + 
           47491054570*d^3*v^110 + 11096964522*d^4*v^110 + 
           3976303074*d^5*v^110 + 879273800*d^6*v^110 + 100166501*d^7*v^110 + 
           7443162*d^8*v^110 + 298818*d^9*v^110 - 244855223085*v^112 + 
           242969263551*d*v^112 - 71482965631*d^2*v^112 + 
           57593119837*d^3*v^112 + 6921552455*d^4*v^112 + 
           5653346975*d^5*v^112 + 843258335*d^6*v^112 + 132496450*d^7*v^112 + 
           7929478*d^8*v^112 + 429030*d^9*v^112 + 186*d^10*v^112 + 
           306404318060*v^114 - 168764320979*d*v^114 + 38172145142*d^2*
            v^114 + 53610464579*d^3*v^114 + 5098591262*d^4*v^114 + 
           7009959935*d^5*v^114 + 841863743*d^6*v^114 + 161678981*d^7*v^114 + 
           8867120*d^8*v^114 + 539384*d^9*v^114 + 1904*d^10*v^114 + 
           797320069501*v^116 - 553819598400*d*v^116 + 158378584890*d^2*
            v^116 + 39239668423*d^3*v^116 + 6502029606*d^4*v^116 + 
           7725215895*d^5*v^116 + 917127059*d^6*v^116 + 182727755*d^7*v^116 + 
           10509474*d^8*v^116 + 609562*d^9*v^116 + 6534*d^10*v^116 + 
           1014690894868*v^118 - 740268398633*d*v^118 + 233204355135*d^2*
            v^118 + 23210190508*d^3*v^118 + 10546058829*d^4*v^118 + 
           7747695722*d^5*v^118 + 1071495166*d^6*v^118 + 194946396*d^7*
            v^118 + 12652698*d^8*v^118 + 649374*d^9*v^118 + 
           12732*d^10*v^118 + 844581867966*v^120 - 627031563524*d*v^120 + 
           223713875402*d^2*v^120 + 14410089178*d^3*v^120 + 
           15865048538*d^4*v^120 + 7220441386*d^5*v^120 + 
           1283060921*d^6*v^120 + 199953839*d^7*v^120 + 14893480*d^8*v^120 + 
           684544*d^9*v^120 + 17628*d^10*v^120 + 330138900183*v^122 - 
           238939578634*d*v^122 + 128574789084*d^2*v^122 + 
           17029135396*d^3*v^122 + 20835651508*d^4*v^122 + 
           6451622100*d^5*v^122 + 1502189047*d^6*v^122 + 201729487*d^7*
            v^122 + 16745710*d^8*v^122 + 733420*d^9*v^122 + 
           20200*d^10*v^122 + 2*d^11*v^122 - 335822560382*v^124 + 
           277157439706*d*v^124 - 12299433550*d^2*v^124 + 
           28325497608*d^3*v^124 + 24542416022*d^4*v^124 + 
           5698736407*d^5*v^124 + 1691780079*d^6*v^124 + 201965236*d^7*
            v^124 + 18075070*d^8*v^124 + 789948*d^9*v^124 + 
           21256*d^10*v^124 + 66*d^11*v^124 - 888455804564*v^126 + 
           710021092181*d*v^126 - 135570589464*d^2*v^126 + 
           40569969704*d^3*v^126 + 26617168950*d^4*v^126 + 
           5191680472*d^5*v^126 + 1812889189*d^6*v^126 + 202808759*d^7*
            v^126 + 18717968*d^8*v^126 + 850672*d^9*v^126 + 
           20550*d^10*v^126 + 238*d^11*v^126 - 1101903989202*v^128 + 
           878316014234*d*v^128 - 184200326452*d^2*v^128 + 
           45756602388*d^3*v^128 + 27301246852*d^4*v^128 + 
           5002683548*d^5*v^128 + 1857381508*d^6*v^128 + 202848814*d^7*
            v^128 + 18937404*d^8*v^128 + 875724*d^9*v^128 + 
           19952*d^10*v^128 + 344*d^11*v^128 - 888455804564*v^130 + 
           710021092181*d*v^130 - 135570589464*d^2*v^130 + 
           40569969704*d^3*v^130 + 26617168950*d^4*v^130 + 
           5191680472*d^5*v^130 + 1812889189*d^6*v^130 + 202808759*d^7*
            v^130 + 18717968*d^8*v^130 + 850672*d^9*v^130 + 
           20550*d^10*v^130 + 238*d^11*v^130 - 335822560382*v^132 + 
           277157439706*d*v^132 - 12299433550*d^2*v^132 + 
           28325497608*d^3*v^132 + 24542416022*d^4*v^132 + 
           5698736407*d^5*v^132 + 1691780079*d^6*v^132 + 201965236*d^7*
            v^132 + 18075070*d^8*v^132 + 789948*d^9*v^132 + 
           21256*d^10*v^132 + 66*d^11*v^132 + 330138900183*v^134 - 
           238939578634*d*v^134 + 128574789084*d^2*v^134 + 
           17029135396*d^3*v^134 + 20835651508*d^4*v^134 + 
           6451622100*d^5*v^134 + 1502189047*d^6*v^134 + 201729487*d^7*
            v^134 + 16745710*d^8*v^134 + 733420*d^9*v^134 + 
           20200*d^10*v^134 + 2*d^11*v^134 + 844581867966*v^136 - 
           627031563524*d*v^136 + 223713875402*d^2*v^136 + 
           14410089178*d^3*v^136 + 15865048538*d^4*v^136 + 
           7220441386*d^5*v^136 + 1283060921*d^6*v^136 + 199953839*d^7*
            v^136 + 14893480*d^8*v^136 + 684544*d^9*v^136 + 
           17628*d^10*v^136 + 1014690894868*v^138 - 740268398633*d*v^138 + 
           233204355135*d^2*v^138 + 23210190508*d^3*v^138 + 
           10546058829*d^4*v^138 + 7747695722*d^5*v^138 + 
           1071495166*d^6*v^138 + 194946396*d^7*v^138 + 12652698*d^8*v^138 + 
           649374*d^9*v^138 + 12732*d^10*v^138 + 797320069501*v^140 - 
           553819598400*d*v^140 + 158378584890*d^2*v^140 + 
           39239668423*d^3*v^140 + 6502029606*d^4*v^140 + 
           7725215895*d^5*v^140 + 917127059*d^6*v^140 + 182727755*d^7*v^140 + 
           10509474*d^8*v^140 + 609562*d^9*v^140 + 6534*d^10*v^140 + 
           306404318060*v^142 - 168764320979*d*v^142 + 38172145142*d^2*
            v^142 + 53610464579*d^3*v^142 + 5098591262*d^4*v^142 + 
           7009959935*d^5*v^142 + 841863743*d^6*v^142 + 161678981*d^7*v^142 + 
           8867120*d^8*v^142 + 539384*d^9*v^142 + 1904*d^10*v^142 - 
           244855223085*v^144 + 242969263551*d*v^144 - 71482965631*d^2*
            v^144 + 57593119837*d^3*v^144 + 6921552455*d^4*v^144 + 
           5653346975*d^5*v^144 + 843258335*d^6*v^144 + 132496450*d^7*v^144 + 
           7929478*d^8*v^144 + 429030*d^9*v^144 + 186*d^10*v^144 - 
           640828442031*v^146 + 516568097720*d*v^146 - 125323898439*d^2*
            v^146 + 47491054570*d^3*v^146 + 11096964522*d^4*v^146 + 
           3976303074*d^5*v^146 + 879273800*d^6*v^146 + 100166501*d^7*v^146 + 
           7443162*d^8*v^146 + 298818*d^9*v^146 - 750473851510*v^148 + 
           564095951299*d*v^148 - 107970963405*d^2*v^148 + 
           26633013657*d^3*v^148 + 15733130697*d^4*v^148 + 
           2412158470*d^5*v^148 + 897022692*d^6*v^148 + 70798624*d^7*v^148 + 
           7024944*d^8*v^148 + 174524*d^9*v^148 - 571225208616*v^150 + 
           400220084845*d*v^150 - 37750551817*d^2*v^150 + 
           3618394505*d^3*v^150 + 18587186676*d^4*v^150 + 
           1361920224*d^5*v^150 + 850239499*d^6*v^150 + 49564947*d^7*v^150 + 
           6331956*d^8*v^150 + 77498*d^9*v^150 - 212780764711*v^152 + 
           122779851366*d*v^152 + 46444398060*d^2*v^152 - 
           12158592621*d^3*v^152 + 18218513942*d^4*v^152 + 
           1004467335*d^5*v^152 + 724779406*d^6*v^152 + 38443174*d^7*v^152 + 
           5205946*d^8*v^152 + 22714*d^9*v^152 + 162164773569*v^154 - 
           141686017445*d*v^154 + 105364922187*d^2*v^154 - 
           15119233058*d^3*v^154 + 14538524491*d^4*v^154 + 
           1244784847*d^5*v^154 + 542014023*d^6*v^154 + 35398043*d^7*v^154 + 
           3787934*d^8*v^154 + 3194*d^9*v^154 + 411528377605*v^156 - 
           294215749780*d*v^156 + 117502057250*d^2*v^156 - 
           5863928243*d^3*v^156 + 8864625882*d^4*v^156 + 1771695880*d^5*
            v^156 + 347494054*d^6*v^156 + 36043968*d^7*v^156 + 
           2380084*d^8*v^156 + 116*d^9*v^156 + 466377265020*v^158 - 
           300028991667*d*v^158 + 85446933987*d^2*v^158 + 
           9702087465*d^3*v^158 + 3184076931*d^4*v^158 + 2217856388*d^5*
            v^158 + 187919840*d^6*v^158 + 35941501*d^7*v^158 + 
           1253262*d^8*v^158 + 345443069518*v^160 - 189630750408*d*v^160 + 
           30694606249*d^2*v^160 + 23714950738*d^3*v^160 - 
           730425522*d^4*v^160 + 2324271163*d^5*v^160 + 90557059*d^6*v^160 + 
           32742274*d^7*v^160 + 517722*d^8*v^160 + 130508077023*v^162 - 
           33266499625*d*v^162 - 19811154509*d^2*v^162 + 30152898875*d^3*
            v^162 - 2065368496*d^4*v^162 + 2026582013*d^5*v^162 + 
           56562954*d^6*v^162 + 26309097*d^7*v^162 + 151662*d^8*v^162 - 
           78411010292*v^164 + 97246608878*d*v^164 - 46496712114*d^2*v^164 + 
           27248714217*d^3*v^164 - 1133302123*d^4*v^164 + 
           1448482335*d^5*v^164 + 64926885*d^6*v^164 + 18363349*d^7*v^164 + 
           25780*d^8*v^164 - 206518540570*v^166 + 157929780146*d*v^166 - 
           44408318944*d^2*v^166 + 17489907592*d^3*v^166 + 
           962340836*d^4*v^166 + 803476352*d^5*v^166 + 87494676*d^6*v^166 + 
           10957914*d^7*v^166 + 1784*d^8*v^166 - 227517021634*v^168 + 
           144220301883*d*v^168 - 21895325623*d^2*v^168 + 
           5732739085*d^3*v^168 + 2957762583*d^4*v^168 + 287572282*d^5*
            v^168 + 101804002*d^6*v^168 + 5473065*d^7*v^168 + 24*d^8*v^168 - 
           162307471557*v^170 + 82324302324*d*v^170 + 6083814031*d^2*v^170 - 
           3415437635*d^3*v^170 + 3983818754*d^4*v^170 - 1379456*d^5*v^170 + 
           98659927*d^6*v^170 + 2183795*d^7*v^170 - 58676528151*v^172 + 
           10389664347*d*v^172 + 26244775706*d^2*v^172 - 7468598556*d^3*
            v^172 + 3815964056*d^4*v^172 - 72435962*d^5*v^172 + 
           80341628*d^6*v^172 + 646843*d^7*v^172 + 34374249534*v^174 - 
           40788897638*d*v^174 + 32200788625*d^2*v^174 - 6600784227*d^3*
            v^174 + 2784557657*d^4*v^174 - 8161794*d^5*v^174 + 
           55456263*d^6*v^174 + 124400*d^7*v^174 + 86150860841*v^176 - 
           58096557663*d*v^176 + 25381584010*d^2*v^176 - 2833293694*d^3*
            v^176 + 1467151906*d^4*v^176 + 94829312*d^5*v^176 + 
           32385664*d^6*v^176 + 12567*d^7*v^176 + 90796739949*v^178 - 
           46251828805*d*v^178 + 12112518427*d^2*v^178 + 1313374663*d^3*
            v^178 + 373691553*d^4*v^178 + 167492256*d^5*v^178 + 
           15803470*d^6*v^178 + 467*d^7*v^178 + 62116482896*v^180 - 
           20072398468*d*v^180 - 521726972*d^2*v^180 + 4025660003*d^3*v^180 - 
           242105160*d^4*v^180 + 185424171*d^5*v^180 + 6243351*d^6*v^180 + 
           d^7*v^180 + 21937272603*v^182 + 4875324375*d*v^182 - 
           7957214662*d^2*v^182 + 4691028088*d^3*v^182 - 392424260*d^4*
            v^182 + 158246898*d^5*v^182 + 1893358*d^6*v^182 - 
           10970704961*v^184 + 19062404833*d*v^184 - 9239334813*d^2*v^184 + 
           3744065972*d^3*v^184 - 252869321*d^4*v^184 + 110670342*d^5*v^184 + 
           403251*d^6*v^184 - 27231181979*v^186 + 20777583127*d*v^186 - 
           6216215969*d^2*v^186 + 2096977186*d^3*v^186 - 26417772*d^4*v^186 + 
           64603966*d^5*v^186 + 52924*d^6*v^186 - 27190556310*v^188 + 
           14057744811*d*v^188 - 1765751565*d^2*v^188 + 591375401*d^3*v^188 + 
           147201031*d^4*v^188 + 31445286*d^5*v^188 + 3644*d^6*v^188 - 
           17286778304*v^190 + 4828893545*d*v^190 + 1771223409*d^2*v^190 - 
           323860353*d^3*v^190 + 218624574*d^4*v^190 + 12515804*d^5*v^190 + 
           89*d^6*v^190 - 5207955590*v^192 - 2270290933*d*v^192 + 
           3360498075*d^2*v^192 - 609979548*d^3*v^192 + 204683216*d^4*v^192 + 
           3927308*d^5*v^192 + 3598808966*v^194 - 5342473710*d*v^194 + 
           3176686879*d^2*v^194 - 481506923*d^3*v^194 + 148635535*d^4*v^194 + 
           915552*d^5*v^194 + 7209618041*v^196 - 4908041044*d*v^196 + 
           2034206611*d^2*v^196 - 205066374*d^3*v^196 + 88381712*d^4*v^196 + 
           146190*d^5*v^196 + 6528848953*v^198 - 2693798743*d*v^198 + 
           774055235*d^2*v^198 + 30354107*d^3*v^198 + 43620011*d^4*v^198 + 
           14594*d^5*v^198 + 3748272973*v^200 - 390719812*d*v^200 - 
           93532146*d^2*v^200 + 151413749*d^3*v^200 + 17735898*d^4*v^200 + 
           795*d^5*v^200 + 900786430*v^202 + 1034660746*d*v^202 - 
           449790643*d^2*v^202 + 169875488*d^3*v^202 + 5803478*d^4*v^202 + 
           13*d^5*v^202 - 882233590*v^204 + 1422012902*d*v^204 - 
           430765932*d^2*v^204 + 132407026*d^3*v^204 + 1470623*d^4*v^204 - 
           1425115721*v^206 + 1110748207*d*v^206 - 248174473*d^2*v^206 + 
           81826526*d^3*v^206 + 273774*d^4*v^206 - 1130306731*v^208 + 
           561894596*d*v^208 - 64495261*d^2*v^208 + 41592649*d^3*v^208 + 
           35359*d^4*v^208 - 540295640*v^210 + 104778963*d*v^210 + 
           46945018*d^2*v^210 + 17481021*d^3*v^210 + 2946*d^4*v^210 - 
           43565339*v^212 - 135153984*d*v^212 + 83441988*d^2*v^212 + 
           6005021*d^3*v^212 + 134*d^4*v^212 + 208402738*v^214 - 
           185057227*d*v^214 + 73994955*d^2*v^214 + 1645532*d^3*v^214 + 
           d^4*v^214 + 244299460*v^216 - 133092611*d*v^216 + 
           48828287*d^2*v^216 + 347621*d^3*v^216 + 166489765*v^218 - 
           58892500*d*v^218 + 26006456*d^2*v^218 + 54331*d^3*v^218 + 
           68956839*v^220 - 5060329*d*v^220 + 11435322*d^2*v^220 + 
           5993*d^3*v^220 + 1771881*v^222 + 19303510*d*v^222 + 
           4149879*d^2*v^222 + 428*d^3*v^222 - 25783088*v^224 + 
           22650402*d*v^224 + 1226600*d^2*v^224 + 16*d^3*v^224 - 
           26205354*v^226 + 16728612*d*v^226 + 288591*d^2*v^226 - 
           15821670*v^228 + 9570086*d*v^228 + 52410*d^2*v^228 - 
           5566212*v^230 + 4471323*d*v^230 + 7043*d^2*v^230 + 461733*v^232 + 
           1730217*d*v^232 + 657*d^2*v^232 + 2525985*v^234 + 552599*d*v^234 + 
           37*d^2*v^234 + 2379618*v^236 + 143635*d*v^236 + d^2*v^236 + 
           1539487*v^238 + 29654*d*v^238 + 787391*v^240 + 4682*d*v^240 + 
           331386*v^242 + 528*d*v^242 + 115943*v^244 + 37*d*v^244 + 
           33573*v^246 + d*v^246 + 7926*v^248 + 1483*v^250 + 209*v^252 + 
           20*v^254 + v^256))/((1 - v + v^2)^9*(1 + v + v^2)^9*(1 + v^4)^11*
          (1 + d*v^8 + v^16)^11), tt[1] -> -v^12, tt[2] -> -v^(-12), 
       tt[3] -> -1, tt[4] -> -((1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48)/(v^22*(1 + d*v^2 + v^4))), 
       tt[5] -> -((1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
          ((1 + v^4)*(1 + d*v^8 + v^16))), tt[6] -> v^(-6), tt[7] -> v^6, 
       tt[8] -> -1, tt[9] -> -1, tt[10] -> -1, 
       tt[11] -> ((-1 + v)^2*v^8*(1 + v)^2*(1 - v + v^2 - v^3 + v^4)^2*
          (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
          (1 + d*v^8 + v^16)^2), tt[12] -> 
        -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + v^4 + d*v^8 + v^12 - v^14 + v^16))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2)), 
       tt[13] -> (v^2*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
          (1 - v^2 - 3*v^6 + v^8 - 2*v^10 + 2*v^12 - 2*d*v^14 + 2*v^16 - 
           2*v^18 + v^20 - 3*v^22 - v^26 + v^28))/((1 - v + v^2)*
          (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^2), 
       tt[14] -> -((v^2*(1 + v^4 - v^6 + v^8 - 2*v^10 + d*v^10 + v^12 - 
            v^14 + v^16 + v^20)*(1 + v^2 - v^4 - v^6 - 2*v^8 - 4*v^10 + 
            d*v^10 - 2*v^12 - v^14 - v^16 + v^18 + v^20))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*(1 + d*v^8 + v^16)^2)), 
       tt[15] -> -((1 + 2*v^2 + 2*v^4 + v^6 - v^8 - 2*v^10 - 4*v^12 + 
           d*v^12 - 2*v^14 - v^16 + v^18 + 2*v^20 + 2*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[16] -> -((-1 + v^2 - v^4 + v^6 - v^8 - d*v^8 + v^10 - 2*v^12 + 
           v^14 - 2*v^16 + v^18 - v^20 + v^22)/(v^4*(1 - v^2 + v^4)*
           (1 + d*v^2 + v^4))), tt[17] -> (-1 + v^2 - v^4 + 2*v^6 - v^8 + 
          2*v^10 - v^12 + v^14 + d*v^14 - v^16 + v^18 - v^20 + v^22)/
         (v^10*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)), 
       tt[18] -> ((1 + d*v^8 + v^16)*(1 - 2*v^6 - v^8 - 3*v^10 + d*v^10 + 
           2*v^16 + 2*v^18 + 2*v^20 + v^22))/(v^10*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[19] -> ((1 + d*v^8 + v^16)*(1 + 2*v^2 + 2*v^4 + 2*v^6 - 
           3*v^12 + d*v^12 - v^14 - 2*v^16 + v^22))/(v^12*(1 - v^2 + v^4)*
          (1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
           v^4)), tt[20] -> -(((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)/(v^12*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))), 
       tt[21] -> -((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
            8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
            d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
            4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
            v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
           (1 + d*v^8 + v^16)^3)), tt[22] -> 
        -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^2*
           (1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
           (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[23] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[24] -> (v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
           4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
         ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
       tt[25] -> -((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*
           (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3)), 
       tt[26] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[27] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
            2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
           (1 + d*v^8 + v^16)^2)), tt[28] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[29] -> -((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
            2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
           (1 + d*v^8 + v^16)^2)), tt[30] -> 
        -((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
           (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
            v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
       tt[31] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[32] -> -((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + 
           d*v^12 + 8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[33] -> (v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
         (1 + d*v^8 + v^16), tt[34] -> (v^4*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16), 
       tt[35] -> -((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 
            4*v^12 - 5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*
           (1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
       tt[36] -> (v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*
          (1 + v + v^2 + v^3 + v^4))/(1 + d*v^8 + v^16)}, {}, {}, 
      {d, v, -v^6, 1 - v + v^2, 1 + v + v^2, 1 + v^4, 1 - v^2 + v^4, 
       1 + d*v^2 + v^4, 1 - v + v^2 - v^3 + v^4, 1 + v + v^2 + v^3 + v^4, 
       -1 - v^6 + d*v^6 - v^12, 1 + v^6 - d*v^6 + v^12, 
       ((1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
        ((1 + v^4)*(1 + d*v^8 + v^16)), 
       -((v^24*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 + v^6 - d*v^6 + v^12))/
         ((1 + v^4)*(1 + d*v^8 + v^16))), 1 + d*v^8 + v^16, 
       (1 + v^4)*(1 + d*v^8 + v^16), 1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
        v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
        d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
        d*v^30 - v^32 + v^36 - v^38 + v^40, 
       (d^5*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)^2*(1 - v + v^2 - v^3 + v^4)^2*
         (1 + v + v^2 + v^3 + v^4)^2*(-1 - v^6 + d*v^6 - v^12)^2*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
          v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
          v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
          v^40))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^4*
         (1 + d*v^8 + v^16)^5), -((d*(1 - v^2 + v^4)^2*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 - v + v^2)*(1 + v + v^2)*
          (1 + v^4)^3*(1 + d*v^8 + v^16)^4)), 
       ((1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
         (1 + v^6 - d*v^6 + v^12)*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
          v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
          d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
          d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
         (1 + d*v^8 + v^16)^2), (d*(1 - v + v^2)*(1 + v + v^2)*
         (1 - v^2 + v^4)*(-1 - v^6 + d*v^6 - v^12)^2*(1 - v^2 + v^4 - v^8 + 
          v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 
          2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + 
          d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + v^40))/
        ((1 + v^4)^2*(1 + d*v^8 + v^16)), 
       -(((1 - v + v^2)*(1 + v + v^2)*(1 - v^2 + v^4)*
          (1 + v^6 - d*v^6 + v^12)^2*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40))/((1 + v^4)^2*
          (1 + d*v^8 + v^16))), -((d^5*(1 - v^2 + v^4)^4*(1 + d*v^2 + v^4)^2*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^4*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^6*
          (1 + d*v^8 + v^16)^6)), -((d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
          (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
          (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
            v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
            d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
            d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
          (1 + d*v^8 + v^16)^5)), (d*(1 - v^2 + v^4)^3*(1 + d*v^2 + v^4)*
         (1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
         (-1 - v^6 + d*v^6 - v^12)^3*(1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + 
           v^12 + d*v^12 - v^14 + v^16 + v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + 
           d^2*v^20 + v^22 + d*v^22 + v^24 - v^26 + v^28 + d*v^28 + v^30 + 
           d*v^30 - v^32 + v^36 - v^38 + v^40)^2)/((1 + v^4)^5*
         (1 + d*v^8 + v^16)^5), ((1 - v + v^2)^2*(1 + v + v^2)^2*
         (1 - v^2 + v^4)^2*(1 + v^6 - d*v^6 + v^12)^4*
         (1 - v^2 + v^4 - v^8 + v^10 + d*v^10 + v^12 + d*v^12 - v^14 + v^16 + 
           v^18 + d*v^18 - 2*v^20 - 2*d*v^20 + d^2*v^20 + v^22 + d*v^22 + 
           v^24 - v^26 + v^28 + d*v^28 + v^30 + d*v^30 - v^32 + v^36 - v^38 + 
           v^40)^2)/((1 + v^4)^4*(1 + d*v^8 + v^16)^2)}, 
      {prism5, cube, z, h, t, d, v}], {{1, 1}, {0, 0}, {1, 1}, {1, 1}, 
      {5, 5}, {16, 16}, {0, 80}}, 
     {JLink`Objects`vm1`JavaObject13962315472830465, 
      JLink`Objects`vm1`JavaObject6558186421092357, 
      JLink`Objects`vm1`JavaObject34409394179407876, 
      JLink`Objects`vm1`JavaObject22091399117668355, 
      JLink`Objects`vm1`JavaObject7437606996410371, 
      JLink`Objects`vm1`JavaObject14767442811158531, 
      JLink`Objects`vm1`JavaObject11850094630404099, 
      JLink`Objects`vm1`JavaObject22624671232950275, 
      JLink`Objects`vm1`JavaObject16059684653891586, 
      JLink`Objects`vm1`JavaObject16243309487849474, 
      JLink`Objects`vm1`JavaObject16954240157089794, 
      JLink`Objects`vm1`JavaObject1562758025838594, 
      JLink`Objects`vm1`JavaObject17412609334575106, 
      JLink`Objects`vm1`JavaObject8333840254763010, 
      JLink`Objects`vm1`JavaObject880314381500418, 
      JLink`Objects`vm1`JavaObject2925800693170178, 
      JLink`Objects`vm1`JavaObject18140637446537218, 
      JLink`Objects`vm1`JavaObject31535130308771842, 
      JLink`Objects`vm1`JavaObject24185907984728066, 
      JLink`Objects`vm1`JavaObject31412128602652674, 
      JLink`Objects`vm1`JavaObject30048544836550658, 
      JLink`Objects`vm1`JavaObject7539109371314178, 
      JLink`Objects`vm1`JavaObject33272191042715650, 
      JLink`Objects`vm1`JavaObject15340054712942594}, 
     {JLink`Objects`vm1`JavaObject9579416757731330, 
      JLink`Objects`vm1`JavaObject25647011181101058, 
      JLink`Objects`vm1`JavaObject24508753613160450, 
      JLink`Objects`vm1`JavaObject21345252333846530, 
      JLink`Objects`vm1`JavaObject35727762828296194, 
      JLink`Objects`vm1`JavaObject29364749888126978, 
      JLink`Objects`vm1`JavaObject23078756130226178, 
      JLink`Objects`vm1`JavaObject923170957688834, 
      JLink`Objects`vm1`JavaObject27447686403719170, 
      JLink`Objects`vm1`JavaObject25441781839560706, 
      JLink`Objects`vm1`JavaObject14494100522795010}, {}, 
     {{{JLink`Objects`vm1`JavaObject13962315472830466}}, 
      {{JLink`Objects`vm1`JavaObject9579416757731331}}, 
      {{JLink`Objects`vm1`JavaObject6558186421092358, 
        JLink`Objects`vm1`JavaObject25647011181101059, 
        JLink`Objects`vm1`JavaObject24508753613160451, 
        JLink`Objects`vm1`JavaObject21345252333846531, 
        JLink`Objects`vm1`JavaObject35727762828296195}}, 
      {{JLink`Objects`vm1`JavaObject34409394179407877, 
        JLink`Objects`vm1`JavaObject29364749888126979, 
        JLink`Objects`vm1`JavaObject23078756130226179, 
        JLink`Objects`vm1`JavaObject923170957688835}}, 
      {{JLink`Objects`vm1`JavaObject22091399117668356, 
        JLink`Objects`vm1`JavaObject7437606996410372, 
        JLink`Objects`vm1`JavaObject14767442811158532, 
        JLink`Objects`vm1`JavaObject11850094630404100, 
        JLink`Objects`vm1`JavaObject22624671232950276}}, 
      {{JLink`Objects`vm1`JavaObject16059684653891587, 
        JLink`Objects`vm1`JavaObject16243309487849475, 
        JLink`Objects`vm1`JavaObject16954240157089795, 
        JLink`Objects`vm1`JavaObject1562758025838595, 
        JLink`Objects`vm1`JavaObject17412609334575107, 
        JLink`Objects`vm1`JavaObject8333840254763011, 
        JLink`Objects`vm1`JavaObject880314381500419, 
        JLink`Objects`vm1`JavaObject2925800693170179, 
        JLink`Objects`vm1`JavaObject18140637446537219, 
        JLink`Objects`vm1`JavaObject31535130308771843, 
        JLink`Objects`vm1`JavaObject24185907984728067, 
        JLink`Objects`vm1`JavaObject31412128602652675, 
        JLink`Objects`vm1`JavaObject30048544836550659, 
        JLink`Objects`vm1`JavaObject7539109371314179, 
        JLink`Objects`vm1`JavaObject33272191042715651, 
        JLink`Objects`vm1`JavaObject15340054712942595}}}, 
     {{JLink`Objects`vm1`JavaObject30790074262093826, 
       {{1, JLink`Objects`vm1`JavaObject9579416757731332}}}, 
      {JLink`Objects`vm1`JavaObject18123200147750913, 
       {{-(Subscript[p, 6]/d), JLink`Objects`vm1`JavaObject6558186421092359}, 
        {1, JLink`Objects`vm1`JavaObject25647011181101060}}}, 
      {JLink`Objects`vm1`JavaObject17040510698913793, 
       {{-(Subscript[p, 5]/d), JLink`Objects`vm1`JavaObject6558186421092361}, 
        {1, JLink`Objects`vm1`JavaObject24508753613160452}}}, 
      {JLink`Objects`vm1`JavaObject8375406545600513, 
       {{-1, JLink`Objects`vm1`JavaObject6558186421092364}, 
        {1, JLink`Objects`vm1`JavaObject21345252333846532}}}, 
      {JLink`Objects`vm1`JavaObject21453879824613377, 
       {{-(Subscript[p, 16]/d), 
         JLink`Objects`vm1`JavaObject6558186421092368}, 
        {1, JLink`Objects`vm1`JavaObject35727762828296196}}}, 
      {JLink`Objects`vm1`JavaObject9836888051417089, 
       {{-t, JLink`Objects`vm1`JavaObject34409394179407878}, 
        {1, JLink`Objects`vm1`JavaObject29364749888126980}}}, 
      {JLink`Objects`vm1`JavaObject9747079463174145, 
       {{-(Subscript[p, 22]/d), 
         JLink`Objects`vm1`JavaObject34409394179407880}, 
        {1, JLink`Objects`vm1`JavaObject23078756130226180}}}, 
      {JLink`Objects`vm1`JavaObject35745987146285057, 
       {{-z, JLink`Objects`vm1`JavaObject34409394179407883}, 
        {1, JLink`Objects`vm1`JavaObject923170957688836}}}, 
      {JLink`Objects`vm1`JavaObject29806675330334721, 
       {{-1, JLink`Objects`vm1`JavaObject7484251884748802}, 
        {1, JLink`Objects`vm1`JavaObject22571714839838722}}}, 
      {JLink`Objects`vm1`JavaObject29463638691545089, 
       {{-1, JLink`Objects`vm1`JavaObject14704766554734594}, 
        {1, JLink`Objects`vm1`JavaObject13146466704949250}}}, 
      {JLink`Objects`vm1`JavaObject21494499343597569, 
       {{-1, JLink`Objects`vm1`JavaObject12888483538403330}, 
        {1, JLink`Objects`vm1`JavaObject26259260362981378}}}, 
      {JLink`Objects`vm1`JavaObject3553042632802305, 
       {{-((cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - 2*cube*d*t + 
            cube^2*d*t + d*prism5*t - 4*d^2*t^2 + 2*cube*d^2*t^2 - 
            3*d*prism5*t^2 + 2*d^2*prism5*t^2 + 2*cube*d*t^3 + 3*d^2*t^3 - 
            2*cube*d^2*t^3 + d*prism5*t^3 - d^2*prism5*t^3 - 2*cube*d*t^4 + 
            7*d^2*t^4 - 2*cube*d^2*t^4 - 8*d^2*t^5 + d^3*t^5 + 2*d^2*t^6 - 
            3*d^3*t^6 + d^2*t^7 + 3*d^3*t^7)/(d*(2 - d - t + d*t)*
            (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
             2*d^2*t^4))), JLink`Objects`vm1`JavaObject22091399117668357}, 
        {(-cube^2 + cube^2*d + d^2 - cube*d^2 - 2*d*prism5 + d^2*prism5 + 
           cube^2*t - cube*d*t - d*prism5*t + 5*cube*d*t^2 - 4*d^2*t^2 + 
           3*d*prism5*t^2 - 2*d^2*prism5*t^2 - cube*d*t^3 + 3*d^2*t^3 + 
           cube*d^2*t^3 - d*prism5*t^3 + d^2*prism5*t^3 - 2*cube*d*t^4 + 
           3*d^2*t^4 - 2*cube*d^2*t^4 + 2*d^3*t^4 - 2*d^2*t^5 - 3*d^3*t^5 - 
           4*d^2*t^6 + d^3*t^6 + 3*d^2*t^7 + d^3*t^7)/(d*(2 - d - t + d*t)*
           (2*d - cube*d - cube*t + 2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 
            2*d^2*t^4)), JLink`Objects`vm1`JavaObject7437606996410373}, 
        {-((-cube^2 + 4*cube*d - cube^2*d + d^2 - 3*cube*d^2 + cube^2*d^2 - 
            2*d*prism5 + d^2*prism5 - cube*d*t + d^2*t + d*prism5*t - 
            d^2*prism5*t - cube*d*t^2 - 5*d^2*t^2 + 2*cube*d^2*t^2 + 
            d^3*t^2 + 2*d*prism5*t^2 + d^2*prism5*t^2 - d^3*prism5*t^2 - 
            cube*d*t^3 + d^2*t^3 + cube*d^2*t^3 - d^3*t^3 - d*prism5*t^3 + 
            d^3*prism5*t^3 + 2*cube*d*t^4 - d^2*t^4 + 4*d^3*t^4 - 
            2*cube*d^3*t^4 + 3*d^2*t^5 - 3*d^3*t^5 - d^2*t^6 - d^3*t^6 - 
            d^2*t^7 + d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 
             2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4))), 
         JLink`Objects`vm1`JavaObject14767442811158533}, 
        {(cube^2 - 2*cube*d + d^2 + 2*d*prism5 - d^2*prism5 - cube^2*t + 
           2*cube*d*t + d^2*t - 3*cube*d^2*t + cube^2*d^2*t - d*prism5*t + 
           d^2*prism5*t - 3*cube*d*t^2 - d^2*t^2 + 3*cube*d^2*t^2 - d^3*t^2 - 
           2*d*prism5*t^2 - d^2*prism5*t^2 + d^3*prism5*t^2 + 2*cube*d*t^3 - 
           5*d^2*t^3 + cube*d^2*t^3 + 3*d^3*t^3 - cube*d^3*t^3 + 
           d*prism5*t^3 - d^3*prism5*t^3 + cube*d*t^4 + 5*d^2*t^4 - 
           cube*d^3*t^4 + d^2*t^5 - d^3*t^5 - d^2*t^6 - d^3*t^6 - d^2*t^7 + 
           d^4*t^7)/(d*(2 - d - t + d*t)*(2*d - cube*d - cube*t + 2*d*t - 
            cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject11850094630404101}, 
        {-((-cube + d - d*prism5 + d*t - prism5*t - d*prism5*t + cube*t^2 + 
            cube*d*t^2 - d*t^4 + d*t^5 + d^2*t^5)/(2*d - cube*d - cube*t + 
            2*d*t - cube*d*t - 4*d*t^2 + 2*d*t^4 + 2*d^2*t^4)), 
         JLink`Objects`vm1`JavaObject22624671232950277}, 
        {1, JLink`Objects`vm1`JavaObject27447686403719171}}}, 
      {JLink`Objects`vm1`JavaObject468429886717953, 
       {{(1 - 2*t^2 + t^3 + z + d*t*z + t^2*z - d*t^2*z - t^3*z - 2*t*z^2 + 
           d*t*z^2 + t^3*z^2 + 2*z^3 - 4*d*z^3 + d^2*z^3 - d*t*z^3 + 
           t^2*z^3 + 4*d*t^2*z^3 - 2*d^2*t^2*z^3 - t^3*z^3 - d*t^3*z^3 + 
           d^2*t^3*z^3 - 2*z^4 - 2*t*z^4 + t^2*z^4 - d*t^3*z^4 + t^2*z^5 + 
           d*t^3*z^5 + z^6 + 2*t*z^6 - 2*t^2*z^6 + d*t^2*z^6 - d*t^3*z^6 + 
           z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22091399117668359}, 
        {(1 - 2*t^2 + t^3 + z + 2*t*z - 2*t^2*z + d*t^2*z - d*t^3*z + 
           t^2*z^2 + d*t^3*z^2 - 2*z^3 - 2*t*z^3 + t^2*z^3 - d*t^3*z^3 + 
           2*z^4 - 4*d*z^4 + d^2*z^4 - d*t*z^4 + t^2*z^4 + 4*d*t^2*z^4 - 
           2*d^2*t^2*z^4 - t^3*z^4 - d*t^3*z^4 + d^2*t^3*z^4 - 2*t*z^5 + 
           d*t*z^5 + t^3*z^5 + z^6 + d*t*z^6 + t^2*z^6 - d*t^2*z^6 - 
           t^3*z^6 + z^7 - 2*t^2*z^7 + t^3*z^7)/((2 - d - t + d*t)*z^2*
           (1 + t - t^2 - z + t^2*z + d*t^2*z - d*t*z^2 - t^2*z^2 - 
            d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject7437606996410375}, 
        {-((1 - 2*t^2 + t^3 + z - t*z + d*t*z - d*t^2*z + t*z^2 - d*t*z^2 - 
            t^2*z^2 - d*z^3 - t*z^3 + 2*t^2*z^3 + 2*d*t^2*z^3 - d^2*t^2*z^3 - 
            3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 2*t^2*z^4 + 
            4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 3*d*t^3*z^4 + 
            d^3*t^3*z^4 - 2*t*z^5 + d^2*t*z^5 + t^2*z^5 - z^6 + d*z^6 + 
            t*z^6 + t^2*z^6 + d*t^2*z^6 - d^2*t^2*z^6 + 3*z^7 - d*z^7 - 
            2*t^2*z^7 - d*t^2*z^7 - t*z^8 - t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject14767442811158535}, 
        {-((-t - t^2 + t^3 + 3*z - d*z - 2*t^2*z - d*t^2*z - z^2 + d*z^2 + 
            t*z^2 + t^2*z^2 + d*t^2*z^2 - d^2*t^2*z^2 - 2*t*z^3 + d^2*t*z^3 + 
            t^2*z^3 - 3*d*z^4 + d^2*z^4 + t*z^4 + d*t*z^4 - d^2*t*z^4 - 
            2*t^2*z^4 + 4*d*t^2*z^4 + 2*d^2*t^2*z^4 - d^3*t^2*z^4 - 
            3*d*t^3*z^4 + d^3*t^3*z^4 - d*z^5 - t*z^5 + 2*t^2*z^5 + 
            2*d*t^2*z^5 - d^2*t^2*z^5 + t*z^6 - d*t*z^6 - t^2*z^6 + z^7 - 
            t*z^7 + d*t*z^7 - d*t^2*z^7 + z^8 - 2*t^2*z^8 + t^3*z^8)/
           ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
             d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + 
             z^4 + t*z^4 - t^2*z^4))), 
         JLink`Objects`vm1`JavaObject11850094630404103}, 
        {(-1 - t + t^2 + 2*z - 2*d*z - 2*t*z - z^2 + t*z^2 - d^2*t*z^2 + 
           2*z^3 + 2*d*t*z^3 - 4*z^4 + 4*d^2*z^4 - d^3*z^4 + 2*d*t*z^4 - 
           3*d*t^2*z^4 + d^3*t^2*z^4 + 2*z^5 + 2*d*t*z^5 - z^6 + t*z^6 - 
           d^2*t*z^6 + 2*z^7 - 2*d*z^7 - 2*t*z^7 - z^8 - t*z^8 + t^2*z^8)/
          ((2 - d - t + d*t)*z^2*(1 + t - t^2 - z + t^2*z + d*t^2*z - 
            d*t*z^2 - t^2*z^2 - d*t^2*z^2 - z^3 + t^2*z^3 + d*t^2*z^3 + z^4 + 
            t*z^4 - t^2*z^4)), 
         JLink`Objects`vm1`JavaObject22624671232950279}, 
        {1, JLink`Objects`vm1`JavaObject25441781839560707}}}, 
      {JLink`Objects`vm1`JavaObject31508670776868865, 
       {{-((v^8*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 - v^2 + 2*v^4 - 2*v^6 + 4*v^8 + d*v^8 - 4*v^10 + 2*d*v^10 + 
             8*v^12 - 4*v^14 + 2*d*v^14 + 9*v^16 + 2*d*v^16 - 2*v^18 + 
             d^2*v^18 + 9*v^20 + 2*d*v^20 - 4*v^22 + 2*d*v^22 + 8*v^24 - 
             4*v^26 + 2*d*v^26 + 4*v^28 + d*v^28 - 2*v^30 + 2*v^32 - v^34 + 
             v^36))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^2*
            (1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16059684653891588}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject16243309487849476}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject16954240157089796}, 
        {(v^8*(1 - v + v^2 - v^3 + v^4)^2*(1 + v + v^2 + v^3 + v^4)^2*
           (1 - 2*v^2 + 2*v^4 - 3*v^6 + 3*v^8 - 4*v^10 + 4*v^12 - d*v^12 - 
            4*v^14 + 3*v^16 - 3*v^18 + 2*v^20 - 2*v^22 + v^24))/
          ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16)^3), 
         JLink`Objects`vm1`JavaObject1562758025838596}, 
        {-((v^16*(1 - v^2 + v^4)*(1 + d*v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)^
             2*(1 + v + v^2 + v^3 + v^4)^2)/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16)^3)), 
         JLink`Objects`vm1`JavaObject17412609334575108}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject8333840254763012}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 - v^2 + 2*v^4 - 2*v^6 + 2*v^8 - 4*v^10 + d*v^10 + 2*v^12 - 
             2*v^14 + 2*v^16 - v^18 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject880314381500420}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject2925800693170180}, 
        {-((v^6*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (2 + 2*v^4 - 2*v^6 + v^8 - 4*v^10 + d*v^10 + v^12 - 2*v^14 + 
             2*v^16 + 2*v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*
            (1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject18140637446537220}, 
        {-((v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4)*
            (1 + v^2 + v^4 - v^6 - 2*v^10 + d*v^10 - v^14 + v^16 + v^18 + 
             v^20))/((1 - v + v^2)*(1 + v + v^2)*(1 + d*v^8 + v^16)^2)), 
         JLink`Objects`vm1`JavaObject31535130308771844}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject24185907984728068}, 
        {-((1 + 3*v^2 + 4*v^4 + 6*v^6 + 6*v^8 + 8*v^10 + 6*v^12 + d*v^12 + 
            8*v^14 + 6*v^16 + 6*v^18 + 4*v^20 + 3*v^22 + v^24)/
           ((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject31412128602652676}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject30048544836550660}, 
        {(v^4*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + v^4))/
          (1 + d*v^8 + v^16), JLink`Objects`vm1`JavaObject7539109371314180}, 
        {-((v^2*(1 - v^2 - v^4 - 5*v^6 - 4*v^8 - 8*v^10 + d*v^10 - 4*v^12 - 
             5*v^14 - v^16 - v^18 + v^20))/((1 - v + v^2)*(1 + v + v^2)*
            (1 + v^4)*(1 + d*v^8 + v^16))), 
         JLink`Objects`vm1`JavaObject33272191042715652}, 
        {(v^2*(1 - v^2 + v^4)*(1 - v + v^2 - v^3 + v^4)*(1 + v + v^2 + v^3 + 
            v^4))/(1 + d*v^8 + v^16), 
         JLink`Objects`vm1`JavaObject15340054712942596}, 
        {1, JLink`Objects`vm1`JavaObject14494100522795011}}}}, {}]][$Failed], 
 HoldPattern[ev["PlanarGraph(22,Vector(List(), List((15,22), (17,26), \
(18,25)), List((14,22), (20,24), (16,27)), List((15,26), (16,22), (21,27)), \
List((9,28), (17,25), (11,26)), List((12,24), (13,28), (20,27)), \
List((11,28), (21,26), (13,27)), List((18,22), (9,25), (10,28), (19,23)), \
List((10,23), (12,28), (14,24), (19,22))),ArrayBuffer((1,0), (1,0), (1,0), \
(1,0), (1,0), (1,0), (2,0), (2,0)),0)"]] :> 
  EvaluateClosedDiagram[SpiderAnalysis[
     JLink`Objects`vm1`JavaObject23175253291171841, 
     Manifold[{cube -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), h -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + 
           d*v^14 - v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + 
           v^26 - d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + 
           v^44 + v^48))/(v^22*(1 + d*v^2 + v^4)), 
       prism5 -> (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + 
           d*v^10 - 34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       t -> (1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)/
         ((1 + v^4)*(1 + d*v^8 + v^16)), z -> -v^6, Subscript[p, 1] -> 0, 
       Subscript[p, 2] -> d, Subscript[p, 3] -> -(d*v^6), 
       Subscript[p, 4] -> d, Subscript[p, 5] -> d/v^12, 
       Subscript[p, 6] -> d*v^12, Subscript[p, 7] -> d, 
       Subscript[p, 8] -> d*v^24, Subscript[p, 9] -> d*v^12, 
       Subscript[p, 10] -> d/v^24, Subscript[p, 11] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 12] -> d/v^12, 
       Subscript[p, 13] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^10*(1 + d*v^2 + v^4)), Subscript[p, 14] -> d, 
       Subscript[p, 15] -> (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - 
           v^16 + d*v^16 - d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - 
           d*v^28 - v^32 + d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + 
           v^48))/(v^34*(1 + d*v^2 + v^4)), Subscript[p, 16] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
           d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
           d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48))/
         (v^22*(1 + d*v^2 + v^4)), Subscript[p, 17] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 18] -> d*v^24, 
       Subscript[p, 19] -> d/v^24, Subscript[p, 20] -> 
        (d*(1 + v^4 - v^10 - v^12 + d*v^12 + d*v^14 - v^16 + d*v^16 - 
            d*v^20 + v^22 - 2*d*v^24 + d^2*v^24 + v^26 - d*v^28 - v^32 + 
            d*v^32 + d*v^34 - v^36 + d*v^36 - v^38 + v^44 + v^48)^2)/
         (v^44*(1 + d*v^2 + v^4)^2), Subscript[p, 21] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 22] -> -(d/v^6), 
       Subscript[p, 23] -> -((d*v^6*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + 
            v^20))/((1 + v^4)*(1 + d*v^8 + v^16))), Subscript[p, 24] -> 
        -((d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/(v^6*(1 + v^4)*
           (1 + d*v^8 + v^16))), Subscript[p, 25] -> 
        (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20)^2)/
         ((1 + v^4)^2*(1 + d*v^8 + v^16)^2), Subscript[p, 26] -> d, 
       Subscript[p, 27] -> d/v^12, Subscript[p, 28] -> d*v^12, 
       Subscript[p, 29] -> d/v^12, Subscript[p, 30] -> d/v^12, 
       Subscript[p, 31] -> d*v^12, Subscript[p, 32] -> d*v^12, 
       Subscript[p, 33] -> d^2, Subscript[p, 34] -> d, Subscript[p, 35] -> d, 
       Subscript[p, 36] -> d^2, Subscript[p, 37] -> d^2, 
       Subscript[p, 38] -> 0, Subscript[p, 39] -> -(Subscript[p, 40]/v^6), 
       Subscript[p, 41] -> Subscript[p, 40], Subscript[p, 42] -> 
        Subscript[p, 43], Subscript[p, 44] -> d^2, Subscript[p, 45] -> 
        d*v^12, Subscript[p, 46] -> Subscript[p, 40], 
       Subscript[p, 47] -> -(Subscript[p, 40]/v^6), Subscript[p, 48] -> 
        -(Subscript[p, 40]/v^6), Subscript[p, 49] -> Subscript[p, 50], 
       Subscript[p, 51] -> d^2, Subscript[p, 52] -> d/v^12, 
       Subscript[p, 53] -> (d*(1 + 4*v^2 + 9*v^4 + 6*v^6 + 6*v^8 - 10*v^10 + 
           d*v^10 - 17*v^12 + 10*d*v^12 - 33*v^14 + 12*d*v^14 - 9*v^16 + 
           15*d*v^16 + 3*v^18 + d*v^18 + 51*v^20 + 7*d*v^20 + d^2*v^20 + 
           66*v^22 - 24*d*v^22 + 7*d^2*v^22 + 87*v^24 - 7*d*v^24 + 
           9*d^2*v^24 + 27*v^26 - d*v^26 + 4*d^2*v^26 + 9*v^28 + 31*d*v^28 + 
           6*d^2*v^28 - 59*v^30 + 27*d*v^30 + 6*d^2*v^30 - 66*v^32 + 
           80*d*v^32 - 4*d^2*v^32 + 2*d^3*v^32 - 59*v^34 + 27*d*v^34 + 
           6*d^2*v^34 + 9*v^36 + 31*d*v^36 + 6*d^2*v^36 + 27*v^38 - d*v^38 + 
           4*d^2*v^38 + 87*v^40 - 7*d*v^40 + 9*d^2*v^40 + 66*v^42 - 
           24*d*v^42 + 7*d^2*v^42 + 51*v^44 + 7*d*v^44 + d^2*v^44 + 3*v^46 + 
           d*v^46 - 9*v^48 + 15*d*v^48 - 33*v^50 + 12*d*v^50 - 17*v^52 + 
           10*d*v^52 - 10*v^54 + d*v^54 + 6*v^56 + 6*v^58 + 9*v^60 + 4*v^62 + 
           v^64))/((1 - v + v^2)*(1 + v + v^2)*(1 + v^4)^3*
          (1 + d*v^8 + v^16)^3), Subscript[p, 54] -> 
        (d*(1 + 6*v^2 + 20*v^4 + 35*v^6 + 42*v^8 + 21*v^10 + d*v^10 - 
           34*v^12 + 15*d*v^12 - 117*v^14 + 47*d*v^14 - 171*v^16 + 
           85*d*v^16 - 128*v^18 + 92*d*v^18 + 29*v^20 + 71*d*v^20 + 
           d^2*v^20 + 305*v^22 - 14*d*v^22 + 15*d^2*v^22 + 555*v^24 - 
           122*d*v^24 + 51*d^2*v^24 + 652*v^26 - 164*d*v^26 + 73*d^2*v^26 + 
           425*v^28 - 87*d*v^28 + 86*d^2*v^28 - 22*v^30 + 128*d*v^30 + 
           63*d^2*v^30 - 610*v^32 + 385*d*v^32 + 40*d^2*v^32 + 8*d^3*v^32 - 
           966*v^34 + 637*d*v^34 - 28*d^2*v^34 + 20*d^3*v^34 - 946*v^36 + 
           599*d*v^36 - 16*d^2*v^36 + 28*d^3*v^36 - 386*v^38 + 363*d*v^38 + 
           19*d^2*v^38 + 20*d^3*v^38 + 355*v^40 - 60*d*v^40 + 95*d^2*v^40 + 
           24*d^3*v^40 + 1096*v^42 - 386*d*v^42 + 146*d^2*v^42 + 
           16*d^3*v^42 + d^4*v^42 + 1356*v^44 - 620*d*v^44 + 230*d^2*v^44 + 
           8*d^3*v^44 + 3*d^4*v^44 + 1096*v^46 - 386*d*v^46 + 146*d^2*v^46 + 
           16*d^3*v^46 + d^4*v^46 + 355*v^48 - 60*d*v^48 + 95*d^2*v^48 + 
           24*d^3*v^48 - 386*v^50 + 363*d*v^50 + 19*d^2*v^50 + 20*d^3*v^50 - 
           946*v^52 + 599*d*v^52 - 16*d^2*v^52 + 28*d^3*v^52 - 966*v^54 + 
           637*d*v^54 - 28*d^2*v^54 + 20*d^3*v^54 - 610*v^56 + 385*d*v^56 + 
           40*d^2*v^56 + 8*d^3*v^56 - 22*v^58 + 128*d*v^58 + 63*d^2*v^58 + 
           425*v^60 - 87*d*v^60 + 86*d^2*v^60 + 652*v^62 - 164*d*v^62 + 
           73*d^2*v^62 + 555*v^64 - 122*d*v^64 + 51*d^2*v^64 + 305*v^66 - 
           14*d*v^66 + 15*d^2*v^66 + 29*v^68 + 71*d*v^68 + d^2*v^68 - 
           128*v^70 + 92*d*v^70 - 171*v^72 + 85*d*v^72 - 117*v^74 + 
           47*d*v^74 - 34*v^76 + 15*d*v^76 + 21*v^78 + d*v^78 + 42*v^80 + 
           35*v^82 + 20*v^84 + 6*v^86 + v^88))/((1 - v + v^2)^2*
          (1 + v + v^2)^2*(1 + v^4)^4*(1 + d*v^8 + v^16)^4), 
       Subscript[p, 55] -> (d*(1 + v^2 - 2*v^10 + d*v^10 + v^18 + v^20))/
         ((1 + v^4)*(1 + d*v^8 + v^16)), Subscript[p, 56] -> d, 
       Subscript[p, 57] -> d, Subscript[p, 58] -> 
        (d*(1 + 8*v^2 + 35*v^4 + 90*v^6 + 165*v^8 + 195*v^10 + d*v^10 + 
